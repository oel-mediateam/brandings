%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: BSSM_HorizontalAlternate_2C.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: marla norton
%%CreationDate: 4/28/09
%%BoundingBox: 0 0 712 552
%%HiResBoundingBox: 0 0 712 552
%%CropBox: 0 0 712 552
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.1%AI9_PrintingDataBegin%AI3_Cropmarks: 36.0000 36.0000 676.0000 516.0000
%ADO_BuildNumber: Adobe Illustrator(R) 13.0.1 x420 R agm 4.4379 ct 5.1039%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors: 
%%DocumentCustomColors: (PANTONE 576 C)
%%+ (PANTONE 546 C)
%%CMYKCustomColor: 0.4900 0 1 0.3900 (PANTONE 576 C)
%%+ 0.9500 0.0900 0 0.8300 (PANTONE 546 C)
%%RGBCustomColor: 
%%EndComments
                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">BSSM_MainLogo_2C</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2009-04-28T10:43:21-05:00</xap:CreateDate>
         <xap:ModifyDate>2009-04-28T10:43:21-05:00</xap:ModifyDate>
         <xap:MetadataDate>2009-04-28T10:43:21-05:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>60</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAPAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FWK+bfzB0rQGNpG&#xA;Pruqlai0jOyV6GVv2fl1/XkhHqWnJmEdur55/Mf87vzYgSGYwDRrK6Z1gVXUyELQ7iNqrUN0Zmy/&#xA;HCEuRunCnmmeezGLH8970pTVLD1Zz/x8QyuN/ExvyJ3/AMsYy0vcWPiFPU89fmnpmqWLWGqtBeal&#xA;BHe2elSzxy2kyuK+kI5QjxSfSwY7csRwEHujsgZJgjfm9x8o/m09za2i+ZbQ6fNPGhaboqOwFVlX&#xA;9mh/aG3sMooE0HMhqP5z0hHR0V0YMjAFWBqCDuCCMi5TeKsb8ia5qGsabe3F8ytJBqF1bRlVCj04&#xA;n4oNvbMfT5DIEnvLCErDFx568xn8s9W19ZIzqlpfG3t2KDhw+sxxAFen2XOY41E/BMuoLDjPCSmh&#xA;8/y3nkfWNSt0Flr+kQyLfWMg5GC4QdwftIafCcs/M3jJG0gnj9JPVV1DzRq0GpeSoI3QR62HN+Co&#xA;PLjAkg4/y/E3bDLNIGH9LmkyNjzVdM813NprHmPTNekUfopTqFpMFC89PZa12oGMRHFj3OGGYiUh&#xA;Lpv8FEtyCkl95v8ANkP5f2WuyzQ2d9qt9H6JeNTHBaXDkRhgetEo3I5VLNMYhLkSfsYmZ4bTbTdU&#xA;1yHQNdvp9fsdbmtLV5bVrJIwIXSORv3gRnryIFK+GWQnIRkTISodGQJo72kvkXz35hvdY0mx1G9t&#xA;NUj1i0kuWW1QJNZPGobjNxJXi3TcVr+NWn1EjIAkHiHyYwmSRfVMNf8ANHml/OUugaTdWGmyQQRT&#xA;Wkeoo5F+0leSo6kUVKUovxVr9E8maficMSB7+qZSN0Ez1LzBq1t548u6MGRbXULe5kvEC1q8MfJe&#xA;LHcAHLJZJDJGPeGRkeIBj2v3v5k6br+kaYut2jLrU00cDfVB+6EShxyqfi2NMoySyxkBxD1eTCRk&#xA;CBfNO9cuvO+h6FZal68eqy2Du+t28UIjM9uWJ5Qjcq8Sdu/X53ZDkhEHnXNlIyAt3lPzNq3mjV7j&#xA;UrP9x5TgX0bT1I6S3Uw+3J8W6onT3P0jHDllklY+j71jIyN9E98za9baBoN7rFypkis4+fpqaFmJ&#xA;Cote3JmArl2XIIRMj0ZSlQtiiD84JbAass+nJOy+suhGFvs0qIjNyrzp70r3zG/f1xbe5h6+al5i&#xA;/MO8k/Lyx8yaOy2U93cRQSicLIIiXaOUNWg+Fl67bYMupPhCcdrKJZPTYT7yXfX11Hdm78wWGvFC&#xA;nBrARgRVDVD+mz/a7V8MuwSJu5CXuZwPnbJcyGbsVdirsVdirsVdirC/zT8+DyloSm1KtrGoMYdP&#xA;RhUKR9uYg7ERgj6SO1cuw4+I78g4+ozcA25l5FoFrJLW4uHaa4lYvLK5LMzNuWYnck5TqcjiY4pN&#xA;+d0NinkcPNFznFzElo9SODtUsdutY1Yb5XoZE5PgzzUAHz7m4cdET397cxW8M8zyx2qlLZXJbgpN&#xA;eK16CvbAAAh9IeXNK1uDy1away3O4WFNnJeZTT4llc7Ma9KDYbb05HUTyx4/S5EYnh3Zj+V/nmXT&#xA;9Zj8ranIWtLokaXKx/u5Rv6NT+y/7Pgdu+2WY8UeIM8GWpcJex5Q5zz2wtfPvlaXVLDS9Fi1mxu7&#xA;ua8sbv61HAY/XPIpMj0Lcf8AJ/2sGMcmOxGPECb5tQEo8ha2byJrMH5Wz6BGI7jWbqZLmdUYJH6j&#xA;XaTOFZ+OyotN+tMTp5DCY/xH9aOA8NdVf8yfIN7q8M+p+X2EGtSwNa3cVQqXdu9AY5KkLyTqrHw+&#xA;VDqtOZbx+r705IXuOaI1Hy1rE2p+SJ44QYtFDjUDzUcOUCIKAn4viU/ZyUsUiYf0eaTE2PJT/Mby&#xA;HceZLvSrizcxMJBaaoysFLWDsHcVJ34smwH82DVaczII+PuRkhaM/MXy/fap5dtrLS7JLs293bzG&#xA;yZkjRoYT8SfH8NKbUyWpxmUAIjqnJGxsoWOmX8uha5YxeVbby9Jd2kkcIt5bZhPI8bqob0VSnHl1&#xA;bxwRiTGQ4BGx5KBsdqSfSPIeseXbfQNY0azVdXhiS18waesiKtxCw+NuRIT1EYVBrv8Arqhp5QEZ&#xA;RHq6hiIEUQi/zE0TzNr/ANY0qLQre7tmMbaXrP1hIZLR6KXLqQXPxA/Y6jJanHOe3Dfce5OQE7Um&#xA;V75c1d/OvlnUh/pFpplrcQ3t0zKGLyRcFbiTyPI+GWHFLxInoAkxPECreadC1O/80+Vr+1iD2umT&#xA;3D3jllUqskaqtATVqkdsObGZTiRyCZRJIZHfRPLZXESCryRuqjpuVIGXyFgsikX5d6NqGjeTNN0z&#xA;UIxFeWyyCaMMrgFpXYfEpIOzDKtNAxxgHmxxihSN82eX4vMPl2+0aV/SF3HxWSleLqwdGp3AdRks&#xA;2PjiY96ZRsUxqPU/zZjsBpp0O1fUFX0hrZu4/q5pt6xgI9WvelPo7ZQJ56rhF99sLnypC6z+Xl9D&#xA;+Xum+W9PVb24truGe6diqB6yM8zfGRtVth4ZDJpiMQgNzaDj9NM7sNJ0vTw4sLOC0ElDIII0i5U6&#xA;cuAFaVzNjCMeQptAARWSS7FXYq7FXYq7FXYq+Xvzd8wPq/5nTw8ibbTCtlAvYGMVk/5KM34ZscUa&#xA;x+90+pnxZPcyHQgvopTwzT6jm5ONR/MHyw3mTynd6dCoa8UCeyqQP30e6ipIA5Cq1PjlOmzeHkBP&#xA;LqzyQ4g+b5/K+rw6zaaO8DR3t8Ylt45QYzylbhQ8gKcXBU+4Ob3xI0TewcIWz7TfyfuNG816IuuX&#xA;lpPY3U7D04pSkjPFG0ijhIq8lLqqnjvv2rmHLWiUJGANht8OiBLq9uu6cDmqx83Kk8184Ty21xDc&#xA;27mO4gkWSGRdmV0aqsD4gjN7pOTgZjRfUXlrWF1ny9puqrQfXbaKZlHRWdQWX/YtUZizjRIdtjlx&#xA;RBYv5M89atqPmzWvLOuRW8F9pxLWrW6ugliVqFiJHfqrIwp2OYODUSlMwlzDGEySQU2/MPzafKvl&#xA;ifVI1R7vkkNnFKCUaVz0biVNAgZuvbLdTm8OF9WWSXCLQX5X+epvN2hy3N2kUWo2sxiuYoQwTiRy&#xA;jYBi5FRUdeoOQ0uo8SNnmEY58QUPzI896n5euNJ0zRYIbrWNVm4RxThmUJUIPhRozVnYUNexwanU&#xA;GBAjvIoyTIoBb+ZvnnWvKdppL2UVtPLeymK4MySFfhCmqBZFI3PcnBqtRLGBVbrkmY0nHn3zjB5S&#xA;8vvqkkX1iVpFgtYK8Q0rgsOTUNAFUn6Mt1Gbw42ynPhFsG/xz+ctpZjWr7y5byaSwEjwxAiVIqV5&#xA;cRLJIu25LIae2Yn5jOBxGPpauOfOnq11dW9pbS3VzIsVvAhkmlY0VVUVJPyGbGRAFlyCXlUv5teb&#xA;tfv5rXyNoYu7eL4TeXINCT0b7USR+wZjmuOsnM1ji0eKT9Ibl/ML819AUTeZPLCTWSCss9qTVV8W&#xA;eN7iNfpAxOpzQ+qOy+JMcw9Q1LUrHTLCe/vplgtLZS80rdAB8upPQAdc2E5iIs8m4mnla/ml+YHm&#xA;W4mXyXoCvYxniLu53JI3+2zxRKSP2asc135vLkP7uOzR4sj9IXf8rU88+W7uGLzvoIhs5SFF5a9j&#xA;SvUPLE5/yQy4fzeSB/eR2XxZD6g9UsL+z1CyhvbKZZ7S4UPDMm4ZT/n0zYRkJCxybwbebeVfzjN5&#xA;5tvNA1yOC1X6xJb6fdRB1BZJCipLyZ927MKCvzzBw625mMmmObei9QzYN7DfKHnDWdY82eYtJu7e&#xA;GOz0mUx2ksaOrsPUdPjZmZSaL2AzFw55SnKJ5BrhMkkJJ54/M3zBZ68+ieXLO3LQALc39+4ii9Q7&#xA;8YzI8KfCOpJPy2wZcmUy4ccb86a8majQb8l/mybmW5t/N13o+mGBR6V1Hf2wR2B4lSvrSb96g0y3&#xA;AM5NTjSw1A6kfNEJ+atkfOb2jazoI8qCOqah+kLT1zJ6YNOP1mtPUqP7vJ8GbxK4fR3r+Yjxc417&#xA;2vOH5rW9jJp0vlm/0XV7Z3caijahbLIFBQIIj66fE3Jv2Wp4ZHUDNGuGN96yzx6EH4s30fXNM1ez&#xA;jurC4imV1DMkckchQnqremzCoOx3y0XV03RkDyYx+ZXnXVfK/wCh/qEUEv6QuTBN66u1FHHdeDpv&#xA;8XeuYmqzyx1XVjkmY0zXMtsfGHmm4mHnPWJ5a+t+kLlpKih5GZuW3bNvEekDydDM+o+96h5X03Wp&#xA;rOCUWUoSZQYSyleY8UDULfRmm1MRdOdiBrkn7wzwP6dxE8Mg6pIpU/cc10okN7D/AD9+X0HmcW97&#xA;bXLWGt2P+8d4tabNzVXp8Qo24Zdx75fptUcexFxLXkx8W/VhGmXHmzyVqEg87wtqugXUvqm/p9cE&#xA;dytAkoL/ABp0H2lHt0zOkIZR+7PDIfDbuaN4n1Cwn9n+Zn5d/Wrm2sLn6u9xNzaWSORI5pHFC4Zh&#xA;8PQV5ccr/K5dr3ZeJEXTH/N98s90I1NQNzTNnpoUHEyysvpT8mWZvyz0Mkkn05Rv4CeQDMTUfWXa&#xA;6X+7DGfzSjk8s+ddC8726kQFxa6lxB3ABG/u8JYD/VGafVjw8kcg+P49ycvpkJKfneRPOf5laL5Y&#xA;t29bTNOUXmoMu6kOBI247GPgoPi2DOfFyiA5BE/VIB1jTyZ+c01pT09J8zKGiA2USyMStAPCYMoH&#xA;YNjH91nrpL8feo9M/ev8qg+cPzZ1PzCx9TS9CX6tYHqpf4kQivY/vJPYkYcP73MZdIrH1Tvud/zk&#xA;F/vJoH/MVJ/xFce0eUU5+jL/AMzPJcnmzy2bG3kWK9t5BcWjP9kuqspRj1AYN99MydVg8SNDmzyQ&#xA;4gxDyx+a2qaJeQ+XPPdm9lcxhY4tSI2YD4VaWlQwNP7xDTx7nMbFqzA8OQV5tccpG0k3/PSe+Hkh&#xA;YLNXk+uXcUMyxgsTGEeXtXblGuW68nw9upZZvpZF5UtdH8ueUNMt2eOygW3jeV5mWPlK6B5GYsRu&#xA;STmRpsdQAAZxqMWrr8yPINq3CTX7F5P99QzpPJ4fYiLt+GZIwzPRgc8B1Dzb86vPOmar5bs7PTJL&#xA;k201zznmezvIY3Ea1VFkkhSN/tcqBuwzC12CRiATGPvLTmzAja/kWbaLq+rafo1pp+h+TdQFrbRi&#xA;NDdS2NopoBViPXlkqxqSSnXMvHghACPEGwZJVtE/YFPzFbeevMGhXVhd6LpNlaTxsJDc3008ibVD&#xA;qsdsiKyncHmccuPFKJEiSFl4khyA+P7GIfkx/jTU/K09tY6va6XZ2dyyIos3uZTzVXNJJbjgo36e&#xA;nmLoMmPhIANDvP7GvEJkcwPh+1IfKf5fT+bW81wzamyajY3RFpKLe0WN5XaXkZP3LSgNw/ZfbrQ0&#xA;yjCYTMqhGx32f0sY4TK7P3fqTv8ALt7bUNRuvK3nK71Ua9bMUjjk1O9iimVdyvCKaNCwG46hl3He&#xA;t2m10ieCQAkPJljgDtIm/eWvy98m+V73z/5utL/Tor+3spyttHeVuQo9Zxv6xfl035Vrjp9VkOSY&#xA;J2XHhgZGwt82/l5feUfMk3mfy3o1nqGjyqfrWmG2jdYloC4EQXZKryDJ9nvt1qzzz458cSTH3plh&#xA;ETYApnn5eebvKfma3aXTbKKw1G0AE9nwRXjVhSqMoXknaop7gbZfg1Yyjz7m7GYnkGLwf+tD3H/M&#xA;KP8AqFTMQf41+O5j/lFT84tPsbnzf5FiuLeOWO6vmiuFdQRIhmtlKv4ihIyzVyPHAX1/UjNEEhin&#xA;mDyTpHkDzSl5e6RDqnlDUX4cniVprcnfiktOaug3FGHNdjuNonNl087smBapYYxO42Tb8xLe20az&#xA;8u3nlHUp4rHUpuKQzSvqFmUPEqy296Z0Qjl+zxp7HL9TrNokiMgU5IVXCSPt+97ZmS5jwLzb+V/m&#xA;O38y61rOlWBvJ7y+eW0mLRqsKShJGdVkK8pGlmKIRXjxJpWhA1upyeGI4/iXXnTniJ83nOuaTr+n&#xA;3ZGtW1xBdSEsWuVcM/iQzfa+YOc1OEgfUFkCOaL0fzp5i0pVihummtAamyuP3sJ+St9j5oQffJQz&#xA;SjyOyRMhm+ked9B1MKkzjSrw9Y5yTbsf8ialU+UgoP5jmXDPGXPYtgmCr+bLzUtG8u3urLaPPFDC&#xA;7xSxr6sLMBRf3iVQrXrQ9M2GDBxSHcxySIFvla20/Ub24WC1tpbi4kNFiijZ3YnsFUE5vacIEcg9&#xA;F8u+V9U062Y+ale0CU+q6cxH1x6EgpIlS1uop/uwBt/hUjpg6rtOGIUPVL8c0+BZ32fY/lHTTpvl&#xA;fSrFoVt3gtYhLCi8VSQqC6gezE9d/HfMeMpEAy+rq7aEaiAx7XNe0fXbN9M1fytrVxZM4ZgbR1HJ&#xA;DUMGikD/AHZZk00ZiiYke9qOUHYxl8ko8p6r5I04tqvlrytrTC6T0TdpbzyhkjbiVBmlboyU28Mq&#xA;0+lxj1RI+aI5IjcRkq+cNX8v6nZpqWv+TNbnt9LDTR3FIbdo1Yryba7hfsNjuOtMOo0+MjimRt7/&#xA;ANCyyA84y/HxV/Kkur6VpSR+XPI72VldkXNLrUYlJMiijNvcyD4QNu3hksODFGPpPPyP6VjKQG0f&#xA;tSH81vMHmW0ttKfWPLujyLNMRbJJdXN2Y3oCSwWGzA6gbFso1csMa4gZfj3scsp7WAm3nzWPzM8v&#xA;aLDqj6hZPF9YWK7jsNOkLxwsrEymSe4lXYqAKoBU9ctz54YxfCZfH9jKfiAXY+X7WA+Z/Os+uWVr&#xA;Z6Rr2r6nrc0qrDH9VsbZEDijKvoxGcuxA6SUp8sws3aEJbQh6vPf9LVIkj6iT8Ho9/8AlUupeTvq&#xA;N5qOoy629shNxcaheSQrcqg5fuRL6PFm5D7BoCaZnSnMwoUJV3BuOnBjuTfvLz3ytq/lfyix0bzt&#xA;5QgF/bsfT1I2kM0zrWo5NIPiA7MjfRXc4EO0ckPTktqhGEdpRZZcfnf5dggWw8p6NPdXb/Db26xL&#xA;DFyIoKJHydu2wUfPGfaIP0gktvigbRDKvzB8oy+bvKP1MUi1KPhc2vLZRMqkFG7gMGK/j2y/UYTk&#xA;hXVsyQ4gwzyz+cEnl+1TQfOdhdW9/YqIluFQEuiii81JXen7S1DdcxcWt4BwzBsNcctbSa8zfmvd&#xA;earaTy75K0+5nub5TFPdOoXhG+zcQCwUEbF3Ip+ODLqzkHDjB3WWXi2iz38vPKK+VfLMGmMwkunY&#xA;z3ki/ZMzgA8fZQoUeNMzdNh8OFdW3HDhFMQ/JX/js+c/+Y9f+Jz5i6H6p+/9bXh5lN/zP/L06/bp&#xA;q+kH6v5j0+j20yHgZQh5BCw35AiqN4/hbqtNxjij9QZZMd7jmxX8irq/u/M3ma51AFb6YRvdArwP&#xA;qmR+dV7Hl2zG0BJnInm14TuWQ3f5wWeh6/qWkeY7Oe3EEzfUbqKMlZIDupZSQfky1B9u951ohIxk&#xA;GZy0aLH/AMtiNe/NDVfM+j2b2OhGJkbkoUPI4QFSFJXkzKZCB079cp03rzGcRUWGPeRI5IuD/wBa&#xA;HuP+YUf9QqZIf41+O5l/lEZ+bP8Aymn5ff8AbSP/ACftcnq/7zH7/wBS5fqi9D1fSNP1fTZ9N1CI&#xA;TWlyvCWM/eCD2IO4PjmbOAkKPJuIsU+c/Nfl3zB5W1jT/L93K1xoovFudKmI+Eh2AcA/st05r47j&#xA;rvo82KWOQieV7OHKJia6Pa08l699ZnaXzbqLWlxIZWgRYUcV/ZSXgxRfZAM2ngSv6zTk8B72I/m1&#xA;+V8U2hLqejJNNf2JZ7v1ZZbiaeJgOTcpGclkpWg7V9sx9XpRw8UeYa8uPaw8b0/zNrFlAbVZ/rFg&#xA;/wDeWFyPWt27f3bVCn/KWjDsc1kchG3RxxIhqe302/PqaYptpz9rTpG5An/iiRt29kb4vAvgIB5L&#xA;QPJLHR0dkdSrqaMpFCCOxByLFE2Oq6np7+pYXk9pJ15wSPEfvQjDGRHIpBIR935v83XUHp3Ws300&#xA;DfCY3uJSrfNS2+TOaZ5k/NJme9lP5P8AkObzDrq6ndxn9D6c4eVmG0sw+JIhXr/M/t88v0en45Wf&#xA;pDZihZt9JZvXMdiq2OKOJAkaBEFSFUADc1Ow98AFK6SOOWNo5FDxuCrowBVlIoQQeoOEi1XYqslt&#xA;4JgBNGsgU1Xmoah9q4CAearyARQ9MKoa20zTbaVpba0hglbZpI40RjXfcqAciIRHIIoInJJUrm0t&#xA;LqP0rqGOeOteEqh1r8mBwGIPNaW2un2FoCLS2itw32vSRUr8+IGCMAOQQAr5JKjdWVldoEureO4Q&#xA;bhZUVwD8mByMog8wghu2tLS1j9K1hjgjrXhEoRa/JQMIiByTSrhVZHBBEWMcaoXNXKgCp8TTrgAA&#xA;VfhVYkEEbs6Rqjvu7KAC3zI64AAqy6sbK7UJd28dwimqrKiuAfYMDglEHmEEL4YYYYlihRY4kFEj&#xA;QBVA8ABthArkl31eD1vW9NfWIoZOI5U+fXGhdq6SCCRkaSNXaM1jZgCVPiK9OmJAKr8KrJYIZQBL&#xA;GsgU1XkAaHxFcBAKr8KuxV5N+Yf5JRanPNqvlwpb3shLz2D/AAxSMdy0bfsMfA7H2zW6jQ8W8Ofc&#xA;0ZMN7h4lq+hazo9wbfVLOWzl7CVSoPurdGHuDmrnCUTRFOMYkc1MalcFFSYJcxqAAJl5EKNgofaQ&#xA;AeAbBaLd9YEjBYLSNJG2XgJHJPgFdnH4Y2rPvJf5MeY9cuEutZR9L0yoL+oONxIP5Y4yPg+bD5A5&#xA;mYNFKe52DbDCTzfQGkaRp2j6dDp2nQrBaQLxjjX8ST3J6knNxCAiKHJywABQRmTS8u1C9+rvr5iv&#xA;pLqa4Se9t763u3khFvFdx+pHLEXYQyWwbgpUAMnvXNbOVcVG+vPz/Q0E80z80Tm+1fULe2v0UJFp&#xA;gjtGuTbJdSh7uV7VZUZSjSRshqPBa7ZbmPFIgH+b1589mUtyhYr/AEWK9sfMJe8e1XRXvuE9xMZJ&#xA;JYXhij5Lz4M7V49KMTXeuQEo2J71w3z9yLHPyQtnrfmOHSNQ03WxcW2pSXFpf2ry0RjHPeQrcRR8&#xA;Hf4IpG4jf7LDbIjJMRIlz2P2i0AmqKyPX/MFt5eK30sk9pqGpGPT75OXOF4tUMbW8rV+y0cdUb5r&#xA;4Y+JIQ35E7f6bkvEa/HemcfmrVj5z/SRjnHlaST9FJOQv1bkH4rcBuVatc1irSnGhrlgzS8Ti/g5&#xA;eXv+bLiN30Y2mq6tbW+rc7iVYru01FoeF3JOfVgvP714mI+rcUPBeGzeNcx+MgHfmD18/sYWd2W+&#xA;aiL/AMz2MMJhurcWM7mOTUJrGLmJohy526ylmAanEjMnNUpjqK76+5nLcpr52n1KLy7FBpcv1fU7&#xA;u5tLe0lDMyq5mRjU7Fl4oa16jLdQSIUOZIZTutkitPOd3qOv6ZqJ5WWiQJNZ6jHJVQL4Wz3Uyt4i&#xA;3W3418ScpjnMpA8o9ffV/YxE7Pkl9t5o8wGDXJdRS6tbfWrG7u9GaYBBE8MLlI4mRmPxWypIahfi&#xA;DZAZpVK79QJH49zHiO99UVY+ZdVtrvy7ba/IytFFNetfryENzaCxkfm9P92RH+8U96MOuGOWQMRL&#xA;333ikiR2tT0fzT5qiXV3u7aeO41W1uNR0KK5VeKzQoeNtHxL8h6IiehC/Fz274wzTF31BI/V8lEj&#xA;uiPrmi6cdBv7G8v9Ul1GaKM3sV+H9d5CF4S20sjLx+KpCIOFOow8UY8JBJvz/QtgUlumnUk8q3d3&#xA;bskWoXq/VIb5b+4uLjnc3qQKTauixx059Vcnp45XC+Akcz5m+fcgXSaw+bdXv9Z0MMht4LG5+pa9&#xA;HuA1/NFLEsaHusbKH9w6HLRnkZR8jR9+7LiJISXTYdWXytpFzZSxWeo3o01BqCahcXsrPM8dWmtZ&#xA;USNA1auAx/l6ZVEHgBGxNb2T9jEXQRWtahc6tHr5vo57LUNLtdNSa3jmlRI7hrm5DvGyFA6SRMpB&#xA;8KdxkskjISvYgD7ypN29LtbaG1t47eEERRKEQMzOaDxZyzH6TmwiKFBvAVcKuxV2KuxV2KuxV2Ko&#xA;fUP0d9Vf9I+j9U/b+scfT+nn8ORnVb8kGurCr/8A5Ul6o+sfoP1N6+n6H/Del3+eYkvy/XhazweT&#xA;INA/wN6h/wAP/oz1KGv1D6vyp3/ucvx+Hfp4fhTOPD0T3LmTsVdiqVWv+Ffrt/8AVPqP134v0p6X&#xA;o+rT9r6xx+L588qHBZqr6/tYikIn+AP0LJw/RX6E9X97x+rfVfW/yqfu+f45H91w/wAPD8KR6a6U&#xA;j5f8O8bf1vqfH04/qvP0qenzT0/Tr+z6nDjT9rjTemTPB5MtlTUP0J6sH6R+rerv9W+seny+0teH&#xA;Pf7XDp3p7YZ8PWlNdXJ+hvqPwfVvqHqGtPT9H1fV3/yeXrfTy98fTXSl2aP6C/RIr9V/RHEcf7v6&#xA;txr8NP2KcumPp4enD9i7Ug4f8Fcb/wBD9G8aN+k+HoUpX4vXp79eeQHh71w+fL7UelBv/wAqz+rx&#xA;8/0L9W5P6NfqnDltz412r9mtPbI/ua/h+xHp8k+m/R/G29b0ePNfqnPjT1OJ4+nX9rjWlO2XGtmS&#xA;Fvf8OfVG+vfU/qfqycvW9L0/Wo/q15fDzpz5d+te+RlwVvVKaVtR/RH1dP0l9X+r1Pp/WeHDlwat&#xA;Oe1eHL6K4Z8Nb1SmuqnffoD6nF9e+qfUuJ9D1/T9LjwNeHL4aenXp29sEuCt6pTSJufqPq2/1n0v&#xA;V9T/AET1OPL1eDf3fLflw5dN6VyRra1SjT/8Cfpp/wBHfov9N1b1Pq/1f61Wnx8uH7zp1yuPh8W3&#xA;DxfC0Dhvbm1Z/wCAvrjfUv0V9d5Lz9H6v6vL1V414/FX1eNP8qnfBHwr24b+CBw+Sayfoqrep6Ff&#xA;XTny4f70UX061/3Z9nj36ZYeHy5/ay2SnTf8Aet/uM/RPr1T/eb6tzrzHD7G/wBunH3plcfCvbh+&#xA;xiOHpSbXX6K/ffW/Q+xH9Y9Xh9jk3pc+X7PPlxr3rTLJcPWmRpFZNLsVdirsVdir/9k=</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:0E83F0B87335DE11BCEFCD39F7F75E62</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:0F83F0B87335DE11BCEFCD39F7F75E62</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:a182fa3a-d531-6d4a-ba0c-e80f9bd27778</stRef:instanceID>
            <stRef:documentID>uuid:74C54EFFAE34DE11AB0DDB71A11A6CCF</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>14400.000000</stDim:w>
            <stDim:h>14400.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>True</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>PANTONE 576 C</rdf:li>
               <rdf:li>PANTONE 546 C</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 576 C</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>49.000500</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>38.999901</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 546 C</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>95.000000</xapG:cyan>
                           <xapG:magenta>9.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>83.000000</xapG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -552 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 552 li
712 552 li
712 0 li
cp
clp
[1 0 0 1 0 0 ]ct
275.886 264.06 mo
280.143 260.55 284.472 261.387 292.032 265.644 cv
301.077 270.756 310.788 271.026 317.358 263.637 cv
317.484 262.665 317.556 261.666 317.556 260.649 cv
317.556 247.932 307.242 237.618 294.525 237.618 cv
281.808 237.618 271.503 247.932 271.503 260.649 cv
271.503 263.43 271.998 266.094 272.898 268.569 cv
272.772 266.643 274.104 265.527 275.886 264.06 cv
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
304.699 269.351 mo
300.588 269.351 296.238 268.021 292.032 265.644 cv
287.668 263.187 284.381 261.869 281.563 261.869 cv
279.499 261.869 277.686 262.576 275.886 264.06 cv
274.16 265.481 272.856 266.573 272.89 268.391 cv
272.892 268.449 272.894 268.509 272.898 268.569 cv
271.998 266.094 271.503 263.43 271.503 260.649 cv
271.503 247.932 281.808 237.618 294.525 237.618 cv
307.242 237.618 317.556 247.932 317.556 260.649 cv
317.556 261.666 317.484 262.665 317.358 263.637 cv
313.843 267.59 309.429 269.351 304.699 269.351 cv
/0 
<<
/Name (PANTONE 546 C)
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0.95 0.09 0 0.83 ] 
>>
/CSD add_res
/1 
<<
/Name (PANTONE 576 C)
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0.490005 0 1 0.389999 ] 
>>
/CSD add_res
[(PANTONE 546 C)(PANTONE 576 C)]
cpaint_gcomp
level3{
gsave
clp
[19.7735 0 0 19.7735 294.529 253.487 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~/-&ft/-&ft/-&ft/-&ft/-&ft/-&ft/-&ft/-&ft/-&ft/-&ft/-&ft/-&ft/-&ft/-&ft/-&ft/-&ft
/-&ft/-&ft/-&ft/-&ft/HAp!/HAp!/HAp!/-&cs/-&cs/HAlu/HAlu/HAlu/HAit/HAit/c\s!/c\ou
/c\ou0*,'!0EG0#0`b6$0`b6%0`b3$1'(9&1]^H'2$-T)2?HZ+2Zc]*3<Dl.3W_o-3s/#/4Te/056F;4
63KV87Kbt<8-M.?9*I@B:^/jH<!G-L<sLEP>R)fV@L+>]B*feeD@.FmF:&msI1$^*KFA<3NXZ5AQjs+M
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[19.7735 0 0 19.7735 294.529 253.487 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[0.00392157 0 ][0.00392157 0 ][0.00392157 0 ][0.00392157 0 ]]
/Samples[
<~.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#.k<,#
.k<,#.k<,#.k<,#.k</%/1`>'/1`>'/1`>'/1`;%.k</%/1`>'/1`>'/1`>'/1`>'/1`A)/M/P+/M/P+
/M/P,/hSb00/"t40JG170JG170JG180ekC<1,C^C1c.$H2)R6L2E!HP2`NcW3B9)\3]];`4$5Vg4[)%o
5<qM#6:4.07Rfm<84cEG92//W:f1+h<)lq!='/X1>[CcG@Uit]B5)-tDJsN8FEVnUI=Hd!KSG>ANf]Hi
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!"!<E3%!<E3%!<E3%!<E3%!<E3&!WiE)!WiE)!
WiE*!s8W-!s8W-"9\i1"9\i1"U,&5"U,&5"pP89"pP89#6tJ=#RC\A#mgnE#mgnE$47+I$O[=M$k*OQ%
1NaU~>
<~=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-
=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJX+='&I)='&I)='&I)='&I)='&F'<`W7%<`W7%<`W4#
<E3%!<E3$u<)cgr<)cgq;c?Un;c?Um;GpCi;,L1e:f'ta:JXb]:/+GV9MA,Q91hfJ8OuBB7n,s:779O2
6UO1,5s[b$5<_4n4?GSb3B/rV2Dm<I1,1L;0.nh-.k2qp-7'o^+sA'M*?6"9(`*o$&ePWa$k!@I"pG)0
~>
<~+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T
+sJ3T+sJ3T+sJ3T+sJ6V,9nEX,9nEX,9nEX,9nBV+sJ6V,9nEX,9nEX,9nEX,9nEX,9nHZ,U=W\,U=W\
,U=W\,U=W],paia-71&e-RU8h-RU8i-n-So.4H\q.Olnu.kE5&/1`>(/M8\00/"t40JP:;1,:U@1c70M
2`E]U3B9,]4$5Yh5!M:t5sdq+6q'R884cBF92&)V:f1.j<EE:+>?kH@?t!MTAS5^mD/XB6FEVnTI=Hg#
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
%end_cpaint_gcomp
cpaint_gsep
0 0 0 0 cmyk
gsave
f
grestore
true sop
1 /0 /CSD get_res sepcs
level3{
gsave
clp
[19.7735 0 0 19.7735 294.529 253.487 ]ct
/1 
<<
/ShadingType 3 
/ColorSpace [/Separation /sep_colorspace_dict AGMCORE_gget dup /Name get exch /MappedCSA get /sep_colorspace_proc load]
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [0 ]
/C1 [0.627451 ]
/N 4.97729 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[19.7735 0 0 19.7735 294.529 253.487 ]ct
clp
/1 {
<<
/NumSamples 256 
/NumComp 1 
/Scaling[[0.00392157 0 ]]
/Samples[
<~zzzzzzzzzzzzzzzzzzzzzzz!!**$!<E3%!<E3%!<E3&!WiE)!WiE)!s8W-!s8W."9\i1"U,&5"U5/8"p
YA<#7(S@#mgnF$47.K$OdFQ%1WjX%hB3_&J5Wh',2,q()@]'(`=51)]Tk>*ZlLJ+sS?Z-7:2j.P!&%/h
f"81Gh!K3'',a5!VD$6q0[<92&)W;H-[u=^,0=@Us(aC2@g.FEVnUI=Qs(Ll7:UPEqW,~>
]
>>
0 0 0 0 0 1 [
]true true []
/Separation
RadialShade
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
1 /1 /CSD get_res sepcs
level3{
gsave
clp
[19.7735 0 0 19.7735 294.529 253.487 ]ct
/2 
<<
/ShadingType 3 
/ColorSpace [/Separation /sep_colorspace_dict AGMCORE_gget dup /Name get exch /MappedCSA get /sep_colorspace_proc load]
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [0.34902 ]
/C1 [0 ]
/N 4.97729 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[19.7735 0 0 19.7735 294.529 253.487 ]ct
clp
/2 {
<<
/NumSamples 256 
/NumComp 1 
/Scaling[[0.00392157 0 ]]
/Samples[
<~=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-
=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-='&I)='&I)='&I)='&I)<`W7%<`W7%
<`W4#<E3%!<E3!t<)cgr;c?Un;c6Lk;Gp@h;,L.d:f'q`:JX_\:/+GW9MA)P91hfK8P)HD7n6$<77BU4
6UO1,5sR\"5!D+l4?GSb3B/rU2Dm<I1,1L;0.nh-.k2tr-7'o^+sA'M*?6"9(`*o$&ePZb%1<IJ"pG)0
~>
]
>>
0 0 0 0 0 1 [
]true true []
/Separation
RadialShade
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
false sop
%end_cpaint_gsep
cpaint_gend
304.452 257.248 mo
304.332 257.3 303.926 257.422 303.907 257.553 cv
303.889 257.69 304.18 257.673 304.465 257.729 cv
304.749 257.786 305.242 257.772 305.389 257.768 cv
305.533 257.762 305.584 257.736 305.654 257.665 cv
305.724 257.596 305.647 257.45 305.572 257.33 cv
305.496 257.21 305.123 257.123 304.964 257.059 cv
304.806 256.994 304.571 257.198 304.452 257.248 cv
305.38 247.187 mo
305.754 247.261 306.353 247.674 306.054 247.074 cv
305.754 246.476 305.643 246.401 305.528 246.364 cv
305.174 246.244 304.781 246.326 304.781 246.551 cv
304.781 246.775 305.005 247.112 305.38 247.187 cv
300.628 240.19 mo
300.927 240.453 301.565 240.977 301.715 241.238 cv
301.862 241.5 301.75 241.5 302.5 241.873 cv
303.248 242.248 303.396 242.697 303.884 242.622 cv
304.369 242.548 304.519 242.323 304.183 242.024 cv
303.846 241.725 303.697 240.938 303.396 240.604 cv
303.097 240.266 302.012 239.443 301.414 239.294 cv
300.815 239.144 299.543 238.732 299.094 238.695 cv
298.646 238.657 298.159 238.695 298.046 238.92 cv
297.935 239.144 297.935 238.994 297.935 239.144 cv
297.935 239.512 300.329 239.929 300.628 240.19 cv
302.092 256.56 mo
301.833 256.483 301.403 256.438 301.233 256.274 cv
301.062 256.108 300.789 256.04 300.663 256.06 cv
300.38 256.102 300.168 256.09 300.144 256.223 cv
300.119 256.356 299.91 256.444 300.201 256.615 cv
300.492 256.787 300.708 256.806 301.1 256.908 cv
301.492 257.008 301.745 257.179 301.909 257.291 cv
302.074 257.406 302.327 257.362 302.447 257.285 cv
302.566 257.21 302.731 257.059 302.566 256.932 cv
302.403 256.806 302.354 256.636 302.092 256.56 cv
297.075 240.678 mo
297.373 240.903 297.187 240.977 298.01 241.09 cv
298.833 241.2 299.244 241.125 299.319 241.425 cv
299.394 241.725 298.87 241.611 298.945 241.873 cv
299.02 242.136 299.169 242.211 299.881 242.361 cv
300.591 242.511 301.565 243.109 301.339 242.697 cv
301.113 242.286 300.965 241.986 300.891 241.763 cv
300.815 241.537 299.955 241.09 299.394 240.79 cv
298.833 240.49 298.234 240.229 297.785 240.229 cv
297.336 240.229 296.589 239.816 296.364 240.116 cv
296.129 240.428 296.775 240.453 297.075 240.678 cv
312.403 265.981 mo
311.807 265.684 311.45 265.028 311.272 264.433 cv
311.094 263.836 310.377 263.42 309.781 263.241 cv
309.186 263.063 308.768 262.585 308.59 262.288 cv
308.412 261.99 308.173 261.751 307.754 261.751 cv
307.338 261.751 306.742 261.812 306.445 261.632 cv
306.147 261.453 306.088 260.917 304.896 261.395 cv
303.705 261.871 303.645 261.99 303.167 261.871 cv
302.691 261.751 302.573 261.395 302.394 261.334 cv
302.216 261.275 301.262 261.216 301.142 260.977 cv
301.022 260.739 301.083 259.548 300.725 259.367 cv
300.367 259.188 299.354 258.893 299.296 258.534 cv
299.235 258.176 299.416 257.164 299.058 257.164 cv
298.699 257.164 297.866 257.462 297.568 257.76 cv
297.269 258.058 297.269 258.474 296.852 258.236 cv
296.436 257.998 295.125 257.045 295.662 255.556 cv
296.198 254.066 297.09 253.529 298.818 253.945 cv
300.547 254.363 300.785 254.482 300.844 254.841 cv
300.903 255.198 301.439 256.27 301.5 255.733 cv
301.558 255.198 301.022 253.529 301.322 253.112 cv
301.619 252.696 302.216 252.159 302.394 251.683 cv
302.573 251.206 302.989 249.479 303.229 249.002 cv
303.466 248.523 303.049 248.584 303.466 248.523 cv
303.884 248.465 303.584 248.346 303.884 248.228 cv
304.181 248.107 304.718 247.988 304.539 247.631 cv
304.36 247.274 304.241 246.916 303.884 246.737 cv
303.525 246.561 303.407 246.379 303.407 246.379 cv
304.777 245.546 li
304.598 245.309 303.407 244.532 303.108 244.234 cv
302.812 243.938 301.68 243.162 301.262 243.162 cv
300.844 243.162 299.771 242.925 299.533 243.162 cv
299.296 243.4 299.712 244.056 299.712 244.295 cv
299.712 244.534 299.892 245.128 299.712 245.366 cv
299.533 245.604 299.831 245.604 299.533 245.604 cv
299.235 245.604 297.984 244.532 297.746 244.354 cv
297.507 244.176 296.852 243.997 296.793 243.461 cv
296.733 242.925 296.972 242.687 297.269 242.15 cv
297.568 241.613 297.926 241.375 297.39 241.255 cv
296.852 241.137 296.316 241.137 295.84 241.137 cv
295.363 241.137 293.994 240.839 293.637 240.72 cv
293.277 240.602 292.026 240.185 291.312 240.064 cv
290.597 239.945 290.18 239.231 289.525 239.409 cv
288.87 239.588 288.273 239.588 287.916 239.827 cv
287.558 240.064 287.201 240.125 286.843 240.185 cv
286.843 240.185 286.784 240.362 286.306 240.541 cv
285.832 240.72 284.938 240.661 284.818 241.078 cv
284.698 241.494 284.341 241.437 284.043 241.792 cv
283.745 242.15 283.387 242.327 284.401 242.21 cv
285.415 242.089 286.128 241.674 286.486 241.554 cv
286.843 241.437 286.426 240.958 286.843 241.437 cv
287.261 241.912 287.499 241.972 287.439 242.21 cv
287.379 242.448 287.319 242.687 287.379 242.983 cv
287.439 243.282 287.618 243.044 287.618 243.818 cv
287.618 244.832 li
287.618 244.832 288.094 245.128 288.333 245.188 cv
288.571 245.248 288.81 245.726 288.81 245.726 cv
288.81 245.726 288.81 245.844 288.69 246.32 cv
288.571 246.798 288.154 248.523 288.154 248.942 cv
288.154 249.358 287.916 250.491 288.154 250.907 cv
288.392 251.325 288.928 252.634 289.049 253.053 cv
289.168 253.471 289.525 254.482 289.704 254.661 cv
289.882 254.841 290.657 255.139 290.835 255.613 cv
291.013 256.09 291.609 256.748 291.551 256.212 cv
291.491 255.674 291.193 254.602 290.895 254.363 cv
290.597 254.125 290.12 252.696 290.3 252.576 cv
290.478 252.458 291.371 253.648 291.551 254.006 cv
291.729 254.363 292.384 255.496 292.682 256.09 cv
292.98 256.688 293.277 257.879 293.458 258.297 cv
293.637 258.713 295.304 259.725 295.781 260.024 cv
296.256 260.322 297.269 260.739 298.224 260.977 cv
299.175 261.216 300.01 261.751 300.487 261.99 cv
300.964 262.228 301.439 262.704 301.797 262.942 cv
302.155 263.182 302.571 263.182 302.87 263.182 cv
303.167 263.182 302.989 262.646 303.525 263.359 cv
304.063 264.075 303.764 264.372 303.525 264.73 cv
303.286 265.086 302.096 267.472 302.035 268.066 cv
302.011 268.312 302.092 268.772 302.231 269.283 cv
306.061 269.754 309.755 269.165 313.021 267.293 cv
312.863 266.949 312.881 266.22 312.403 265.981 cv
1 /0 /CSD get_res sepcs
1 sep
f
292.26 266.988 mo
284.903 262.834 280.028 261.785 275.902 265.171 cv
274.664 266.188 274.286 267.065 273.861 268.15 cv
273.89 268.148 li
277.976 267.674 281.466 269.114 288.292 274.134 cv
296.994 280.533 303.754 277.078 305.177 275.858 cv
306.786 274.479 308.131 272.971 308.131 272.971 cv
308.131 272.971 307.083 274.902 305.177 276.373 cv
303.532 277.641 297.131 281.084 288.129 274.997 cv
286.943 274.194 285.817 273.509 284.75 272.928 cv
283.978 272.436 279.144 269.466 275.558 269.719 cv
273.313 269.877 273.221 270.254 269.554 271.172 cv
266.771 271.868 265.945 270.564 265.945 270.564 cv
265.945 270.564 265.728 271.259 265.163 271.563 cv
264.598 271.868 264.292 271.911 264.292 271.911 cv
264.292 271.911 264.989 272.432 267.38 272.432 cv
269.416 272.432 271.265 271.082 273.888 270.679 cv
274.222 271.734 274.922 273.017 276.118 274.657 cv
277.065 275.827 278.134 276.927 279.332 277.928 cv
289.313 286.282 304.635 285.327 312.532 274.983 cv
315.528 271.056 316.373 269.084 317.125 264.891 cv
310.772 272.589 301.269 272.088 292.26 266.988 cv
1 /1 /CSD get_res sepcs
1 sep
f
332.348 264.797 mo
335.878 256.109 li
339.374 264.805 li
340.928 264.785 342.491 264.75 344.063 264.703 cv
348.83 252.863 li
346.406 252.863 li
341.774 264.57 li
337.041 252.863 li
334.742 252.863 li
330.031 264.57 li
325.35 252.863 li
322.901 252.863 li
327.646 264.686 li
329.085 264.727 330.709 264.77 332.348 264.797 cv
f
374.783 262.625 mo
374.719 262.234 374.683 261.834 374.683 261.41 cv
374.683 259.561 375.323 258.027 376.608 256.795 cv
377.893 255.568 379.51 254.953 381.456 254.953 cv
383.351 254.953 385.29 255.523 387.277 256.654 cv
387.277 254.041 li
385.096 253.109 383.116 252.645 381.333 252.645 cv
378.746 252.645 376.572 253.488 374.809 255.176 cv
373.047 256.859 372.164 258.939 372.164 261.41 cv
372.164 261.906 372.22 262.387 372.297 262.861 cv
373.127 262.785 373.956 262.705 374.783 262.625 cv
f
471.282 257.357 mo
471.282 252.863 li
468.972 252.863 li
468.972 256.719 li
470.087 256.982 470.847 257.213 471.282 257.357 cv
f
354.664 264.23 mo
354.664 252.863 li
352.235 252.863 li
352.235 264.369 li
353.04 264.324 353.854 264.277 354.664 264.23 cv
f
362.284 261.609 mo
364.132 262.729 li
364.532 262.977 364.874 263.23 365.166 263.488 cv
366.149 263.408 367.128 263.328 368.108 263.242 cv
367.606 262.287 366.758 261.445 365.549 260.721 cv
363.69 259.621 li
362.859 259.131 362.252 258.668 361.877 258.223 cv
361.5 257.779 361.312 257.303 361.312 256.797 cv
361.312 256.221 361.567 255.752 362.078 255.383 cv
362.588 255.018 363.24 254.832 364.035 254.832 cv
365.446 254.832 366.762 255.42 367.985 256.6 cv
367.985 253.84 li
366.803 253.043 365.502 252.645 364.084 252.645 cv
362.602 252.645 361.396 253.063 360.468 253.898 cv
359.539 254.73 359.076 255.818 359.076 257.158 cv
359.076 258.045 359.319 258.832 359.81 259.518 cv
360.303 260.205 361.126 260.9 362.284 261.609 cv
f
393.757 260.557 mo
393.921 259.049 394.525 257.779 395.582 256.754 cv
396.831 255.537 398.43 254.93 400.372 254.93 cv
402.219 254.93 403.774 255.545 405.045 256.771 cv
405.727 257.436 406.219 258.186 406.537 259.014 cv
407.39 258.912 408.233 258.809 409.075 258.705 cv
408.665 257.346 407.915 256.146 406.83 255.111 cv
405.084 253.453 402.9 252.619 400.275 252.619 cv
397.651 252.619 395.481 253.453 393.764 255.111 cv
392.175 256.65 391.331 258.566 391.214 260.854 cv
392.064 260.756 392.911 260.654 393.757 260.557 cv
f
450.216 254.93 mo
450.216 252.863 li
447.784 252.863 li
447.784 254.971 li
448.618 254.947 449.429 254.936 450.216 254.93 cv
f
429.735 256.309 mo
429.735 252.863 li
427.425 252.863 li
427.425 256.551 li
428.205 256.467 428.972 256.387 429.735 256.309 cv
f
459.634 255.299 mo
457.521 252.865 li
455.552 252.865 li
455.552 255.033 li
457.021 255.1 458.375 255.189 459.634 255.299 cv
f
436.724 255.643 mo
436.811 255.551 436.904 255.465 437.017 255.383 cv
437.527 255.018 438.179 254.832 438.973 254.832 cv
439.697 254.832 440.397 254.994 441.07 255.305 cv
441.696 255.262 442.316 255.219 442.924 255.182 cv
442.924 253.84 li
441.74 253.043 440.439 252.645 439.02 252.645 cv
437.536 252.645 436.332 253.064 435.406 253.896 cv
434.8 254.443 434.41 255.107 434.202 255.865 cv
435.058 255.787 435.894 255.713 436.724 255.643 cv
f
442.924 256.17 mo
442.765 256.176 442.596 256.188 442.432 256.193 cv
442.6 256.326 442.765 256.445 442.924 256.598 cv
442.924 256.17 li
cp
f
416.292 257.83 mo
416.292 256.768 li
417.127 257.73 li
418.066 257.617 418.994 257.51 419.915 257.404 cv
415.974 252.863 li
414.005 252.863 li
414.005 258.105 li
414.773 258.012 415.53 257.922 416.292 257.83 cv
f
440.484 260.721 mo
438.629 259.621 li
437.794 259.135 437.192 258.668 436.814 258.223 cv
436.438 257.779 436.25 257.301 436.25 256.795 cv
436.275 256.566 li
435.547 256.621 434.805 256.678 434.052 256.736 cv
434.04 256.877 434.013 257.01 434.013 257.158 cv
434.013 258.045 434.258 258.834 434.748 259.518 cv
435.24 260.205 436.063 260.898 437.221 261.609 cv
439.071 262.73 li
440.562 263.656 441.307 264.637 441.307 265.672 cv
441.307 266.309 441.054 266.842 440.548 267.266 cv
440.042 267.688 439.406 267.9 438.645 267.9 cv
436.92 267.9 435.399 267.068 434.085 265.404 cv
434.085 268.494 li
435.463 269.523 436.993 270.039 438.668 270.039 cv
440.128 270.039 441.313 269.615 442.226 268.762 cv
443.137 267.912 443.592 266.807 443.592 265.447 cv
443.592 263.533 442.556 261.957 440.484 260.721 cv
f
427.425 257.324 mo
427.425 266.053 li
420.466 258.041 li
419.54 258.139 418.605 258.242 417.663 258.348 cv
427.646 269.846 li
429.735 269.846 li
429.735 257.107 li
428.975 257.178 428.203 257.25 427.425 257.324 cv
f
468.972 258.092 mo
468.972 266.053 li
460.761 256.596 li
459.229 256.43 457.497 256.291 455.552 256.191 cv
455.552 269.846 li
457.839 269.846 li
457.839 256.768 li
469.192 269.846 li
471.282 269.846 li
471.282 258.936 li
470.863 258.736 470.127 258.432 468.972 258.092 cv
f
448.772 256.029 mo
448.451 256.029 448.119 256.031 447.786 256.033 cv
447.786 269.846 li
450.216 269.846 li
450.216 256.035 li
449.745 256.031 449.265 256.029 448.772 256.029 cv
f
414.005 258.764 mo
414.005 269.846 li
416.29 269.846 li
416.29 258.502 li
415.53 258.586 414.771 258.674 414.005 258.764 cv
f
376.578 266.004 mo
375.863 265.328 375.359 264.539 375.048 263.652 cv
374.214 263.758 373.384 263.859 372.558 263.963 cv
372.747 264.58 372.991 265.178 373.319 265.748 cv
374.09 267.088 375.135 268.137 376.456 268.896 cv
377.778 269.658 379.388 270.039 381.283 270.039 cv
383.617 270.039 385.675 269.553 387.458 268.582 cv
387.458 265.906 li
385.497 267.172 383.488 267.801 381.429 267.801 cv
379.46 267.801 377.841 267.205 376.578 266.004 cv
f
340.431 267.432 mo
341.43 269.918 li
341.964 269.918 li
343.047 267.229 li
342.155 267.303 341.284 267.369 340.431 267.432 cv
f
406.731 259.631 mo
406.867 260.16 406.945 260.721 406.945 261.313 cv
406.945 263.16 406.31 264.705 405.042 265.943 cv
403.774 267.184 402.195 267.805 400.299 267.805 cv
398.413 267.805 396.843 267.197 395.589 265.979 cv
394.333 264.766 393.705 263.24 393.705 261.41 cv
393.712 261.262 li
392.873 261.369 392.037 261.475 391.198 261.582 cv
391.237 263.977 392.084 265.977 393.745 267.58 cv
395.451 269.219 397.583 270.039 400.143 270.039 cv
402.823 270.039 405.045 269.219 406.805 267.58 cv
408.568 265.936 409.447 263.865 409.447 261.359 cv
409.447 260.648 409.37 259.973 409.228 259.326 cv
408.397 259.428 407.568 259.527 406.731 259.631 cv
f
352.233 266.352 mo
352.233 269.846 li
354.664 269.846 li
354.664 266.094 li
353.844 266.182 353.034 266.27 352.233 266.352 cv
f
366.16 264.758 mo
366.293 265.059 366.368 265.363 366.368 265.672 cv
366.368 266.311 366.115 266.842 365.609 267.266 cv
365.104 267.688 364.468 267.9 363.707 267.9 cv
362.042 267.9 360.573 267.119 359.291 265.57 cv
359.149 265.59 li
359.149 268.492 li
360.527 269.523 362.054 270.039 363.733 270.039 cv
365.189 270.039 366.376 269.615 367.286 268.762 cv
368.199 267.914 368.655 266.807 368.655 265.447 cv
368.655 265.107 368.611 264.781 368.546 264.465 cv
367.746 264.563 366.951 264.662 366.16 264.758 cv
f
330.028 267.891 mo
329.644 267.891 329.282 267.889 328.931 267.887 cv
329.746 269.918 li
330.268 269.918 li
331.096 267.881 li
330.732 267.887 330.376 267.891 330.028 267.891 cv
f
448.772 256.035 mo
420.801 256.035 354.987 267.898 330.027 267.898 cv
325.677 267.898 323.465 267.762 322.911 267.725 cv
322.911 268.301 li
322.911 268.301 325.08 268.486 330.167 268.486 cv
355.095 268.486 420.829 256.639 448.771 256.639 cv
466.969 256.639 471.704 259.783 471.704 259.783 cv
471.704 259.164 li
471.292 258.914 466.202 256.035 448.772 256.035 cv
1 /0 /CSD get_res sepcs
0.8 sep
f
329.671 239.48 mo
330.954 239.48 li
330.954 244.545 li
330.954 245.23 330.904 245.746 330.805 246.096 cv
330.704 246.445 330.581 246.736 330.434 246.967 cv
330.287 247.199 330.107 247.406 329.895 247.59 cv
329.188 248.199 328.264 248.504 327.123 248.504 cv
325.961 248.504 325.029 248.201 324.327 247.596 cv
324.114 247.408 323.934 247.199 323.787 246.967 cv
323.641 246.736 323.519 246.451 323.423 246.115 cv
323.327 245.779 323.279 245.252 323.279 244.531 cv
323.279 239.48 li
324.563 239.48 li
324.563 244.545 li
324.563 245.383 324.659 245.967 324.851 246.293 cv
325.042 246.621 325.333 246.885 325.725 247.082 cv
326.116 247.281 326.578 247.379 327.11 247.379 cv
327.868 247.379 328.485 247.182 328.962 246.785 cv
329.213 246.572 329.395 246.322 329.505 246.031 cv
329.615 245.742 329.671 245.246 329.671 244.545 cv
329.671 239.48 li
cp
1 /1 /CSD get_res sepcs
1 sep
f
341.183 239.48 mo
342.396 239.48 li
342.396 248.4 li
341.298 248.4 li
335.334 241.531 li
335.334 248.4 li
334.134 248.4 li
334.134 239.48 li
335.168 239.48 li
341.183 246.408 li
341.183 239.48 li
cp
f
345.691 239.48 mo
346.969 239.48 li
346.969 248.4 li
345.691 248.4 li
345.691 239.48 li
cp
f
355.971 239.48 mo
357.242 239.48 li
353.472 248.439 li
353.182 248.439 li
349.338 239.48 li
350.623 239.48 li
353.306 245.744 li
355.971 239.48 li
cp
f
359.593 239.48 mo
364.649 239.48 li
364.649 240.617 li
360.87 240.617 li
360.87 243.338 li
364.521 243.338 li
364.521 244.48 li
360.87 244.48 li
360.87 247.252 li
364.771 247.252 li
364.771 248.389 li
359.593 248.389 li
359.593 239.48 li
cp
f
369.202 240.566 mo
368.819 240.566 li
368.819 243.383 li
369.305 243.383 li
369.951 243.383 370.396 243.326 370.636 243.217 cv
370.876 243.105 371.063 242.939 371.197 242.715 cv
371.332 242.492 371.398 242.238 371.398 241.951 cv
371.398 241.672 371.324 241.416 371.175 241.189 cv
371.026 240.961 370.816 240.801 370.546 240.707 cv
370.275 240.613 369.828 240.566 369.202 240.566 cv
cp
367.542 248.4 mo
367.542 239.48 li
369.776 239.48 li
370.68 239.48 371.396 239.705 371.926 240.152 cv
372.455 240.598 372.721 241.203 372.721 241.965 cv
372.721 242.484 372.591 242.934 372.331 243.313 cv
372.071 243.691 371.698 243.975 371.214 244.162 cv
371.499 244.348 371.777 244.604 372.05 244.928 cv
372.322 245.252 372.705 245.814 373.199 246.619 cv
373.51 247.127 373.758 247.508 373.945 247.762 cv
374.418 248.4 li
372.899 248.4 li
372.51 247.813 li
372.434 247.705 li
372.185 247.354 li
371.789 246.701 li
371.362 246.006 li
371.099 245.639 370.857 245.348 370.638 245.131 cv
370.418 244.914 370.22 244.758 370.043 244.662 cv
369.866 244.566 369.569 244.52 369.151 244.52 cv
368.819 244.52 li
368.819 248.4 li
367.542 248.4 li
cp
f
378.984 244.664 mo
378.014 244.074 li
377.404 243.703 376.971 243.336 376.715 242.977 cv
376.457 242.617 376.328 242.203 376.328 241.734 cv
376.328 241.033 376.572 240.463 377.059 240.023 cv
377.547 239.586 378.18 239.365 378.959 239.365 cv
379.703 239.365 380.387 239.576 381.008 239.994 cv
381.008 241.443 li
380.365 240.824 379.674 240.516 378.934 240.516 cv
378.516 240.516 378.174 240.611 377.904 240.805 cv
377.637 240.998 377.502 241.244 377.502 241.545 cv
377.502 241.813 377.602 242.063 377.799 242.297 cv
377.996 242.529 378.314 242.773 378.752 243.031 cv
379.727 243.607 li
380.814 244.258 381.359 245.086 381.359 246.09 cv
381.359 246.805 381.119 247.385 380.641 247.832 cv
380.162 248.279 379.539 248.504 378.773 248.504 cv
377.893 248.504 377.09 248.232 376.365 247.691 cv
376.365 246.068 li
377.057 246.943 377.854 247.379 378.76 247.379 cv
379.16 247.379 379.494 247.268 379.76 247.045 cv
380.025 246.822 380.158 246.543 380.158 246.209 cv
380.158 245.666 379.768 245.15 378.984 244.664 cv
cp
f
384.15 239.48 mo
385.428 239.48 li
385.428 248.4 li
384.15 248.4 li
384.15 239.48 li
cp
f
388.02 239.469 mo
395.471 239.469 li
395.471 240.605 li
392.361 240.605 li
392.361 248.4 li
391.078 248.4 li
391.078 240.605 li
388.02 240.605 li
388.02 239.469 li
cp
f
403.416 239.48 mo
404.967 239.48 li
401.672 243.682 li
401.672 248.4 li
400.363 248.4 li
400.363 243.682 li
397.068 239.48 li
398.609 239.48 li
400.996 242.557 li
403.416 239.48 li
cp
f
416.756 240.566 mo
415.736 240.566 414.896 240.887 414.24 241.523 cv
413.582 242.162 413.254 242.979 413.254 243.969 cv
413.254 244.932 413.584 245.732 414.242 246.371 cv
414.902 247.01 415.727 247.328 416.719 247.328 cv
417.713 247.328 418.543 247.002 419.209 246.352 cv
419.875 245.699 420.207 244.889 420.207 243.918 cv
420.207 242.975 419.875 242.18 419.209 241.533 cv
418.543 240.889 417.727 240.566 416.756 240.566 cv
cp
416.705 239.354 mo
418.084 239.354 419.23 239.789 420.148 240.662 cv
421.064 241.535 421.523 242.629 421.523 243.943 cv
421.523 245.26 421.061 246.348 420.135 247.211 cv
419.209 248.072 418.043 248.504 416.635 248.504 cv
415.291 248.504 414.172 248.072 413.275 247.211 cv
412.381 246.348 411.934 245.268 411.934 243.969 cv
411.934 242.637 412.383 241.535 413.285 240.662 cv
414.188 239.789 415.326 239.354 416.705 239.354 cv
cp
f
424.479 239.48 mo
429.236 239.48 li
429.236 240.617 li
425.756 240.617 li
425.756 243.107 li
429.236 243.107 li
429.236 244.244 li
425.756 244.244 li
425.756 248.4 li
424.479 248.4 li
424.479 239.48 li
cp
f
323.083 282.053 mo
323.612 281.736 li
323.984 282.42 324.414 282.762 324.9 282.762 cv
325.108 282.762 325.304 282.715 325.487 282.617 cv
325.669 282.52 325.81 282.391 325.905 282.227 cv
326.001 282.063 326.048 281.891 326.048 281.707 cv
326.048 281.498 325.979 281.295 325.837 281.094 cv
325.643 280.818 325.289 280.486 324.774 280.098 cv
324.255 279.707 323.933 279.424 323.806 279.248 cv
323.587 278.955 323.477 278.639 323.477 278.299 cv
323.477 278.027 323.541 277.781 323.671 277.559 cv
323.8 277.336 323.983 277.162 324.218 277.033 cv
324.453 276.904 324.708 276.842 324.985 276.842 cv
325.277 276.842 325.55 276.914 325.806 277.059 cv
326.061 277.203 326.33 277.471 326.615 277.857 cv
326.108 278.244 li
325.875 277.934 325.675 277.729 325.511 277.631 cv
325.346 277.531 325.166 277.482 324.972 277.482 cv
324.721 277.482 324.516 277.559 324.357 277.711 cv
324.198 277.863 324.119 278.051 324.119 278.273 cv
324.119 278.408 324.147 278.539 324.203 278.666 cv
324.259 278.793 324.362 278.93 324.511 279.08 cv
324.593 279.158 324.861 279.365 325.314 279.701 cv
325.852 280.098 326.221 280.451 326.421 280.76 cv
326.621 281.07 326.72 281.381 326.72 281.693 cv
326.72 282.145 326.55 282.537 326.208 282.869 cv
325.865 283.201 325.449 283.367 324.958 283.367 cv
324.582 283.367 324.24 283.266 323.933 283.064 cv
323.626 282.863 323.343 282.525 323.083 282.053 cv
f
328.056 276.998 mo
328.677 276.998 li
328.677 280.748 li
328.677 281.193 328.685 281.471 328.702 281.58 cv
328.733 281.824 328.804 282.029 328.917 282.193 cv
329.03 282.359 329.203 282.498 329.437 282.609 cv
329.67 282.721 329.906 282.775 330.142 282.775 cv
330.347 282.775 330.544 282.73 330.734 282.645 cv
330.923 282.557 331.08 282.436 331.207 282.281 cv
331.333 282.127 331.427 281.939 331.486 281.721 cv
331.528 281.563 331.548 281.238 331.548 280.748 cv
331.548 276.998 li
332.169 276.998 li
332.169 280.748 li
332.169 281.303 332.116 281.752 332.007 282.094 cv
331.898 282.436 331.681 282.732 331.357 282.986 cv
331.032 283.24 330.638 283.367 330.175 283.367 cv
329.675 283.367 329.246 283.248 328.888 283.008 cv
328.531 282.768 328.291 282.451 328.169 282.057 cv
328.093 281.814 328.056 281.379 328.056 280.748 cv
328.056 276.998 li
cp
f
333.056 282.053 mo
333.584 281.736 li
333.957 282.42 334.386 282.762 334.873 282.762 cv
335.082 282.762 335.277 282.715 335.459 282.617 cv
335.642 282.52 335.783 282.391 335.877 282.227 cv
335.974 282.063 336.021 281.891 336.021 281.707 cv
336.021 281.498 335.952 281.295 335.81 281.094 cv
335.616 280.818 335.261 280.486 334.747 280.098 cv
334.228 279.707 333.906 279.424 333.779 279.248 cv
333.56 278.955 333.45 278.639 333.45 278.299 cv
333.45 278.027 333.513 277.781 333.644 277.559 cv
333.773 277.336 333.956 277.162 334.191 277.033 cv
334.425 276.904 334.681 276.842 334.958 276.842 cv
335.25 276.842 335.524 276.914 335.779 277.059 cv
336.034 277.203 336.302 277.471 336.587 277.857 cv
336.081 278.244 li
335.847 277.934 335.648 277.729 335.484 277.631 cv
335.319 277.531 335.138 277.482 334.945 277.482 cv
334.694 277.482 334.489 277.559 334.33 277.711 cv
334.171 277.863 334.091 278.051 334.091 278.273 cv
334.091 278.408 334.12 278.539 334.175 278.666 cv
334.232 278.793 334.334 278.93 334.485 279.08 cv
334.566 279.158 334.833 279.365 335.287 279.701 cv
335.825 280.098 336.194 280.451 336.394 280.76 cv
336.593 281.07 336.693 281.381 336.693 281.693 cv
336.693 282.145 336.523 282.537 336.181 282.869 cv
335.837 283.201 335.421 283.367 334.931 283.367 cv
334.554 283.367 334.212 283.266 333.906 283.064 cv
333.599 282.863 333.316 282.525 333.056 282.053 cv
f
337.39 277.605 mo
337.39 276.998 li
340.794 276.998 li
340.794 277.605 li
339.41 277.605 li
339.41 283.211 li
338.777 283.211 li
338.777 277.605 li
337.39 277.605 li
cp
f
343.528 276.998 mo
346.425 283.211 li
345.755 283.211 li
344.777 281.166 li
342.1 281.166 li
341.132 283.211 li
340.44 283.211 li
343.376 276.998 li
343.528 276.998 li
cp
343.45 278.316 mo
342.384 280.566 li
344.507 280.566 li
343.45 278.316 li
cp
f
347.298 283.211 mo
347.919 283.211 li
347.919 276.996 li
347.298 276.996 li
347.298 283.211 li
cp
f
349.348 283.211 mo
349.348 276.998 li
349.483 276.998 li
353.619 281.76 li
353.619 276.998 li
354.231 276.998 li
354.231 283.211 li
354.09 283.211 li
349.992 278.506 li
349.992 283.211 li
349.348 283.211 li
cp
f
358.281 276.998 mo
361.179 283.211 li
360.509 283.211 li
359.531 281.166 li
356.854 281.166 li
355.886 283.211 li
355.194 283.211 li
358.131 276.998 li
358.281 276.998 li
cp
358.203 278.316 mo
357.139 280.566 li
359.261 280.566 li
358.203 278.316 li
cp
f
362.158 276.998 mo
363.384 276.998 li
363.877 276.998 364.255 277.057 364.519 277.172 cv
364.785 277.289 364.994 277.469 365.146 277.711 cv
365.301 277.953 365.377 278.223 365.377 278.518 cv
365.377 278.795 365.309 279.045 365.177 279.271 cv
365.041 279.498 364.845 279.682 364.582 279.822 cv
364.906 279.934 365.154 280.061 365.328 280.209 cv
365.502 280.357 365.637 280.535 365.734 280.746 cv
365.832 280.955 365.879 281.184 365.879 281.428 cv
365.879 281.926 365.697 282.348 365.332 282.693 cv
364.97 283.039 364.478 283.211 363.865 283.211 cv
362.158 283.211 li
362.158 276.998 li
cp
362.767 277.605 mo
362.767 279.596 li
363.122 279.596 li
363.554 279.596 363.871 279.555 364.074 279.475 cv
364.279 279.395 364.437 279.268 364.556 279.094 cv
364.677 278.922 364.736 278.729 364.736 278.518 cv
364.736 278.232 364.636 278.01 364.435 277.848 cv
364.238 277.686 363.92 277.605 363.486 277.605 cv
362.767 277.605 li
cp
362.767 280.221 mo
362.767 282.602 li
363.536 282.602 li
363.992 282.602 364.324 282.559 364.535 282.469 cv
364.748 282.381 364.916 282.242 365.045 282.053 cv
365.175 281.863 365.238 281.66 365.238 281.441 cv
365.238 281.166 365.146 280.924 364.968 280.719 cv
364.787 280.514 364.539 280.373 364.222 280.297 cv
364.013 280.244 363.642 280.221 363.118 280.221 cv
362.767 280.221 li
cp
f
367.109 276.998 mo
367.73 276.998 li
367.73 282.609 li
370.121 282.609 li
370.121 283.211 li
367.109 283.211 li
367.109 276.998 li
cp
f
371.109 276.998 mo
374.67 276.998 li
374.67 277.605 li
371.73 277.605 li
371.73 279.553 li
374.645 279.553 li
374.645 280.16 li
371.73 280.16 li
371.73 282.602 li
374.645 282.602 li
374.645 283.211 li
371.109 283.211 li
371.109 276.998 li
cp
f
378.881 283.211 mo
379.771 276.998 li
379.871 276.998 li
382.396 282.096 li
384.898 276.998 li
384.998 276.998 li
385.893 283.211 li
385.283 283.211 li
384.67 278.766 li
382.473 283.211 li
382.314 283.211 li
380.092 278.734 li
379.48 283.211 li
378.881 283.211 li
cp
f
389.652 276.998 mo
392.549 283.211 li
391.879 283.211 li
390.902 281.166 li
388.225 281.166 li
387.257 283.211 li
386.563 283.211 li
389.5 276.998 li
389.652 276.998 li
cp
389.574 278.316 mo
388.508 280.566 li
390.633 280.566 li
389.574 278.316 li
cp
f
393.518 283.211 mo
393.518 276.998 li
393.652 276.998 li
397.787 281.76 li
397.787 276.998 li
398.398 276.998 li
398.398 283.211 li
398.26 283.211 li
394.158 278.506 li
394.158 283.211 li
393.518 283.211 li
cp
f
402.449 276.998 mo
405.348 283.211 li
404.676 283.211 li
403.699 281.166 li
401.023 281.166 li
400.055 283.211 li
399.361 283.211 li
402.297 276.998 li
402.449 276.998 li
cp
402.371 278.316 mo
401.307 280.566 li
403.432 280.566 li
402.371 278.316 li
cp
f
412.303 278.041 mo
411.822 278.496 li
411.475 278.156 411.096 277.898 410.684 277.721 cv
410.271 277.545 409.869 277.457 409.477 277.457 cv
408.992 277.457 408.527 277.578 408.086 277.816 cv
407.646 278.057 407.303 278.381 407.063 278.791 cv
406.82 279.199 406.699 279.633 406.699 280.09 cv
406.699 280.557 406.824 281 407.074 281.422 cv
407.326 281.842 407.672 282.174 408.115 282.414 cv
408.555 282.654 409.039 282.775 409.568 282.775 cv
410.207 282.775 410.746 282.596 411.188 282.234 cv
411.631 281.875 411.893 281.406 411.975 280.832 cv
409.994 280.832 li
409.994 280.232 li
412.672 280.232 li
412.666 281.193 412.381 281.955 411.816 282.521 cv
411.252 283.084 410.496 283.367 409.551 283.367 cv
408.402 283.367 407.492 282.975 406.822 282.193 cv
406.305 281.59 406.049 280.893 406.049 280.102 cv
406.049 279.514 406.197 278.965 406.492 278.459 cv
406.789 277.951 407.193 277.555 407.709 277.271 cv
408.225 276.984 408.807 276.842 409.457 276.842 cv
409.984 276.842 410.479 276.936 410.945 277.125 cv
411.408 277.316 411.863 277.621 412.303 278.041 cv
f
413.859 276.998 mo
417.418 276.998 li
417.418 277.605 li
414.479 277.605 li
414.479 279.553 li
417.395 279.553 li
417.395 280.16 li
414.479 280.16 li
414.479 282.602 li
417.395 282.602 li
417.395 283.211 li
413.859 283.211 li
413.859 276.998 li
cp
f
418.209 283.211 mo
419.1 276.998 li
419.199 276.998 li
421.725 282.096 li
424.227 276.998 li
424.326 276.998 li
425.223 283.211 li
424.611 283.211 li
423.998 278.766 li
421.801 283.211 li
421.643 283.211 li
419.418 278.734 li
418.809 283.211 li
418.209 283.211 li
cp
f
426.445 276.998 mo
430.006 276.998 li
430.006 277.605 li
427.066 277.605 li
427.066 279.553 li
429.982 279.553 li
429.982 280.16 li
427.066 280.16 li
427.066 282.602 li
429.982 282.602 li
429.982 283.211 li
426.445 283.211 li
426.445 276.998 li
cp
f
431.084 283.211 mo
431.084 276.998 li
431.219 276.998 li
435.354 281.76 li
435.354 276.998 li
435.967 276.998 li
435.967 283.211 li
435.828 283.211 li
431.727 278.506 li
431.727 283.211 li
431.084 283.211 li
cp
f
436.861 277.605 mo
436.861 276.998 li
440.266 276.998 li
440.266 277.605 li
438.881 277.605 li
438.881 283.211 li
438.248 283.211 li
438.248 277.605 li
436.861 277.605 li
cp
f
27 515.75 mo
0 515.75 li
0 516.25 li
27 516.25 li
/2 
<<
/Name (All)
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 1 1 1 1 ] 
>>
/CSD add_res
1 /2 /CSD get_res sepcs
1 sep
f
35.75 525 mo
35.75 552 li
36.25 552 li
36.25 525 li
f
27 35.75 mo
0 35.75 li
0 36.25 li
27 36.25 li
f
36.25 27 mo
36.25 0 li
35.75 0 li
35.75 27 li
f
685 36.25 mo
712 36.25 li
712 35.75 li
685 35.75 li
f
676.25 27 mo
676.25 0 li
675.75 0 li
675.75 27 li
f
685 516.25 mo
712 516.25 li
712 515.75 li
685 515.75 li
f
675.75 525 mo
675.75 552 li
676.25 552 li
676.25 525 li
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 /1 /2 ]]
[/Gradient [/0 /1 /2 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.1%%For: (marla norton) ()%%Title: (BSSM_HorizontalAlternate_2C.eps)%%CreationDate: 4/28/09 10:43 AM%AI9_DataStream%Gb"-6D3-$b<?TBH"+>n86=:^AL<[>AU`#InKni1.8'CsGQ!%+^):ct'9omZ*@]ZcE._E=VqInF"N(.H]S\XU=+u;30"F%jo(l$j\%mk?"&4'U@F6_)NWMA&5,K3PYaKHuZ$<W[]",U=WY\G,p7kM[!jR2K/`?'SQ`jYf9XY<4rFj8&S$0CHBK[s,3k\[?d\\+c3c46Ntj%ru#T5R53/QpUkD0n\N%p50J9l7lu@Z_t3bP)hWcqrndA*rk\Q\4\H;s(K\)S#HN4K46qZmU)P=N,o:nu>MGX.*pm2Nm,-\l'*m))%h/dKo=MHW$^Z5;gi.lJ7[Z<<OkI9&%#+H.j^on:<(\XU#qh;lF+jB<2rf.=tdQ]cPgtUeEFRD<,o]QsL4hB(`;Uamf#Q=X)!4*+"%5Oq1F&"^DJ'6f?CreQJ-%0+Lnj#D$;/`JaENZA<'d!5XV,=W4<#Nj4shD[S]\?^6r\A*L&[C?%_ICpHpHe3JmpTMF*iU%YL`gnsL%NI#'<F+&E6E8ZaD-ZLMbht$fX#OFJl(;0[;0cd;'cC02dT%DobXhcgfG90oEf\/LD41ImqE.2ST%W?(]nA<a\iAaf*`\IE`^No`j%Ha*O)h5s&3T,Y227j$F=*,ONi8c81\gZqpc%;ps^:[7GfqYlbr+^isZp(=J,r_>(a!;'AtIs/%l-]9X&m.t,aM7k!Q1Hq/*DMC4S%IjSH<3so&f<0hW*:-/Z9`NN5.Q&<T#;/cp]gqr$?#=NlSJ*Y8.meu<JC:ZHd2;i^g\k/%IKP_7fDf(f]B&Pn-s&=Xn_1.1:7h^Y@%3'82Inj3?Vqi?sd`GtX7$S[@$h9GrU%NZ"NpH:Z)M-[o`mCb%B49'O!)gM;E3j$I$qr4Atcl:7A`f(s]^WA.#h`cX!4h/7NFT%oh%bBqXM9:L9p#+bAOLK?RNmD85Q_0m>Yd6B_b"@1SISfSHE]=rFd^9Q]]Z&dOYV=W?9*uSl7_SZd1s*!@7lYnP'TF2^K:&CL<rmAR4%c4bPOgO=V%?hnCkfKleBCqSf@HXQTQ?/"Q%2fXWLS)Ca!gfpHGkVp:1B6j.KqY'X6Q2UCA=1:)V?I81gs!ITu'JG)#^-=$<GQ3p-%[m8,LG:r9"D]S2/fGHm!YO<QND/9_84F;$,fU4kUo&)9BggJkVFCk42_=laY@$2S:^:W'Dj8/cJEC8b@?/F;kKH&q=F1I9W44d=n%kZkX/IXU.OH['\`ot8WQNORM`fCq?:mY=4$"8E8rX@eW]jp0-`!auL/hmmfjlL]6%_YE'gqW8R?<"K,fYe.N]1YD&!@8P#"(Gu5E%SgU)cB(Vtaq]`_"F5(0>[OmJ/[:o39C/)*O&c@cMD0eTcrlLlkX#3gk[aO_=.tY2t/TUmWq:>:Wfs_]6X44GBS)T`Qe(>l>K;M+&%`\kpkLK:pnjBBm;^2(p=<a8kR<_Wus@>de\9gchkd<PFrU#jW.BM6]ud/%>lg'Y2eZYEu`asPIl[+*>#*f@&,3OHXU60m2fZt6iN%D)IAq"YIj(gTV++a0'\oj@ab/>!HB>=7XlcL8Kj(d'/d<"B0iu$5CjRMI+[`QA_#;FX^Wp9?E?O%F/@5Ft$cJQBmh_9Dt]PV:Ao-%;n]!)@FMQSKs?Qm;Qn\Vm]H+^UOM!"I1<*9_;t09d9l25qoer'j`jo[CH.Mofe2I29@47M-&HR2cXO]#*)KA]U1k^:d#oePDRer8%7FcmJBPg=!d&SS?`\]KKg#a'hq1r'.[&'JIX1'MFf@k8IX]4"hfIH(#5EYh!$(;?-af$sb8OfiE\8<s.;mWORZtP?B.rAH(r*t"]%l]5aCC6AFJgJUBhC+ZWsb"lPBV.DqCAK)YsKU_PW?W**k,5f?8"k]-Oossa#>N/\nQFfWTV]QO68BB5AP=H8;:e5Ro!lYoj?r3(R%ObUdn'Qd146/`%bJKs+a$:uX%Ja=(25mjQP'<tBd>'<4LMI\-.'i'4ame-?[l@d*o?/F4j[4?Q+K?0^4)C,eu6ooNrA)IOC=6g!,%4OD8^2-EM:PC<SM8$\?n8Ic\P?j^TL?'5>(7''G>MHX&/ePf,@!/\cH'>XfMTG\'_P8MBc$4s*Vd'*R+)HRG+(7kY(Kp4tQ2n(@C%*8+Nq6nS:qe4JpWErX<01c)#^C5_j?q+rSVD5l*4Q.D9;_&pid>7"Js4t->J=?ki<W2=];orLur$Iu+PN@IpVV`[D!mSm2TL=ISI%PseIn2$rMCTHQ`=or(iMqG'%kW_l2>8tBF%*8q?LU1L59XWg7c<MI&ke>Nj;D5aTF"e&9+WXpXHbH)&-,%OdflD#Q1O@a&55]m/\%.9dMcA#M93K:o&8/Rn[,\='$K,`Lg7T)r4bs)WEl[U.>W^+K5jinLIid0:f)0[p_Q6JTLI6T:V@&f.!N%eR*g>0jU*d?!'g>B]`M%DB(R4ALQ.CGQ5%^K;l2j(h]&:mP<pBX<hMM^h\cCF#eia8[f@-'kj[>*-k8L<.dN$FXo,tFO>0=eep/fX3Q<jqM?H7BZC,D'<s7o%bo+3DT1g1%<N"KJjb+'^)9?E'gaHP;^#f7ao(!-p<D[nh8cjZ-"k%$KGg0<I#U\2.l,2sk<`W'"6>DN[&VT*_f=qZfYJRI_-!@q'%5I]Bt/#t04rc+.U1:E#<2kfob[U.U\i#bT$XVbeuXb@Z.BFW@hnLY,Pl<>]/,eb^FXIK)e_bYr8X>m![e>:`;c/#joJfBj^;U\0T%+k6X*#SLN1N/&>Q/OE*\gF*sTJ)Fqt<F!OjN&1R7&[HLXI.3#i:*'I"!%sjHNnm1a9U>3L7W:GO#S`;h=f3QWE/F*7-gk0YYe;RT%ZM3>300'Z,"$&&#(f9YJ5UmI]#HP)%je[D/6j8&I+>akT:'Mt7"$qfQs&WTSI<^2I-s@)pc2ctT5ReGV(99.V5*2-XTY_HmFU$nj%!Gu@)Ek6&4.@(a&Qdk8MW9^-\LIrPdD4mi$D?ejMRTSN*Y7tM!"fI+?eIq?Wj&@I]Y(U@/D?Xtn"7fb"MUDh[8P?jK%*3u+W&?01%EjW@Ac92tjqpCn-<WO*ZN$H]?gd3Z=mQu$A`MoKq*CQ)87KBB[HNljW_2G19#i=!6p<G=2DiG&,:o:or9Jq+6e9rs<69J^MDYlk8%AW8Ro=%-=>?$2s?.Z/!%2:^dm>nogMbnXF2YMiN[BLDElqUTXrNZiIdRMLl.BM?S(>BpHBj"L.(G#J$3G#S+@<;gB$h53ZeC.\:P%43N!:D#oN3$bT_+N@KQ^U[!uZ<0j$dU(>;&e8/.*c7GBf%[sYSLtWs-3sG$Kn<JE7#@2IQcGZ,*1RP"mfbQ:1*iraPXhkJ\XA/Rn%\eg)7Ra*`OA=4IDbsk(_fc_$rOI<OhXpogm7,XllF@0j74(\rHTFJpM2;?cP7J<J4,58jK&Zn!dog^js7$1YjCb'#LlF7U(F?0hI%E^L4`U1D]u=DJ@Ka&^j\TU^]ZAWq^g-A3['*2(,5$jDKo%Zk8;3h$-&"8^:UYSsbi5`>]2e,RNM)X@<ujt@4l;"*kXhX>:!<EEkR%RX[N^$75(HZ1]jI^K:IC<_u%A@C:bgP(ZhtN*W40X!"-cKXs[jp49U#4!HQsN)i%RVg,H2i=+;3H^*6>dm$A*M4=p934UG[MMQ80%Lip"%iRAH;8GZ)uE_;0e94E[2M,R0V'@9QP1Qg-aXHV[`m7U2Wl*819m$*eN,l0hDTTSa-OFumf:76+IC`q\3X)U0GBm6]l3tN_^%XJ9;TV)!Rg2i9561/(*'82(W`1;>D$ZPm#o.X2n4d'b$hD2GWZ.-pC\%Ib+:2%%"kWubD:,?5aalZd.]:W5NJNuC_l=UdgsX>mDh%_OOT01\\'L*X]5"E[pOq-e,N[PJ?1_Z9M))Fr1NF)-'LR,uBG`a%'!b"WIaaHQb#-Ql**"b_S63LOt3\%Pee,%b<<f+p;HS)hi\b%EGo*H_A!LBC)c>RDW<YsnfUHi*Qd\PeAAIQQ,>U#jbNPH8jcqK^M`UE:Y4Oi6k,=/NO3$A+G`b>.cT;a_$?1YE-O_8kcs8.5!5N5%X'nkIo2)VB!`"T0UB;pEXYg`SEn,@@;Si3jERl&Q<ghTC@@!J3L!2-Z1U1J,=@&]Slte+]8*MTY7F$E-`fnmi:)&k)B/Do<8SKi_%Cb&*1<Y@J$\Pfi"6mGAOc<0(B,t5dR6Ile2lm8LI,d<\E"Brg"'/?&Z3"%R2:XEi--Bnr6Ubec2Md=[0q>#C(VFP:3M4E<`A_4L;%2nJUOpXrbWY_V#<?X0on>hn8s!,'o-`1Co;HDC>9]XrODfji+V>rZK+FjBF%eW%lBfK6^e3E/)rlIf362EY&bWr>hI,E40#9'9p%%od^>"?ZMU3eZ3<RU19.Plk%m`e-N*Vjq"[Y4uk_d3]t&3ij4i4X.>_E1choWIq3Y/e`1\*(&;eP3ied3.H=p46^!7Y?6p@1N'iEc%=S-XP5mTnebpi$?V+!mj3b$VGD%`OB!l]pS+QGCOAV[7&gTJTZ$TH`#F2/_%"M>VWKJPS1WF0Da#h?0LMHEjn.hseBMFHBV?u!h$%KcF'WYtuJ,e^Q<SaN=biYoiTVlj".u9e':CNuA;aW2#[0K@EC%8Gk_A2=hF18`\]pFkZr9'Y()nMLnlT/O`+/padYnV8_;75^HVr%D$Qp#ZD+?&rl`*%&:+.=eU#U!IS`tuU+nQZ\cru)&OJW5YU+tRK\Tdl99XC0C9H<o>?G66L?o=Y/.GG[^IO_2)UWo>ajq#Kr+>;u%QlE?Xgs?D=QQhLHAX5U0BQ@3iLY>TG\%PoqBeYGs9e_LA66hQE_rc^hO4^90U1Suo2N(!)Ad`LSh@S(F(n6'0&`\&b-rHEZ9&qUa%'>s#S+F#_rj([GC2*hU4\tL[+%_Od0\^Hj@S"j)>It>K_cWlWT&K.SY[C-T*QX,aSY%^K@mOFF?mN5Te.<IKL@BLSn@S\qSd`/;=%Hc9\##XuF#da`m=j`hGc]('5==3!Q:\>1UpoO>>XEKRi_kb=!eZ(occY#R1L<):ng`b\gn\s^E7kI>;DR^Ci6qEsljQrSb;:'G1I%4THt:bn\LH\od?c`GI']dJAu^cI&oB:Sf#dT)c$i"NDEFi,/s]aF,/19;6Ic?$IVM)pZ0lGXW79',$o^Pb:U&p>3JokMb`R0Ahra%oG-`N+m4npT3oUp,jfu/$$fJb=lUd3_)VRf0'mtej:>L95/Di9GE0RQmpHpPdO[htnMkKtU:ZE5hF?aJWhtr3!Z-jDi'usM6WtJ1%E))7J)RR#S*p9r@&UI]\K#\MI5^FCrFPT'-Q?FLQkd*4@c&*ti:"3apCU05uj74Fua+>(";R-VU0LSAr884ciY5AUm`e:<gJ?UO)%g6Tf1/MnT9QH7Fq<&%Y^R0GqbX`DZIA>g>E'!bu\$NZSlNp_%J,dTlE1CLK%;C`<#FAA&`?rATR,Ls^^,M)B+pko1;MTC#oNb!O@%)l/I-1Mof9ZuO/m;!qYgFZ,ZPRnT<&jfpfQTZQZ[P_J5TqU#ReIZsB;a\b:`OcO6ppsSQdjC,6:d>+7Sj9fPIWSG'3#C#F5/u.?Q%L2UOQAg9mZ$%d;J1b1A`,nBM0EN"Z"je/_HMol#\4A>8a.<ik44%eg6CoLt[aKQ]ePFh.1*2eDtBcte/B4mF/Z`8<CLV0-PkD6d7%1N[Vk!VjRkpLAjEUG81Xb<rh]-HJYgs!;I"ijlE.k9TeR&Df0mG;suZ0mGX9h2Rq4T1JbFW.U^aoOACrWWaG$+9,jSn0eiJ_DF`M%=IP=Z"<'ZQ^"pS^0F8JG`:Qo@l''Jf!?n0U7Kb]uL_:A`,-'YAYc#!r0=[,Z"P1\/*4[Yk@aRS&f16-\F/2sFQZG.EX=5=&.4ocj%)ARWX1'"F:#gG00G+iTo_.\f/Bi1/[<TG0-d]4SB<2$)uZ^eoG8[jLIRg[1TX1AJ9D-/c4o?[q=2Hd@sPG)N^]k#S=pi%upp_MDS%'(JQt=^=Ebl5ZWm8EsHVb#a+Z6ks1*kT,kDel:G*qMqB6"X91<olur[qIK[XaB;R/0gd(?B[r#)M&15`3L"N_\JJTu3gJ`(8Li[9%e\pWCAtF!E+"gP]6!@aT)sgXRjBnEL[UGP9aAlQ8;@Fel13B"6/:QI"d2i1G!Wq4o9["rBGY,oCOF-t5L)k:+>L&1VaW'oqR(%CC%O]_"*_i/tP7qmTnD's2\!9fUK@(`&;)EugFiI`WiL/Q[-BS*@n[$H#b.9fJU(>9Gj&o]Fc.Qhk4W%&Sgi_`-0$Dh5EO\-cGNe6R.%Rd3CA$=gG1^JlU<jd_[lUWcqc;),KeVJD7OK%nhofo\k4OlXbf<T@0t0r_!U5L$Q-Z=3a[U+;WDf`Ke`BG/h_0@#s-k"Q64mH=u'%S>!?2R]"4dS@a!3k0:QSq-ZMprdq5d75rbBn="&4\hW?DS(2OBUmBn[mB!^5<o*tuZ<t`uS.3u%-"`QFNfd</L%5)8Lh[?.Pp[I+%&'lauH*o8m<m;4VdBY5`<i&/:%9DT(MRalEfP1nUetQ)W]4VLrCs_LpAGg/jpVq0SB[.);WqeqEl'2ogCE_fV&Q>=V3ZM&3)Xp3:%"mdsCGcM6n=M\_&H@aR9',9=ne[MRSqSZBEG0:K\Y/V[Z\:gR;+MOspr6kq0EE"Y1=,b.Mc$7<E4CgDEQK+nZdoMou`IKMe:_F<#%XN53J-;-,IP0o_'KPNfdKr3Ng'-5ssdk'KJa1'DP)ebu+>A0H71sthF1sK]+6J6B"9hk4T<bZ-i67E/&";Q'rRQ<&jNM=qFZ9$6!%Fiok.C1MQt:;V*OptE#(U=6/U,2SP735T5?2>_3Mn$7e=I5],ifgO(KS'Y`q&9q:b4"Rl19bFs<LP;39e8Zqu0j3'2@7PN^h1^1m%3,b:8#uBM>C"BO-"?p\?d/tfe5^FYGAORC0\#Wog'AXZE1MF0#&Z?(!&Ju4NI`_0e\Zl,.%IqT:M,P`9R4PSJhir;A""q&u;'U=^%AQp0m;<WaJCsD[WOk#koOk#^dQV%TX,7RX>MJ?^aL5R,_=$<S84/u7AMJ>V:WYqO79t"BkW**Q0</L;@@==Cc1KB^8(^n0[Ti/,F%6Ek#=f`$[^Y\=[&`K$6<T?M<H`\Od8e9tX@1%qWd4fX2hf(7&(>2>[8HrP-39&Q;eX53=b2r3D*qTCtok,PB![2i<ZD<S]'6eA`F%Ct\;PXl!',9;BWe<?obA_`)\Um>Uu9oTqADRpkup['BJ[d&i6r'HbMMaC2&2en\32/?4C9pFA0WiAsd-m*;VU>nO:cIfnGi@kL4:%-3;kXf9)E'9BfVjlV\$7Z'pA](9'lu7WFlMBeEA<;*HBuUD3*s#U^1I^DLoEi&hK/K;fhB#@%sV?OXF]E8lqYL-XV&Ft3g!KkOYM%/+A%FPnO*mY.C%HZ]<2>(?em4M_NCSc4XR)(16-BC@Fl(5#+:b%PG-1X"MbjZtdOOp;%]S;T+Q,MRXT"0Hl6`Cjl28+Np],11bj/%V.m#U'N@#+'5'=)LhLmTAMb**=c]Vb#?99,.>'n.nZc!:;,QAj@sr#h4c$'YPqp?8jU\=k_^[d-l7ms]+%E_?pH.$l0T%aCgi-W<%4ggQRNhWh?["i3=qk-p%'W%/mo29R7Wm&LLIW_"l?^Nt8Wpu6cXeeR9F(Tf-]@K9for??JmR:Tnk47tTV=aWlgT9^AlfJP#0&&Do%9"nBMkVX.()dc+=)ON=Y(5eS<i,K2HNRl=^p</;iOJmk=7,!I,^8d;@)JL]>>sWpU=nl[?(Auedn=rUjO!spTr3GcYL#5CcIP3pg%[FA"Q^1nXQGa?@qB^(s?VYUIudGN8RNZ(*S<>oOCZY@s/3rBF=1"RsH2%+0o.4r!&cEgC=#4Ce&UZC(^fQ7:l&U/0Af,dCfZ)D]\%`d/9O)(22a5(mH5'P#$N&u#U!_)V%^*c%@#Riq_.Rb,=o.+;l>PYkh^1r2-2H:,7$_a4*Dh,/\Lb)"6R%u&J-AYKSQ"B5N/*X!%/%!;&`!.@2MR9$Qo#m.:NB48d4VO3W4HoLgY+=Ypb^R/q5O+e)'*<kn("eKgWm*neIUA(>m92kcI<1cA:m(ub;@&%XX]DDWfV,Ek'\%7^L$hXGmMm)if#1A$Rr6jG\d)F"uT^^o7R/GpDIm0%D(k.>e^]6-.GYKHnYp5UradfMC^%=^,a%SgNjEBj+2E.[?n[BZn>Yd,f>\%-J:po5B0'1dDf?4)FL'4O:tY!Xk/3h>D1DUdp/Xe:NNZCd72T\3>;F[*0FUQi!T(blG<739.aZDF'e<5OKhgJWp$/K?<MTh9N%!k%F][n6f.4/u:=,/A,gg#!RY6;$M]1%QW_;BjLs!aNWf*'^m0-'@XK'g;-\q&Kq8BiAXXAj3q;7WDF3(:O<C^<UOR`JiD"%"'\F?'!%QH6?jM2G0[`hmJ^Xd.9BMeIjRgsD3Gp,a["_e2&d5(u=1)=S^MXaCLUlh\(URk&KUorj!9'0d"j.(U7E*VFUeIttE1DH$QN.D@mD%=f:@(:$p26JnQs;25TJhH:g%H7tc;_<P.8^lDe!bjlHt.ll,+hR;j.nkq_ENb^-9%lX=g>+kY1UMVWB^<Ptsb6TSm=Zo`_dU<48E%!YqW%W2)Nf/GCXL/\bYTVh`IT:@jlTAYmUcSo.(7LBsZNN)[Q%i&:*pGJoHoOepclPj2Pa+6ANAh@I(?2mOM7q3o\Z:8+"if1-0m%"eSGFjl='@4g3B8b5YA^+%a#<ns@2f6(P9f]YX\Tm>"YDBMA@L6m[O>9'TY'GD,Rf?3q2!j%c]*MNZ`*$.kXs7DR]%$BR)]i5)&R%0s8+.H)P^l[4=NS-ZC[uai^Wa1Sm0I4nE`pVb#+Ql?53Zf;n$#C#)dg#qI7-I)(`E,o%/-@HfG0PKI$Z[L8I>bL,'.5ZOdC@1`Wg%]Gk`IZf-:$s6DR)CI!"j8>K%e[Mp_-nI+o>MFNiq!CJ>bbH]gp^EI`o0i'a17Tu$:Z=UcFE5oDd)T+SqH%i#U&&,p-W[2!;;Rd'5%O!]=a*"B0[F@ZHD5;#n",%]0RTpe9r,p\PN)0?N"7R^h$Nmfa(EKltW8K)IYZ8fs>h9p7)b'6%F]sf=Yb85QlmSA[3+6E57iVA<[%ho2`ZJ&3jLe\+1YJ9ieM,T;P<%nct*o0o[5<U-2#ilpP`p,/SO<pZRD*CI_%S&uTA+Kmfr:80LFZud%:q4]Bfo(*^tp1VDQ4If&C%IRU?L6S"F:1J+aE&c"8YMC+Z3C<C>(_cbmi66K\SOQNX5HLbl(I5VE>,9N\PPqV,[jr;8aP.aNOg8#7YN3=`hjGSg4r=:,8%2G>Z%lqYpTf^QJ,;MNHTF_)T2W$/roA/W;T+a.B[M+/151eiOEm0k*(bml=Xas[&l-bB&Lr#S\BNW5Bl0jJBh"#>mYRuJome[:)@5F(!m%.hY'LL;_Nk0!&'K2sb:k\c?HST%H-D1[Z8DPuJ(T?MHk@:"J?Jh/?!<CTJogd)C3N(Z3VGHq/DN*Sn\YF;Ni^?$o.dnK$H)GB=YY%d;<M$>'rha9'rOM/\\!,I&pIu8,"@'io3&2Msoj^^8&=8Npbmg\n>orM0eo,\)'hqZSCCt41^@=kUsTE>IQF?^8&=8Npbmg\r6%@%T&&l!ArY[SaP:D0I/2e7Sr_99Jk%'nh&nR@UtN43mLtIC4JRX'5>>.,_@d$dU&^+*AT7]EKYRL0U,'];aiF1B?QlFuPsqV0='7).%P36)o6C]I#&/>#CHjRP$;5brQ"l`?X1Jii-D4uZp?=SKGLSUZ<K"T:cB4IiTc)s/-#\P+Vh.V#g:q<O'AO&m'PFA4J(k&,U[>dZ6%:0C\n/0RkVS>ZVRP[F$]@EoGDE6MgK3Qd\X'd7l[maQZ)/8dknmPme^RJ(9`[k`b\)XShg9UN!APXh6WbU6YrGZ$hhdARYb.X+l]%#[a1!6:_q.U*1`/N!Q0aL^EXp*"kYj4):42<)Gn#>Jnm$J,iGCl'mb6(2'dEO`35(eM9bG*H)T.j$.7dF14"r2].=F@7S8'=H7AU%*0niH:6$s.`>=OE08tYS=>a#;!u,jOP_=?sOODQ4mXFrk7]i:*ajJ9j5+oYaOcYVsKO<_VfDijdU;dTAJ5.O.[>5,<Yr3LDr=$k5%9jF_bm"n2&4Y*;'StP.A,JAuSaumRKU+87U;O(k!C94/7S?"k*oi-Sc4%-PYU.2\kqK8Lj:M>da^eclKQ$:AjHc]rc*7Q)473a+O%Frr"P&q$F1P#%Xd%?!@ajGAWPT%:F#N&jgggf+61@3G;DZ):0(NeSgO.cUmk85(TmdAMjg;6r!^]lZ(t&o&&3RL@/p0<SJKQO9HT%2<eb]62IS4qQ(o2M&),I/2`@&@h<)d*<Kc-7Z+uUA>FqA'X?qf%jQWAJ*Y[oTjY5M^.3rciQZ-DE%E_WN-H"qP&sk533<=PnNtH5%caK0BU8E$g0prTjE_>_27$[(7a8S-V\%qi2eI)\E`qn(?D?HUMN@]/j84c:HP#P+Ar\%M^AQV]rigCRF&mFSK.3p4ss2H=\U/=f<%RQbFhIakahj1;)G^8W_XBtdrJaP#k!Fdp7V<u]WfbFn6,o;U7e5Je+;NMFV<0`oakoqXKpdpZVUEBf>Ln:uRYS5$>!fPLC6C5^@r%KWV,VLq7RpeC.G?i#Rdn_jJ9M&Ii/^23Bh>Um>+\GG^\9iX4k7*iG_b>`Z-;ekH2s)b!-IS^e7%'gj&EX+(JX<ld0+EYsLK;BDS9%aHlXn/!TYI=cG.7pk6=_>5Yb,,c`u((-/h%Ps9t@99n'IDNXtB<.nX).;2=oY.GE=eKHB`6@\4/R5dSZN]WJZ-QVnQ+:,$HP/o`M%W$`X.H-Xfn@p\lL>TRqaLf;T-Xdj9.3SaJ9b!G`R[TmMsobRA<<'G>nG_29-hIO;"'\'0$;6GZ$,4\W);r*Q^09]JUP+"X6&],d]%S/u<l*9YQPKlO7p&uoVC`40!`\>a03Lp%jhSi_n6p0IZ.^'3Dnod.AD_AE$jhdu3DH4BALou8hk&K^b_N;^'"A>+?\Csa)0iq-BL%dA/2B(;[&2`E1*X2c!;<F`Pk#E%]ks(,Z(^eT>ZYr&7Hh!,GppJAWIVdY6\aJS6,2+ZVlT=ip.Ld[.5!^^>jn`',\=nqJDX_Y>ek%M#ibf+Gp9\J-cRNLc?A&iJX'!TV*u`K#/l\3/GG(&@"`Q&,Y!jYbU6-%=;&$Irt%\@H6o<\2+Q^X9No!++(V)X-6"MSmeJ&"M\"U%4'GdAH;Xf_;lMZ^0Pr3APu;p6&o,?fW*C9U>e.Hh&QR8,"73/IK]25SHp\j9`eUP10HD#X5Jq$3+V(nS1hCCH#d0gnK3NNXajfBa%M-Ie<]r*47O5]OTcpns9I>8Jr>Z<L:;?(?c,Z8H4_q(ft-mErg')`O"S4!r@Z/icGQg17M[irI6i<7*Ja[Jg)c5b,:L4"bBhdP13%EC9S.q"O8ZbaS[LCE_V56TBR:0Y\,"-bQMr2\LD7.MRrlO'>Za\Y7_AdFaDl`nEYaY`dK$MXZr9r&:g8J4fo])lgpp"no%VP'g8<%YR&HQ,K7JIO9\G-e?CVdar9C7E36`#qDG89jfb2GN\3EVXNPS[dRqnEME>hsG\4NF<@75.:&!F"+'^=H<-RmAK=6BaX5c<9+21PA%_Gt!=YUX%FRBE"4po19QDORJ@a>T0M-JJYg6_EC<d3th/5-5.i?JpkonpW%RHRV/jn#Ke?)=aE]BZ*urLV?,BZu\X3MK)'7`jM`W%gcKtC)QR$u1g5omF_6o)<gp2!lA'1*cJb^*T:o<JU\_<%C&LZi8W2C(Q7B#82('Q*HYWuKkN$IHkXN^)2pq;39Mr8Q6T_@&l?ur0%:I5C'PJ&]qCol0C8D#A`,F^h"bX0oJka"fNJ0>fjag.<7'iEq&/>mi4*9@4:`CKZGcgPf>*cC@O3Hm(u8Du4r8$CrkEr&LKs6/D+%q=VYC_>\=DQW/DUYa6[2n&]4:,A>.jLo!60/H"O:pre]uka>3"H)1&/VrGuKp3f%aVi)bf>-3Yl*,"-QYoMg7J:Y@V<E=e2[2R\@%;in($3#lH3fFP:RVY:pjrW7m6DPiO_pP+9]JXoWRb\P,"`"3]P+Gf\^m?Iq]e7C>rUG^:8#?cs;]3hLSN2;Zl02,5F*Z`$NoQ">t%8'Sh;?3q:BEJl#>$j,e]o@m/>6hkMKmX>f":Dr44b9Q(.E-qn4Q'E8#[Ge$angrg.^i0-md9alO)"<W;WNeRkKj2j<9PL)ec)otC%6f0`^FVn=.g_WM49F\qG:?)cZDJGh9F_r=\G-BX40O@'Mk;W_KNQj6[_Fb^0cNr[hkJp<UpH6P+pFJ8Ob)!I7o<abM\mT]:K7G\`%@gIh@=oopM-B*YJS+>n9/fdET@*9*#\Z8:Ad)d?a0qn=r3&d;B(;O^u$4YW?6R4L"dfo$,n[eeo*A@Z8.i8Pf2Wnr8ml_4!oPEc]%ajT1C*2(Y6.Rr*0\,eG57kK.kU)E04DWlUlrjUWCl4hF9&0+mTK5rVnXgTu0-0##MOd@?To1l6\:!']XonArs"n.A.#=r7FdPEMW%jT-'Mnd?;R<sH[T9E6KT!-stdC75i!!"b&jmRLU1omi7AV[-mD]&Ep3DBXh89[;5l^p2YtOED6)X)fM6$\>-(k)0W!,ie&dGQS6*%7$TN#'@9hu=Nd6kEkMl8B#45kq"pHoM-P#XXP>a9=X$+BquDE^5SM<ELRg<5O<g$c*<JQ/=]WO-%9V_+%jI)D:f=k5Oaq*`Supuq%dQI+g(nCef+<Z,mJB(A8&$&!!.:d&sZ/))(>'ZI_npDoG*$gWqDlkPPbZelH>q+]dm!"o]1dKX:CatYW)%@%:_26/e/mt$9XXAOO%#;r_+-C'U=3tQ39fn%AEJd2HM5.(L%E/C\H#GpSkfR[9ceeY-+&H\u#_Gcj&';HDT1I/*BD?n7*XtO`2Gu<]1Uo2+2AY-V>SI!V#%YpZF&e(6Du7:6^4"RH,5*`;JP5^1##N%$*pXIdh9RAZEtSdHK/$R*G;&8U;D;W;AE6H"`B)?U\)$*rhq<e*a-#[RR6/rOjpJ-9#*%>Rh<ah.efF(ZBd-]Qn&op(o10M0/FO_6&9=\\FVZ%)d^gLC7VR-Kg-9#3beMQ</!0Ti4>pR=NFY*WX%UBTQ6+S^B.__@si:M'bZK%DL,*fGhb-,_bX8t\)"Q.L=]4'5tp?!c/E5&'(c?8#$;/:4S'122/WBsa12V/4N^AL"7u_-KR;nMeeabIN!iKK&[2Nn4V/>To-Qbh%.m"g8Y-3Ct9^1+/_.K!LX;=s"9e3paVSMFqAZ<Ou^k24(o`]c`0b9`r:<3E<b%GTJcd\=M+:p6!q)$;RVnL??(Yb&!bB:s+\1aGu%(3Gsc-^4)D17A3cWA`mA.Ce+(4AtWQF4ZY$)A#(@)<1B8#t85/Ug)$<//&[%:6cqlQ<G'B1Eac,%5<`k(3hD!Ceg;t#Zn+@9]9sq%qA(X0!Z7.s*Z%53XH3mHQ1>KZs02]iin(19BF?IHH.iG[4I*%rGbJeUgJq:m-s_k&gVQU(,W&t+/U4<-KDRbrU5Am?p5U+-#\?"G%YYRI`3\bl/PMF8\+>P4IS;q4X;n2K+!CKQHZgJL)*c$Sj+tus4>Osh<;3bcp2MnOXTVPR=OunZGj!"cd*pC!bTG,HY?us-e9s=-"%kN;q\+Xd?UP(,71janj>,>mW%VJ+bSqo0g7-V1)DVt:'P?1*M@pgkm..c,V>$[u*1&g%-?I,KE2es;)K4sL(A8U%t?09XdS"=QU@%0fh9n-(GU8KChSgEGYoq^G/H7#4Ma";:#U57/bYC")C;fcVqFJ-phH2%KT!%R'IE[>G%86$gXb4*(W;5G?La+XC,Q>Gq$!JkXbki%Y5m^\_&tE4@O0sGM2Cr#*,"BG5jh4"?"..e(C&-b*MQ#WM0W9Z.6<V?Ipnl"l7#dX"O.XVPl]7O6@0_f1GG)0BN7rn^*G$<,;3,<%/5&TpB!Rg>YriC6Mk:0WMDLs1:=TM;9h/!W@S&BWTXGmFEg@mi=:*f*L)^7Aragh@M!HLfi`&tt!7+ceARuee^\1>Y:RE(<3X\EC%Qo2N=6]@4q&I&4oJV2p`/q@jq0MUVR5^g@P3Cjp"0(Zr>,bW:ks.)^bJKXV5.[-IpHkN(plk&'"jE$nX4.-b5EM.V\`>aGQGUr!H%G`IS\GsSMoVEM-eM1mbdM^neO5W>!gdC_16(0a?*1>p8o;YU84#Y;\&.cN*E%$s$hOp*V,gD()DO:(I%/F>:rj&G`uAB[k%lo*%!%jXmpN.:PE\&sc)r)N,E#=tc),=;[Z?]k\&-.Ln*4!`94:1eoWB:4p#L/s\uh:?+At/VFu(14Vq"$T0BE#V=MM#F#7P6FL*s3=&Z9%k?_-X5Z*D[dZA,B'LY+K:-0[d:(-1.NjX@==eWFPKSi$fURCYn7e?n8V#_sM,(q/mdkN4gd(X+C*1M3S#f5@MA)L+((^T:WBAhrL%@Z1=2grlPqiF*@Q[o*O)!cc$_'NkVqOVgQXnW/@c%/+"08#F8`KL.J!_KZ=sp(oY6dLS%4A9ZhE%$[Z20q)Z7OI:fDJCIn3=r&[j%(44M2RL1K5YeQ$TjV(IY9X"LKX5#LrT&o4rB::q=d"I-VBduR"D,LQVj!UZZk-G?e9KgYag*0@MYi9hfJ[n9QAAY/&+N9ZR\:l*Q%U/BOGQ@pX4L/]f"W'p&QHSZ!Y1W6h%jg@&&(M=LKeOti9-s.?)+@_b['=fOMo@?\-'V13%12YAt,;KsR[<#+A'5IVPc/`^1gJk&W%0TouIFNr#:qat<Db%bXK<.upsg/9GC"44uJ:4#.ZOBS(17LN4-isO-u\71&q5j*F/M8bDXDc&C)i5>c*;IuY8!"`]>/<CDLR!>#L%/jp4Gi0J[I%[r13ERD^7`C<_#Uu14(aZaCDknR<3,o-9S`1Vfld-:dN`UEk8B.tM`O`l8kbn9%s(UHKu3*PBV;ud/\,tTZobe-Xc%\KLt]0?ku2-#%lHqH?ZY#k:lF_P1_%F:9W0fXMlblmX>aqPtFU0rR3rVOYMMcIl-*[Tjs3&Q)IRcqI),9pn7i::rFc^s3-]@\*gO%96+EHcVQ&+DFuk?=aJNcIHR'#p>TX#1,86BE7SFR:5&:>J:7JC`YJ\i??*E-[qBJb&Dlj1@-#&Gg-t-mBIAAu#hUpuV_^$2OSQK/%N,rLZSj^L3OmI#ecXjc!4Z!7_)ndCE3qqL_H1Hr[^H%qGb3il\UH$BCkb&prGERj(Z*h=YbuerD@5T1c.3S"CnR7c7I\KC>#[[mE%X+D!!(c',Q_a-bBb<^<LnM[s%'N,ke)7InD%(!k0N*sG;i;*KX*R6-'+:>''>a9S#c^\Ne!c(sC%LNgi!V+Va">i[$)IMrpbM!pR%V<-RLLhL+FOsE6'=]gpD&?(F\;I>FM)h9ADCILBbjns9)cJg$\E0_p:X4*$Z(+0MX=#[rp9T0b&)9BBD5>TpkW?ki/!?e&4%C;]e%`B`QrDpk-\^aZ-C=Y)L(#EQG4,&k%R#gAH:o=UUOmXViG10G`Q4>)5nCm`\B*7/Dn"@Q<T"*5]6c8m6\OBI(KRG.o;3Z#>m!HJ4X%)J'+@;&hFAZ#iE+Rt9ZJ3#Ae$3fZlI_#9Q"nq;/u#(Sd14+hi7HCAQgOe!'q3!Wq1YY;Odkha^AO50QeBNtPtdci#S_Bkk]LD)@9%1BA8jW\7&@GFLOGjA5iRA3Z_306gM8&mtpLOjub"?U1(N*Wf0]U_6(CIbl:c93)0acPiR[U?=h:.-,YOaW*"RN@,jsD]/TbPVN6,%X;nGm$3iQY'7lglVoJ:6_eJT?(8FXc#gh_I`o,'UIU/*2+WPdieadUQRO,T5/DW-8F!R2m*m;&EJ^V%3h+'<,BpgX-+s#$@E\s1A%M'(?FEhA>J'0gApYnBGeZ6JHTS/m08DuqKh@JdHu>Fro%!jqg42$Q.[9"AX=baASL7%,!L`[mPY;*+is/`c/..[L06O1!8R7R30'%-V;m(TTok_K,fPAmcrphTRE7DJrFTT3P!+?#oT/Y!M#<D8$bq:-KotO(<_^_EG&Z391V`15cWqeS=nnMNmA9\`=Y'PQ;H^&'li6*%07_,!3-SJg`u2EHWWReNOpIK(BEY(217BCmS_T>l"CaX/i.3-H#]qo$ghdo/6b@RI`'bS!'u\]bQ3#/"`km1RJ6[GU",+hi7IAf4%fiSbY;n4*?hZEM^LL^I;Ya_q(`%r!kC=sBA=G1(;l837<94+BV9G.pC1.396TB]C!!2\`*8m`2c!19USgE]qE"+]<EG[F`%LBAH[%#k:8lZ](?pX.09T5Zo;P@Qgfgh85BfS/6dE7Vb>"<##7Y+kh^e>j"O0-Q4*T0.gN?&mGp7aF+(t2=(1%l\ifOb,p_M>U0<K7p%\N%Kjhs+.S"4.]2VIu3tG!1.uFV8E1^Bh*&KCmq>ji[#d5DFQ[ssW,[QRP+qOCkXcSlS1C?D!7*>_7j``-^eu3GZEeY,GO?sg-2hbKR%,kTSFM>c7jNT!`m\AH!o!-Dqt.E&`%CCH6N/43l3OitZsYt62lji=c8@Sq/+E*SZdCd@n>JKcXlnHa[Mpl1)"IVY-"$H,&6B<T="%D%)WuoRXJP;nr]VNPF<MG.p+'>a'28CJlB]6]s27OD$XZN+JX_J9%NYX5X"`A$F7463+%7&?2"]On]m?^spgRRjEb1(R'su'scJ2%holA[P7Q1E6.X>8Y9o)J^hI?@`"8<PCu*\+fSMote$0I+X/mF<L6l"c`Ys-:AF1^<N!u^L""hhG6RjMY7]"NLEu/A;=FetD+2^PR%!dbW*0!-u8(KT3e*((PScU@#*'+(TM3V"@=X.0:(332>li5`N"1k9/\cJV1u7$pl_+2C;WcmFolJNt$cl$u$\A6LU#OF\bK!uUY1%n,Pl*&XXskdu%]C=Y=7-amh,OOh0:tj-#c;oFRCIj(]LIe]ph'aHqiuTK/0n^mWpZ!5itomd$URBNgkHKI,@j]h80KK4_lW%j?-D%H3[te!I\+Hc4s4cbL==()u'H(^Rm6C.5:%$"V8DsTED3YHYSQkEF:/mcuROV_E\ZiGZ9XS+<[2FbWoCu#=u6n>qD$\OG.H9Mj@-?%JnC+ecAHS8E90](X8NG\l'r""E^+<4"IQIpNo2*94FgWE!7>gV`#:S>+R54?&UCUY/XZ;UR"Pk7bdZBXVO"i_''S\-"AGnHS/EY;%?BA++JXtD[Vkn&0X9b>8?T&rJbfKBIieL5rAOPV=f-`To\s3rf9,&9:l"SN]&T%#ihsR_"L3+1i)U]26,;9]T:-@XV=V6q$:*1,Y%GQ8Ar&a4Tb[!q^k3O$U7&"q+RJnuQ5;,6,1)o/5<(QK+;QX,V?YRh8O0_6cF^n.OqkZ25C!)54,/g8ij<"Q.mH=SaeI0hYe)t!b.%1Oj&M/;d9"2W[Y"?qOE.#rPi.J=]1Q8<fo>q#LgUiYH"[_BBno-a7/E:?bTUa,gY!`YkuoO2.a08VZsD=f=i.1,:h^:&Sg\=WnWi%FU*(8Q[gtGd5.'hauec?M$D$h.rsiJ`#um`8jPnn[Et$(mi6e<Qj5=>7H+;X;F-ta64=js-D4:@8h)7lJB02rcobMWVP<#"@1dIh%M(T.i5@4[p;+PO0BXLYh*AcCgOO+,?F=ngZ_'YI8:jg;7\cG1`9gE?$@oh\E*lmg_g,jd)!R]iN7$;O*9uPI9c'-Wf!;B4m+O6S>%@W]PP7>Ec%>r53r-g5jLkj`DIoM%*O2"$/*Qm1_V2_"bh:gS((,"^Z`VFlYtiE;kG0'#D%mi5FE*k@BTX>/?B.:lO+,?V&O@l5-&%n[2p,ESS,rrNOT/c7FO.e")8U%O[;M0[>BH\[l$`!$,"n9/lq]j>Rf/Bus>.5ZZMfX:i@'?Z&0J:FE(f$c90[W6r<DBr;S5V3+^b%)J*U<jACoueLF4^b0<0s<#6rcc9QZN-W:/.MQT_.(KSEckUCq;p-tGN-C"nck;$84H@j4[#FAg3+mMO-/p'kN@Pl/).g*;K80XWX%dLq(6C`0`b/HRqaA*pH?>n7(8>%YRI#d$["Ai.l&+2Bo*l"*C9eehY:aj\p##\`g/BHQ!o&Qm,:`uNi#"'EC"R$k!Ml(D0K-!=!<%R7Lpdl9H8imp;_``/gV@J6g:A"/,1+11moqJ6'k,;-qEfmOR<Q2EUJ.aOKcIa=#`QF.K#\?Nrd_:<"ks:LOYk#GX[,agFg$9o]_N%f^qf-Q-F<&Lj92r?_sio\Jb/MR?l0/`a)SfeYn7[Ub0G:!84:rZ3Uo$@=^X'LqJgn)4c*)`b1l?-nYNViAM/s4<S4[)h:@(G;!H=%O@JP[C57l_Gb`BuHci*!R;;m3!XL(95R=;15fH/$6ZIY3F+D,'.hQ5r>3<2cCa$MRZ<a:tDV-KB*L#.!I_&ATH0(G"KddV\F(**.%q+Y%gcc"9hDm2U)AWMn)H83an)%S?F/l*6j?IJRPBZ+j4BIGNT;lgU.i7M0F.X)#+gRsbnr+[h=+<_#b\HB&m#Gd0<"E^X2N8,V@%,1r.D>njq*Db1?l&T]`8YErc..h^64-1Q]*_Hn8*d'1'jfaphTK?ch%NAVr>7'T'YNFs%U+:)7JRFG[SNn>NrE?q2O]XHe<5l_;O%&dspV`*fK9j]31K$=Z!&^k#E7[)DEK+\$buEtfkC!ej''X\ocuYa8-@ScJm+\_e+Vl@>^)mlZOcJASO+g$OC8K.cX`Mua*OD::oN%@+[7NM&O1H"3!<X4\[R'O>d`%f%UEh'\ItrN]dapak(*ELpaB.QPT_*T;fS1#`[<%(0p*m'dO9eW,6kZ`JQ@<@e-g$&m)sOJN=@?%"(8)^QSK5/:2.7p:*8Q2M6,:V\H:"N^?Ah@$g,$H?CA+9R&1S6;;Nl+-A=CuGS6RE,i/?AXYDZJ%-7*`cE^>+.+4+UKtsoT%PX!O%A5je_)o9(,'uC9m4SI9(&[+Zsf@:k-T`NLq-s,7\:JJ0GPd'`rJ`Xm4f<>[FQca0fW[0og<&fcM#Y;MfcJ+SG,7CRg_6>8J]a^G=%!E`g/=QEC*<aV!8BE1\fkd1OSa'?8r+IG321]iSS[<PV`!-E%7<g)L"XteQ4^,(3MnP7b37cR[L&I#""d^W>JF#\[^XWV9J;d*!a%=*Ya0!,Y+j'PftVAk!Of8>+4:b."(HA^=8/$@HH;'t=8U>Ze`IADk^AnHh0C.M;qHWK%:Gkfa<E8\<bH!+oPkZ)"G15Y>41nfE13%3cd1IG9N$Z;m%dH1q4I-emrc>F"O:M"'CD41:X-i=Do]f/Epe"@%XQoV<pJ,.n!e#U,@4enI@UWBfN8?J]OIR;`(J`-dhSD+8n0r%fSf:6:iZ]8,4E`OI9r62kg0Z-g2K^XoSf&+!.s8Xf1YB!q3%ZH7ER<n?;OSI%:>?Efb/_9npK^UW"R<N&s&e\_d8'`M)*PC.Cogf%YM9cda1eeqH#hK9ZI"2+GS.s7rX)TG@m>L&.D@!m0IR4bHu!45:Ja09=0[fL9>gpdpfa6hW1-@0JR'gKB?7hUO=g[jOOM=r82rcM%J_BGT0]!=:g<%9`LB@Z`W6,-G%MkZqh_*8AD<qRc4RY&PB`]RjBJ0MIaclT+J`Z92EA,4jV23K8]u<%MCiL&=%,6t$/P[I:R69m]%7nU^aa,Q.`M`ChATu+S+$D=7HN*a/0(f)1i$"Z]-6s2Jt@fUOPILA4@&X3W20dcWjBB=XH.#i"sc#=NVmcA8/DXqbh<`VYO.H.=#%F&uC7!\1Fs"HUT/%^)HiI*5gKVLikuX/cT?#7+('kprG.=mG*jjZO_(L1cTOUqA1<5l\"80nWj[iJS"H[LgM\C?::J-B<@AeKm0T%;[hZMM7rW\'#5hGQo02iS.V[]ZR<p5!*tUDo?08fj/,;)C\[.65HYAPi*BlJO\r>K7In97]ii@"@ss)glZ.E2R#FQR3[t#R%8Y2E%LaB5u6kfVK'[DIa6d:L=8sLq\A!g@(<8asq@9Eb!C?$+B!o68Go'Tep-KerpZ@bc@/`W.KR`$3H0[Jk-g!&hEC-G0'5&ZF^.q,3#%L+.t)-5$dpF?$3XneRt;AC_u2llC1-BMlj_;A./YHFAoh!5W(DO"t1<FG1r-JEF(6"?M#p9<Y4_6(kV)EULFW%plq<MhZaBbg*2I%,eW*W(d(8mYFMeSdUHFTB/#\rRu/#ObsF&5g"RMr,S>T]&'PAWgnKd+W4l\`N%)jm\VSF7EZY-5ddt#Y$3_fCMia^5*hEHLJRpDu%RF#'-ZO\4s!';>0$D[HsVmsXK*g%l=fJaN`mAuKK13,;5"VJ1uO`ZHc-k.J?!)KRRquhO&`Nsm23UA'dWeCkS[?uZ<I*&.LG$YL[%FONjql+q^hZ*+rW`)(u4Q&(l<6-!&P]=t)L3&$h#;'Qi'>tBc.!`PMP<J&A-M$4_`mH$:O`#?>F`Z%lJpWb`VOr9Y[cPO_g?_ju3%*6kET#FTQT!?sOKImmC/#a!LO[(InbKo'g5M1Z\>&Din3_m7TZO]d-m_6HSmBK9q_JN5jD;3]SVN4m;iI*a56r\]_9QZmFgY%(/e%Qo5]q,.\MLajs/u;[dD1Z7F4t,_M!@,s3/ST+lk;_XGdhT]>C)IS/Jo.tROV,B*M&fhm9P(1,\9MfMPC)\dsE]9cZ=W$*7q;<5Ti%4!7D`#VM)t*2SNXSVS%1G6!3n[ZgeB!4H3D'Y\CJ2pjFr7j*+^A5ec&THRF&]SF-u-DAraOS@[gS\;==]qfJk3L/3p]MX4^V-p>>%Y16m</=2_af2iYp`TA6B`^T$LW$TfS_U9lb4-RY?acL.a]-O>47;[^O-_(:@P4JE*pS$LbAV@D4,oTe5'`^"]:,mSe#%1:^#QVaC%atO#X!?s4_0SY`#)+?VW?ldF9EO;)c@ob:ceB:Z@0L62bADVs2'@B.>=0=rF0W7Ech9ZC!!Otrm80n,bBX100&Qr%M)DN]"B)jM$%[F9^=R"fd29AII]!T,?.TJ/XqNMNQ]%VV,?E]N#QmEK+=1Pf0B#G;V`"LD;>qt`i8d9.&`G]QV"b7%;;d8e+OGd_lp,NcKgD[CVu%gWpuUqj![QBQ99@!!FbXBm&iMR6Xen/iJ*E1^G/q'F*BD5)[HO7UYJM3:hAcXO!-BK+C@,=V.@gPRMjZ%=8^aR^8?u(qQa_YmQ#a%^`!aAZ+uYhkmm[HjTV"0L'11JM*]@=Q+BY.+-Xnq#CPCL,nqpNHdZKA=aJcVGR;eYr)4*1_K9g:36Du"2j]foA!6Y.@ofH#7Z6XD%]36_Yg60&+3iDPW/=05Wn7?T:,LFNCS>AN+/H\s.U!T<2:X`d8%""iaQL5(ea8i3)FX_K2(mbCZ7P='5."$EC$R(i;,i=Gk9+*6q%qTK8i'Q/`'$Bda8WgP"TMKofFUkK!KaQ78P;5-ar=KjL<$k!SH\R->5gbu$-Me-id!F``SBrOU*,jpi'Q2A?X/>A4t^.caj(cDk5%[Zuu?JJR<f1t'#Vejm8C8?OD[X;6KB@U00gZ&LAf=U&7pmD?L2.Yc\+q%u*A<7'<0XN1BQKM3rhYRnR2Mtj1:_AQku.@cT&/-AGi%AM1t@S,ff9goVjlZSK[I/;j"Dc7$fVIDOQu3C>J%0j9Qem!2*/ad*=7SjY6T$FqC8P'f]2r=BC&NK$Ta-q@?2<dS!;o>YgCP(K$O%e"\BK^cX%8Jk9L,Ys-2ZVj%Lb.@a:L]NAR@Hs[r7g`+HXQWp4E^u'+),!'N^[>KBREJ$<CQ@VNnXc)7N,"8(\f2Iqj8.u;ppA>_L%?_7[eQ@q#Wgd*AVan.MdJto0s@46,YL(Kdj!^1]GZCV]5PaF47_73o?kqX?Q*ro5KO9@*<*qYF`>,5*)f7X8&'M)(c*Eu5`gQ@aX%!#hKUi1+l*JqJJB'/-kYn=N81&dO@'/XROD;O!(IV1Wb")#Lr]=1-*7g/\b>ofaeR1c*7M"n^uV"K/9BD3T#r`g/a.]-U`aEdr-P%\=&%0:V:JG0S\pHF!7nA&.cd+H#hiKm3QCE*-#Wr+`@fBN9)PiMStX@eE0If\QfaV.Zh,f\HM"61TLlj,=0eF'nX4E(hh?mi'>s_%1$Mj@1'nCURp^&2\`:4;$I_\l-2"5Fc87$6.$:q<N"aC4-um5/gn9dPq9UKGq6JNu025O%kFs+uB@DO2BF5e\gm7.=@)9aDQAIk'%pX7:,-@1`@U`!>CD>!<_:4C8U:+*M^/hn_+Lm+&)oT<a+N3Pbi?kHSe8akM""42uQ(Toa1`aDh8E>9I)M([aLeZoMJVStk?8r!#I%1\</0[#\,[_Z9pTXI&S+;]X=%Z'>/=*cR-F_DPlBL_7]g[T8o\ka+5_pT#S*/rUo]E*eWPMua/U-BOR&&4Jp+ZDArP)*i4X/9rl"%)!mR6lX__5!cu@"d0ahtc4eJ*Y7jB"YY`A@6NWSJ7Yt>3nVM"hFE++6'QAAiouJs*1G/k69-=>VaB?NBgcGXDBpkJeb^6qW-Xr(J%/!a$I-TbL=LW;j/QrjP(-_Y,aMUBV&#dIQpPZ<2>*6X?]<r'nbT@s9blEO"GS;T-8XEREi0r&J8Vs*-sBE7?3e#fPAg3CV8@Y]l"%bOZA.kkS2J[u'eKJPJ`=i]WO!>$$Q8?uh[C:D?C13$UjpZ,_u=,r)O,fS^>!,RPIOC;U/K3(@Q!0QOJc^e2c?#1dKd"EUJ,mk9=U%$dY=p'lZ-&;;B_00gQ<S!TR.+*"k<uaGjF7_sXZQQb^=gZdp"-Xd*,V1MD.]3[-LEi3=1*=#)1D'>s5ufs.W89k!dag_o;N,G<:l%$cFKQ5V%LKp&T+lDC1NFU,[Y?803tQTBCk5".*=2^5mk:%+Y,c-qEJ?+omSAIKG[QMLkIfGHf#i("VfZ<AZ!acusDb%;+1UZgtaY%;8KXnI(G7^,@a$D6F)^*".*sM)L5Y0iit$G0ieE(M6)6hgbK>]Z#rtTTZFS,(<.NoYtl%o&jldQc_/L#Fk)A.O>t?XMLE$d]M-t7%WE:;W;k*R`33FdR`P%,]?!^BiG]-UW67#S4aZZd6W_uoU$Yp/_Vh*me'XOt55Q_X%?Wd]3%rXUCCKe7h/eIt$jo#sHRne2ikL-'W%".7^`(CQGQ.2*')lj:I:!u+1[[BeG;(TRPF>abm,JEA:h'9ZB6]*'"^MQT,aeNi$q?gB583O"K+M+aY'K.YJ)op$D2/1^4QZQ%I$%C/ASq/,2pHC9^ChJ=PJ3bL?o$bJFUmBA]ee>,t!6aVJf#a^NF%n=ehI((&SbMLbl8ak$ntDLgLUe(DtHKHMchL_ci*J^^"4f(hN5%Ch#I1?`,+N&gR!B.-qOsloU<g6hIsCK%p?B7#\r#0)-k:U&J##,Nj[>oI<G>5VRQ(&lr!EBY7crMBN`\:\%BRhD/$G\j'XJYS+R!%'nS^GAg3LZKqM%@,tB38!*GQ9bKd2_2cLjp6!'3Tm4U@O*l(850\D43Gu/"kR<p@NeeQ(G/o9R`r*G-#+P8)>o/R^2?^?V+-9$6q%##m/\(!kD)f]\"&l9aFQkDXA=]!MD4n78+/!e#TDk+/S55T,G27VQeSeR^-F!f_jHAj/W#pmcKi3]/ZX>$-V#0>squ>Ce=W#t!6"%e;ADPCrI:P-_Ys9"FIZbaArRZ/f.,@4RO-&;#.4iA=;4]E0<a_7?WLg,U)UCi`Z]ZOeb#m!mF8,(X$qRfHllu'#Uo#UtbAAqL3%X%PY#,;bcFK6Y^R4i&*V8T/p;c^L[15YGiY/'-\Jo_Q.1)!Td&J[WkG#Pk3Bl$Z8Ogr*<@Z:d9<dX.G.VqW":IENaj>aW@7,m`scE4%E_?$Jh^hufLL2_+.`57#:C.Is<a<GFfCrQZBQh'+#sTlPEhrni[K.JM'!j1Cp%>!]U@=LprYQ^<Sc7T<)!.8>;1'@D^?r/O)uIEX%kMh[N_:XP73pXRbo,p0,1/ca4It7`;LV]f[=L'ok%Y9[*.n_4na\mnNYW/_Hk;*l$<LC'ANkF<WnG0"bZKdqhh_O%:c7p\#=26)#%0'+V=hq"5$=`["3Dm8/l^4Clc@Ug3hA[8PO%253BXDL_K6u1li9sEPqqQAK2XZg:kqFJGeFlsXN38o&t@5+PB#4>I,$)a#(ZTcQ8%cqYe38KFnBd.VX)!T(,(S]_OQ:6,3>AbkFIlU&MLc8FBB[WZ[LG`5)F'B*+@fLi\0j:>Mk9#WtA#CUre'5[l^_00nFh[0/5\2kc2%S):gi0glh')9*f:JE#l>oDC+%E$G^f=6V4CWJimFk`+eh4%n?j=/3Z]_@QAnVU(];K8k;6H'Y0AkZEt[ZGYg@hM0[J8+\DtcI#!-%\tM6RZ?Yl.4#3der[k[2o'^U?8r,HujPP7U#p4g@bY#L7f/6\4AbKNRYXH86mE89$`]?3Z"h>0a/(1]RReHidquigjk;$Zhd&rU;%SC[BE_.C8,H5Ob\(/luALZU3,,*&KDU>&X>\;HPIc5f*!qS%W\eZbjs)rSOnB-6\JoD3--'($ZgKN-)TUZ]&Ie#4KjG]_mVHX*;T%@_>fspifV6qSJ/Z2.'<Z43=Q=p.["/dK(YF&VD#NKbNcdV;eU*[g+E;+Hm_!9hi.\d"\JE`ZaoN2)29;BVD(nb,I"<\U?&-P(P?M%!i^$k9>^-,<XD(C9Je$DZI5)Ag&SLu#+JGo57VTNY[B<5"Q5ZI\udinH*'tJQUlP*.^SNQ'Q^53.?R^TFgX@,S?k^6Qg19&1>:(W%X#-m\@rWsKAqFc'N'`MK[D<&$%\jI/-<p\X127,sbeSkKg%nR`FUdfU7arsAK]*HJG$IA"O>p\_-=\8VIU/AiSX^6h^l]tKj&)8h%ae8$q.hi^7N2d*(QE(3:=>2raTQ>%7N<Unm=Zuh(ccN,KQNKi;OdNllkC=G36eQsHPt*6N)T.DMUi%E=*H3K:K0)VLBGR>_<Q[`:%&6_n4KuteR!+>/k39P*_'J50W*(r]Jo/RV15d2[%.d,l5gac`!NpA/UTJQRaYjF&a##k^EX36)^mLnYr=ZZh1:;al_#b=g%G6$g?%n<OoJiE0!M/ED@QJR&]47T9Cu<BmHhP=`_n/<QNe6ORKK_'1@"UiR9?aI/cM=<Iru"ki.)YB]%#!.cc":H$UsY;rg8:q3i2,Rj(8%79i!01uZ*=N@6nD"B0aHi+Q%j.Z5mOJcuF%DZ#JB6l913"BB`s6D.m9fOH'+S_].L:bW[$6?YM0,;;lVau)_0/V^%=at&*P5/m)5%8JlGm$f)+[C7,)'P3mp)L5hL6Cb/=#XSbR36cS7D!#Fq.m(YAZ1-85e,4?LNB[D3l'4FJ.*'s`JkhiE2kh-D[95`2uPtJ1)SO(n3%"buckLL.<U1^oNpb>0ceAj4h8-KAid'p:87H1dZ;Ll8p-D!OEh5%rmk%5._%3[jhAJD"lU:;6id*#)Bl!Rld$(]&Y(28Ip%dTaR+%K#q$%"[sJr\F;#-)JAKSZAtEBdogp&GH0#AK9b%<i"X?FU-kj`%emhJ:`?s`S&+&+-+NNg!$%U-d&^rHm>g"Q9#_HVZBqAoUD^pZ%[@Ig>1d%[D)5G"++=$R]5ML&8)K$Gjg_pu")nlpc%$QV`M+[>7&$Ja0:0$B3)26(kqJ4$jJm&9i.4=6Y!QC,G]8a0u'$95!Sa--R%M_2bMgO&!r7r6fHqflhmb8>Yu4Y3*l#d2rq//_"X^ZK;Q:1QCXRj%:\UO0W9pU>;V[s"sF4%E[KJAY_^O']laW0i$Vi<LH0h:dTl%U=]7VG4(DtqrAu;O7$ipn?:#>)i%XE]Bf@?Nr-ctSU98"Zb6a]3X=-fhn!oO3&nFOo=`OeQhL1*CHXSYDJa=[%sIL;8a!Jlm2hS.%_`nX']fs6hh5fQ1T)1RPIDbL(#(SAB\@YhB?(YH\5,,bm#?t94*ff]KX9Ui)>bq8kcLREqg"JR$g3Q?GqnuRcIQ_U`]p?.OoK&R\%]oH`$@3']]IUo[&f\8LAh1Vd#p*T-P\ZF!Br^5;TK@UF34EKLT?$b_ode<@7lPERU2/[7tcO"C(52Y+(`j7uY&!-E;*Gl=12[4,C%JKAZR`:BK5?IeK#Ku:%1N=#6\>gn8irP[:\TKW!LSiQ<U->f*XHaNCs`o6dC;lhNtjQ%b(2pU-[mF(jI@!-tgjs.\!p2m_9e;:@?%Y?]fsmLKef[bFG%d_-(n)DQ@lB'RXj044j6-UMi/I^3JWrIb\lCU`\Nls1_"Y933"[m#oEJJ1P[$[YD@)hSCif<8Q;g1\aj->Z,l%l#p_;mVM8c+Hi#/,c>m&qKk<UpC=VAgK^1O0``YW9ml\NQNrj=%kP*$=^9EBgRHH1/@<)ne+V5E=kgR$^CGkop7lt=#7GruY4TEY%BKL_??>KG]6J\[oD5$ALe@gRI[nug:5BSVBKBh;-CRPcVmp'm6'Y\9^1>=9#kWunudt@#q=4]D*T"2O_?`do)K>Ysq_:)WS32%en%L%(cL5Nkbp7hasLRilmGMN$Tfpff*(S<?S8i;1j;_:JI#O,e'`AEhZHBX9j)gcQ%WfR>"23S!8+Yc>C[QOa:U]eap1VkIeqEpXri%V_ps\^9qnYi+W/]qSqI1`qjk*o3q<c;t.<(?JY:j`mOMVrlSHJn*LU.gY\U]#>]f6dk7r@[sN)(IZ-^]&"`P?E=.aI9pkMLdD0Tu%:,,:`@rH^4s8HZ6Oqj[e'`75R=-7gdDH)'ckj5i2Na#GW)-<D04N1K9>CA]%9XC%o[U.-]:Jh<V^ULUt\Ah"De$)=P/hk%BA*PsB%o$H'3-Cds$3T[PYh)fX.F3%L+P0=7f=Pr!s]XfmYD!unD-_eskDn+@>a0$_dY`RH6qq;1R:q2U/VGBUh?\k<<':H)cE$=LGoWuI,%lW]QPjn[r,B/7&+C2r1?igo\9.o1*SSeq"f,D5qF"5M!Y&qZu,JS4L(DVYF2+[a;8Q-Nj[O?.G+6Wr^Yc+)/B$?VbSPNV=u,gtT)%g[=G>#&eAG<]Q)#;4CeElg5]cF(N;R[a(E#?f0X"C6,sSrPY&PgA!T[b%?!9k%8tfEV%\ejtdmYp;l+iorEGoHWQf0,Lp<jf&hdi%h>3qH=^BCUPI1QKRg!8Em``W+?>AlJR%(-??!bJYht8GHn)iZ5cX"KV,%mO]205+jh`=earc7^:9:PO@Z[\sf1d*K3WV)-\Sg1Z+%X`M@Bk-Bl]KSYeADGQT"E_<;QQWgS*DJjjf(#?kgIWh^[oYDk%m4;u=hWeHRhq];h?PmSi2Q!aW%6o*sMgW1F2tFJ:*.ID,psAT_%_=d3gNPWnJp[F=<lZ:"'G1L*#erIjtd#R+G[*I$*<TUE$=7-"<?GV`k-VkskgU60u'2M\NE0`M(H^S><AFD_E;*H2b@p\A)q\7n4%XBa3-DDF-RT_41SScH,FAS3q\p[V;R6'o'h\#5(4g-,s[@tIqsf^nU]:[ROoeGJ;iPhXNc5MLKY5Sjp^pSX`1e:2Wnb(k?2"l-f?%=@hbqfpic,+*oT$Ai_U5o)@K@HV33WT6sC-COr0aQ[et/DYbq$=F9<I;RLZQl`Ds42V,>r*nf:a^V',g;t-mU[cU?N)]M:/8!Cib%_Li4;3UsNE&"JKNp$t""[gom=Sml^=JQ#H<ep"THek`D)m(CoC4-uS)@$lp0(C\cA75M.GS2KWQ+rFo]be7XR(oD^u^%mS@3U:$'%gc0B60^VpulTAkgmQ)^hBeI;3>0EQ0&Iu-ek/(Q\YNRmYnZtlB(Z@'+E0q=$6]5oNL@^guE#<`0KYqVr\T!r0/"1`Y]Ej:\$$pfm%_dPIK>W>FS(!SiA36cE0RJ-[):GgB3fJk6k30.&AV[/DhSAHj>KsOk6@8XCOSr5KZ4`k\sea0h+Sb9.NX=ujilKm(RC2[^UPH%&!%;^hOMW9H-]EY]@+4@M%6MKTaa>3f[(:p^Bp4!PGVAKLo][tlrX/NA[\Ca#K(kh5>pcYdM!mEF"bKm^>%B=AgC$_9<pVt7Wp0s]AV%nMeEc4<Hc"`O0E$D=$Y;D-ATAEG]UbCNFiN/a3,`>6`jF\(@7c3*hR)/B4u+E@5NB4\7a8p_3an_%ZE.q=Y%TH]umu(U[Rg,)]VX%2g8Q-rB\[oNKfHL+Gi00K0SB+r:^3h*WH'=r1\8`6FO@H2[>\YG.60e\Fp0Z#O@/g;]K<:`/1\$-1RW%!\jr3Ys_:?2(f6S/.0>>%=FliBOeGNNHT^Q.eL<[D4tcs5e#[976hJ^o2]1_b<n!l3SPR#K`no#6]`XAl*]og0_p:;*R.6^<A%Kj\:-UrhRa;j-S0NWi^;"f8%F_>[Gr]K>"0XS7s?>GU3f1r*X6#5N=[0^0JE$=I>T?)]DVf3f*VGCa>P/E!P;eDV6YQ!K8,_PpNU/O\7[hTFE*uDu&0&O>*8;dVd%KfaPih9"-2-_*W;bJKh*ZmuN.o"ps1E$sN_idq[%,^s,N6F1VS03lRG\BMoN7QLnno"p*nE$6l>a9rgT/=K)ke:l\h=P1I;rad56%(T&^o??tbQd;<sjo&ZY?T/W/SMD4.tAt:??-(fEtX"U)RIr?.Qf\Q6l2tYm^0Cd`3p@d?!D:c>3Flhm3r;PIUf#)@<bkbhUH]UW!%VB_"aB,3tGL!aaGFIRLscdI#TM1e'3AUcDdI/qpWi.8#dc)iLC%m7P5[ll]u@"5EV^u#(emZl@)D./En%;X`Ulu$6p>F=JHIVfIV%gs#$@.W=]s=b#bgcI(U(O'@@:+oP1VcV3X^%CY4;;csuj-VhqCZb5B6YVd^$V\KfM9Zl931S&eXq(ll3RUUEk#91Gbp/g*k*I,jD%G(ANV:VdQ*m4,$BFppT[$G!2oKgdc>9H2hRANFgpeA?+0YhL_q2Reh)L93:C[p^MA1Z'bM2@I.A_JZ]agFV\L$bOZRgMOCPTQ);F%$Pl41>Ao2+^^BWP>+s5RrJWOKYrKbOB&.F2aT%ecU2[PVBXBF7Yc+6MCC?R#)B/"$J]r?JNU<jcoBTVEg_BA#4\t5;-8Q\O^#5Fh%hKd9Ngk'aqg54$5mlWE!VhB8c\_:!2$3dc]2ije-hc@C2Ibag!?b1MSWa+&DReZ;>bpgZY;m/3(iTg:%hD;Y#qaL*DM-=!8>#Z<*%%C'N-O[!VBFR'HQDEcf=>jC!@5cs_fRD9WUKtQL](:&/[o"j5qd:e$63Rq,t(FjAs,CrYTqEO+;mIj?VNfTn*EgkHj!jcnsBD[&8%$e9'b<AUK3HeP4Te\U=6YQ-8OqoN&pe+RR'AnuIFE'3Q:i[['fZIUO@01;@c$oQ:%g<6n%+kGM97ZCVK7=0KZ/$gpEba1As0P\h#%.%HnEUIP-7/;tJTUW10LYqToDN#H@#5SchKR58U5AuaPCq@nLHB2LCq]YD1#\A%q*hH'LR@!]?E)9\LE4HK<TiRZu-"T)/sG@L"g%[^N(^,uAmLj@sd!"!2ZIFrl9'IX6mJKo_aO,\OT/nY]%G#D:S*_4-Ji],U.fT%[*j^;,`Z[\.nC'\]a(f(5Fk:,;rj<k-$".s?#8%MZ^rSemG14ghY6CpJ,-GB;s,&'J/VArn^EIgZ(>epi=Z+m@l&JLdgR&Z--@90"OI[Gu;0:(><U0:E8b/3nf>C5>QI@ZWVWd$<:QT%o>;>d8T*LPSUXS=MU,].fG&+iO8-!Rl^@/(Z1dKc`/`*&K;+T'/l"sP5ML(5_b`O$3%="08^TTMBE!8mnJQOKi0Cq9DMh@*?5Mn`%hQ3Z&e"GA\iEI^X$\bbj2&6PV6K),sHqb;bIMKTJo&X"Rp_Ij`o;_AhY$!K/.UVM</Mt2qdM<bY6K;9`HjbpPWX50rNA!AG)W)6E%RLbDHS2r/]h_ZidBRR4^ot>?`DtD-NH@(*j(0/*"de0>(`,$]I9U-V^j(TTJ3[],H.padLG`H"LU>j.o>N&_YC5_p/1I/sWqB#@C%gln]Q2=&lTni"SHo\K*805[n2>^N,2TY9[W)dA*DhEQ_YpYbPomIjilmX8i:Bbcsp7sF36>"$\#><Qp_&Gp*sBM:nsBAAMq,DDl;%U,dR$k[!KkJ:jWqbNg+"$QJE\E1b9?-]W:IIWog=B\g%fe!tD=G>!(7PP/:h<lF52qg5p[L[1/<=;P`6p#f(tM9fFt,"mD)I7Wl)%F"Nb^YfcfPZ[7^#"K%rOQ"T7$J?F!0G-V%tXdu49>][XZM''.C[51`eaL!SR2;!Y59]b4=SiASFCO++N]estET17<1be_]b2'u3/%Bl>o*^%V-ajL_EBDn3Tk4.(Ws%R2qbS4Vj([>6R8i5od+dsq.9?A/'Z,jh1`.(GA*:1%=2LeA+qWU1ZX0JT1eH0K-k"3rTE4iYo^%S]NK.^h8TSXRC'J?JQJm;:g5fLdPs4Gca,h>t\dU+VS,LiBkt\?H@d,52ej#/?>r*-M.]_U/",[5!6To2+aX95ONeP0rd%t/R._i%"n0+c"E)%;BC/*!S9MD+OTk29(#Ct<\n7LM*_V^2X]XcafV'*gBq.Upka#/+3B2q$2h<tUKLI=6AiXp6MWjDU,4E`WT7(26K$X$4%M&siK0H[B-/rM:JXM[l:b=g%]@99"e>LVIlV!X?$hqHOJl$hX8ILmP`QlH\sIhZC==u\/<_^0t!+r>3).)qZ-<-";2&C3&rS^S2n%k?<eKZX2\PgmKV^n^s8U7R#"m[^doLEAiIEd"IBlp;BPPe=C_JHe+`:a/=0kR8;q?("r:fd@Nj*4/<Ij1E>S380!Bbc3o](;dgW+%jN5StrRJ%K1M7rCofQr;r5j`[QeLoG4;]o=:2<@[>Peq+B<eO#F*a[mNcm?&T-J)kk-1q&4)sHW^p=7^G]nshVJ[2jeiTuF';t2)%"b7uof67`X\+kj!m,7co[>0k>r@CR5a-!H9h'd<fCm0Q9jOP?.Mk"#*hS/+'B7=rnj3a-;0f7*KXQHX0q,Eu9\nC7N'jk5!h=R=j%6;WDuMi[;nSqeIoR?DUomL?=8m=rB3*kfj/\6iNdG3@<1G'%Y@IK.#0mOZ2(:HfF4_>bR7b$^YcT7qbW%"J'b!'Se&4-+L?oMjW!%`86PFkA21eh)s(V-Vmai<EeLTSJp.(ND59?!d1u.NCKT*VF@"7@+J%MPm"ld$rCWl[99(+i&(`l\oEkdaq-u[GEk%2j^fTs-g&E#%_5Zkb-Kf@NE7WQr<Lq:U;U`nM,4AJX-GY'ub:qY)IFfGumHRg8Pp(b(8^hRN@p9'#DJGHuEJO73/a?UC[(H&A]8.Z#SLaU'Rp.!@%G&hY2k?Qf%<GIEpNpL!OkLbcX6l16BoOmVbK\c,&QDroI.H#(+<3!MjdohHUBABRt5:b27Z;bt<go3CFF#DZFI+lGOAT5f*NUZ0X%m@"H,IH%l&DNX+ndlZ-m<Sl80.=Cl$^tW1V%jk%[A+DI5]/o\2lbTg]YuR5i<5g2\U#J&06\H2R4:?[m[rBQ:)M6QXSTFR3AV`\9%Yba7Y]IX'*`+WBdL<VEpaF,JQE4M.eFt,.4r$i>'8]lkrORUFH6bmJ7A]a$F_<-t8$\:FFIe3Q!`7m+iGcT<3C?=tdkClW#i@R_.%(7>pA>]kaITO><qdnf&t=UOd)*XM6NT.[^**6H-s$Wp=/DZSXEM<V/uZ'tSiVRsEi;ZV9bj`KMk(,Pcc)!5?d5G_aX&j>b.5^d5&%,cXp5.6),h@M>>fbF`F89Jl!G8KL[a;S^l%j<f9;'O(otgZ!dKf+FA[J.`$p,)2!sVl"FZg)R6ur^?qDkZgK&:Oi]d(0Lpurj^m%%>A,,jYj2=7XTg[h]Qs\j"rRI8K3WT7aLWg.!oe5$BWCm)AUa`A*2YL4#]MfFjkAp$2_4OI8d/I(l%lm/!rG897rO3@cFrspSpVd\%m@K4Yp)R20gNtQmS_*T/p9m'WJeXp)K9S@Jhd+o(>Kh^i>FQlihK)PIfs&q0Y4(a"5/C^U4VuXfQcDB=3B5f<NlnXP83IdfX@`ML%7$hLoVXqmcdD;K^]_BY<Y[#XO@J_W3$>jmJ/,Y<K)h<;l1J%da[ZGrM>5GdW'A7TWaM.<]loT,phg%$TcC<L2hO8lY&a[+h:%k^X%_oi/VM-2d!nC2'c\jjl589G>[G@hTS8EL,_:l2<rS3XdI3)^K_[QnI+Xbh8BX^C48iKW0EV'+VA;liN]MA$]<-9VN61!9paT2I"/%mGt0QQf7.#H,A8\TDTCZ?FDJ$\(u'iQE2K.^tXFGQk[YKN-NDph>eEgE<q33>B':?ce7KHT-#'pmT')X&J1Y4lcdY<"S>3[1s!cV%dACC2)9V[[dTY;d(fVsD,:,<hRYX=P"+LJW'^:%o[46?)h83[GeJYlJ"6B6<,d$bl?i[\=ePSu4beOZaJq5P,1@(<.3GPFA9-WI'%B-9Gu5WRSlDn3#YeDWQ`gIpq&gCN,bd]=;>-4bh7j[G=&2WZE3Cf,gaT_!2eGlX(G8n+p&I1$V8N0>uJ;+k;>RlhN'PSC,r)&+p-%/2O.a!<L=qnRR9djg*#pLN`_W8VNP?fV]>Y"G286;t"Ir%&$XDT24LJaUKA4V+.:%@`nTZR42!CIM;4P5bj9<OeFo=*f*D)(R[K1%&W.+E^]KJI\]TPGi7*k0PZd&--tD0@;GG<C8@;KL/5(^7\8EF>dCraVecu8O"Um=riLEde<RGD>TLshSd)k<XKc;rUl!=tLZ(a*d%:30111I.V26uKH$-*YK+OYXCNbG2'gkqqfo+83%'F1h4/on.&JDbkgHr,Leb#uG42?Z77X\`c`7X'=>2qrJo[^-B>\i9]&3JJ5g2%4GZ@6S>u2#4kk8Q;#n8N*t`CC,C6rm<!UL:6\ZtlNp_NBl:6?d!D]I3LIsOsHe_klf+6L%mq>up:HnF1D`ZIq5L"PYHi;[PlX/8e%s(Mf,I,>J'^[3E+q6"r?bWC:?i(Xa[(C^9r?bcR5?i'Hqo7J.]d(fVJ?iQsp\Frb>Ja_rDrT+"TgOJ^T:O`/hTDZbPr:^0]p;,1J%#_2MsrQP<:J,K;<IHF10qq@B#o4K0ENLr9pIh0E2qu"o-ru;"48,i'P?iB8Vrp!9DoY,Mi4Smk>IoYt&:]0durU:nYi_uKG`#jL(%hu)Jp?i$toV"[&4psF<cn,N(`s5?1ii&C\FT7-F]Z:sJodK^$WmG%YrTDdH8qX:'UDcZOT"Uhs:J^oP-efJ#??[]SHq'Om.i:+7s%Lb,_C/-)'XJOc2L9U4$td9/VYlW^"K+P$^J`'"o6Yjp_k`@(['quQcj&%u(3,HPbL?5m\ncjMuIm63\c59'b!\$rMIhngSb(%CeF%!=D<OqZ/XVMm`AB9[]O#N"JchO3PajK+.$F\I$6D3:(VF/0*$5*'Lr\ont3LN\=]<OWSm4?Fn:%.Zj".#-Lm.FL%::gk[!WU0dJ)%hEfVmb,[HR]Pg4[lf2?^k+CQ,[9rlCS,[Bg4)`,7gNh-)RVp.#:MVPk@dYVOQBR^5X^'%`bl;:Xj##qK1Y-R"F2-+FSG&IkF<.8B%f,J#9C!Z<=f5]Mc],Boom<ROO)GYWS2e*l+4eE[!_eIHYAut%"kHS.,I*_hoXC:YVikNH^MuORm/cJuP\+oDms#9C%dohgH(Mc#/%s5mUb5&5>$H!Ekgr6NM(k%,Rnk!'CBBJ]Zk?H4noT>bpmBE#6ENZ4Dd/?IlDbl9NOEAQd-dVHBnF$GMhSCH>4`EH#Pm\>5CABoDo%T6@o?oA&Lmci$!#\^-]=&G1GN2o"k$06o#E]]@$bHGT3FpRH5a@.tJOoNT*/cL8F3m^qrac9&f$'eaq($_@mt);Y6[072edpRFnJ%q]C(@r]KS^VK:oNU)/i7jGrCcs+Sk0J(OGIe]317dbr95bEnfHio(tM??>ikiK8jBmWe.Y^Z=/;rgr-B:[S+=T7#h6J*uLVrA3p;%Z)=e<nTF[%h#2(Cq<$kkT=Epl06l0N?>UduGk`rlk?n24pOD+FJ+j'6s/l%ob.E-#btgK=?i@!k]qG);*RB/mbO7LDqrdkVns=gc%KE(J&5PjobpkqB:kb%e#LYr-G?[Va?J#ISZY*Zo-nc\[$><OffgFrKjJ,fOtr)96dRkK0ZMdQ7Kci;NCs6L7\pof2+D1dVnh3B?q%4tjZ4=hFBfp\\BJq!l,sS%np6YC.F?^@p*\I-L6prn&=lc?nDfD(W<qjlNT3Gg87_ln5]So@*1,d%>dPYJ:"c^]2;<\=[^;rR\g\%jhLfET76";5J=D#mX!PFb?d?pq(I$D\VI?doWS;oa$0)@m/E(DK?nr<9:u%4n,N5[?[M"lX'YA04(JBLp?LMm*Uit*O+6T@?SB%?%1Z/!(QTt67hgb)V#/+)f)_^53c]@M&s86a&q9[/GpQ^&SpV^,spTY7BkJ)@!]Bc<>^Ook^b3sWNc+ia0J,5QdJ%a^p4nA8!J*'P`%s$,nR^?-.`^fB1[r0Q8OTDFCOs*t%>QbNHYLAq5JO5Ka/Qi?Rur7[4F0tHnp\;KI^i*5YQh>;o`rRbJ,F_EroX2"Q07t1>@=+6h6%17/a!khFEHr\&`n5CVm9)^e%;qU-`Ur$tQ-HnW\M*dI4Gkn!gT^\Rmnqfg9u_?^)>.t@@bn,'@K]_4Eno\;OrGhu*-1Z*H?Dh%Ct%^,G6[Y_oW5r_J"/*D`MU^).r:l!=$jIeO(2re6IjJld?eDa+$sT@q<#'@%(/\GQ0+r7pc?`>?QXnF\I4q$5c)q16.aaq%bUq%$5F%i/<*T]0CN$qsL'<JIhbXeJia@neruV]'BCLV*?'699hs+3W.+ua.>Y0>OeM]HH0t&algB!ntb7&5$&f\F'nP[h'_(QhEUk[0E:uA%>l+=Ns5b?9pME]J&N'Pm?h'S?O+-p!54QUSF8CZqIIRucpWH&;j+Y;Gn?RQ7rI]=n]0H;]=%9h(E::,_r9rK&q#5bpk`+g&WqaGl%^?<D+pqkW$0>p)&j(i#s`/!7AUDMok]biEq*H6YFHg/[7J+GmQqJR=Vgc)tH\"EXq^\Q/*9Af]MmYZH,D![__q.G0@"!@?_&CDW+%nX5Gci0U#q+5b1^#3a^_481u4j8\E=55*Z!1@s1[rSG<cnYbgD]Ncl<*RB)[/+6cXr/UN#pnL6uj;B:T+8t\Uhf3r;hH.FI#oU%3%QepDDptAOB)Ni1G1Tg;Fo%/?Ug;D`.?Ws`M7pKOL`kV,#+8b]n^\!epI]ZA(j++KLq>Q\l@n5rOpkO@mahR[7d/+0\O73(6(Xs>@%[fAekTf9ab(Z4ud&-(%LI.Ybb]ZO'bjb6&QLfi5,DuT9NrQ>"d$[C6IQK=NDrjk$pH2>S<nMBX*`"\X,^@L^D,X:ef'2MmP>TQRH%].=1TYILq1RP&XSM2[uIH,5DGp58;=g#9*UU4[gRNorOnq(HuTP>59e-hN4]J(f]Crh7^@<gi`6Bckm$O%4gJc:&)r9hM*P\bm*f%S&Sa)@=g`%=-:FgCMerF.'p'liln6PkM6u=b_!UNYM=0H\G6*WHda+hY4F?/M^2156&L&a85TcB$QA44^g2Hugto=0L>L>TM?_G`%kf21U\CcYt9I?1(/<sm]<3^"m;TbDj/]Y.iNi+'Kj0GeDPB"^L'[&ikj/Mi/ASXunZ/d?2APq$+kFB0EDHIt;,PdehA&!B:rQ]W$%oBk^gkCeN++]pq0W3\9./2f*klW$(bO3&>a*]\kS1T4Xk-FZ:%83?C?NI!9*bQW?!TCO?->^ktE07O"O?N0:=YAA[X;nqt,f=q!g%5Bu4J+8kO#?MgL)rq(p+-W`P,T3ck3Bmni_op&n`C"*&655Rk-Bf1cdr7*`TcFCL?n,8NcEW=EnrGL*BS,1b:f&3#>rTFK9W;flr%%uhSE0\jGCK&/G9@.k%3fPe.jA_ms^lhNI9_-d.L>tqg.B`/B:j52:7J+;uV@,m^urTLZ8.R*^!dJR[-rjX/#F8697hu)^<qg%G$%TDD3m+8tCBH1@X_]j]`#q"]hDM:d7"p,>3^rEfmRIHi]e+8tF'&?,T]n$V]5X.LXZIGU@%>CXB]ZfIl7fUH%7o=$B:O8c\<iW1QX%TnAE_kiedkrhb,9Kat%/'&r"rk"-hD>9"e]mO-cJ^"3BF^\X]`55M.T-GF#_'&W^X;$]Db(UcR)p.OC83W&UMa+C*4?N.+PDdN;Y%=bW.-$N/LK$H;`qYM/j8gIc%&?gch+;9Rksh1G3mqjo`$B]@>Ws1?tb+B)eCbn%SggjRnK(]V:`Y9/4!c[[oI2>RiuXu0o[?bcWP%iAX!rI3\?4o6Yt(nBG>>D[h>;m^qraZetP9f%sa5J,eHi9mrT1Vgmfn^Ja?U+8j)"ro-QSZVU'diLbS`5CNF@hu!EI^]2"9I/=ji%qNO]Em(WBnrp8f3s7sujmUq$t\rXJmk8dUkO5^Da7P-j$Y2s;eWq2'(L&<Nb0mt]1mP6OE8(=6JQi^*#d"tPcAHDmrK9>D[NsS,`%irA,Xd-sm_*6&e._k?$$jbW^"3%fnt`M662%/O$a4I4^Zdi0/"?Q7rY*TBD(>'Ok))=RS%V$/u>[CCFoq`PHSr:#'jqs_K6]a*Z=%N8$MnhY0)QII+5Z*e![CpV6H2K=:M=q!NpppW-j*5B6#2%mBaLXX?=%kTfPEkhS;q_?\rjT(bG>fFq%Ep#0PTq8c'tq=)j/4o+k_%O1b3Mms:Y'iC!'T4T=Ejc[>@pcT^Z:55Xl2IInCjlZh;SR\oho$`=3$q<5kir<%]A1XPUgpd[o9n6P;^l?f2_;]khFF'rt.m=?AR%csXW[A'[7@9i\aK#N#Dc#AVmM391qto6S)[@j@S=_7kt[j=-=kHpH*R_iHqZTk?RGmrFJLq><cEr4]EJ2`,sF6]XI+kl63X^[JET%5Q%cMQY4h2V\p8!(u"F!Kr,shn<8pH<s"7E54R,mSV-?-+2tHT(Bd%T.3CBhIe5&h.Um`(]ANM<PL0'NLmMQP>R3/]-km(DP]pZ:%s5P38or+,%Ic*BXIiO%3N;6=<ct,<]%WMO'56aA;nt?T,ml_0e,^S[:-_C;SJFq6*0Z9$IQ.L">'P%6CX7)fZ9AK]=O5Ba&`s:Cp%#UETISXc4;i55QE2i>4k4T$h2jce"Q45bk=&P-R@9`\pXnW16d&>E&q1a$AQl"Sp.a8hq:++Hc-dQU@?o,4$B3hH,NiRgBgoFo[*%JP*NG">i9/T'mJn'2A@Z!)\A/HLfJX^0@+%kl0/^l?No_oDZZQ%nk(Z%mKXb%q)7:?D8]Onr7s#R$SN"N0<eJaNpTX?BII'l!42&%b)ZWqM3X3B49kaKgHXmC_*%0,)tg]Gqk"%`#:pVLn\DaXIQoXmnJH5U4X9IVEOuE?31dkWf_\YmLDC+9q#E8MfX#u.K.cp:*9__b%":c>6X;5=$oW_UBqCo:!p;)g]foMgp5AmE*ep-r,msjtLUdEFK^dgW[bgTADH5oM'MeW<l%tV<;*44-m:I"g-;bo_A:eZ0r%'-u6%4n@fH+*d^?-Q`<'@ua%fPoX9%Y'3)Um<j0RTm+7E8(.c=msb<U^ZQc7B?dii\,kVUMe6F.]DFY#s*9A[[B&[9;Pj*&QnCNUlp[o"%]a=pZ\]aQ#nN==Rpi(/C$_u1bFUn<Wo&/ef)</O_S8%4BpjMr0@-!paI<5`:_$U[XqV]](iZU>O0C0(Qp`qmhgMjsKL:ElpWr,]3%J9^,FA(7X=\P#be0KEE8Kn9#\Ggd;6MRJE$b"u;VOM,uNr!VJiLqu/a+i^8K&,_XFTLYduq9t''bOtH(YpZ,cJM$B$S56N)qLI$V%]stVZ\$r]X3'Gje\FSIN:2Xr2=+0$@5OfDZGbLS\SdRaJO?X_CCgTC+O'h`rTDSQLJ,Z'gqS.IXEbfhtr;7.&CqoNO?i&P2rS%;B%eZ\tlYPmJ,^[r3$]pRspo(F<ggSOr4TDl^2rS+OSLTc4+5CDkUr9>s5oKOmEnK5S#h`!<WH/Xr?s6BX\n%\D5YIsG.5Q&3EqrO/o%nqG<C#c>QSFR%j!5Q*hHX5El.5Q3>9f:W&/DghS.If3XOoHu7h1`k<`<%@qBJ*LD=qX8h1>Q=Lps3L`C8&,)Y?hoDJqYPQsmJB#&%j6$C:F2.Y'YC6A=htkn_^](WjrM@j>&'a-fLJ[f7d+ZIrqpafCoGbR<[GUkpYPm%eqPBh]aWJ9"j.6iP1cW3un\TeUR4nKdYC>R`%^\UTqs.B;&kAk@u"-86?IQ"]\<;Q-7nu9t5bg1\!e,SLJl\##Ka(8`9p\5lG\<F$O?[/hYa_oF[#$$<\bkoDW(Y@+"[J>Za^=HGu%n%N#P%LrpWIf,MN9\]Mkk8=a+lF3=*%saEdi/JBtB[g--).Z>r0074??kD.*9/)1)ng,,><uD\'8_HANM`8>#RZ8pY,L&]s8XQpT%@u;eb6pA[lcLN?=)ck;Mq:]ocgrWIn`=pZj3'5p!m6UVn0-=_M-:h'Di<XFDSS=p$)M_[?Q'/JF=7@8D!4GTU1t<g14i2t_H38r!%p#2"CE_7E(Y+-.p@+%@eQ<=l:.,ke4RY]Th]X:S=2_sK2rWHr_PD(upSa(/Eq^#RiB:ESEl44U*M2(0S8f8Z?CNdHeB;a2t?T9:l%EC!&]9#Y@],!?[ZGG_Sq3o?Nm:8A[I1Q2k%@>!&0pr7];(N^6BS;WBpIL68n&&g(Q)e+Hb[QNrPBqA?mPokl#LaUUYO7=M3CriT-%$4)B<dTP3(#3&#0QqH!\g</GR5]*?KSNJPmOUY.N:iQ>^c5?n=G%As:'mti!>4t1cW"D'6)EOQ/l2P)["W9rm6u`?p!2mp1hOCQ`%jpK.]'SF%$$>iW"3-65CLFt,G-_"m`.Kn]@])@Boqj7p2P5anb?O.mMfDmXK!@Fm.&&-)>,@`J5;1b?+s6:Sa/@E:XF\_qfqJbM7%T_I.4];-jqo&m,U&G9'S7XHX$!koO3pDWcb'B`]\IOB+&(ABnIF/QP*Bm`"YrD)D+$1<!U^J8a_ds-"mqjka+'>3cj5+U\^VfCr(%mlQNL3sBO7pH+AP4hU7^GON:ns5!S@hLBbHIrA?cI1PdnGh^47XbQ^W4l1H7iVdqVkMHWV)r^]q`qsYmh$W>W&U1iHhbCViMt>bT%H`&j\8_gqsq9?pm=89Ltptm]oD\rCk#/7dfs#-Njs8<J$+'U$9%m9XVUUNG^_%5CKoO4e(PQr:Vo[_LZWMS.QeYO_he$jFZ$^9=/%I*4C4g*sf/`@l`:b?oXr]T\e)h9m?7-N$!qd&j!diMA2Vj`b&,ZWCL^p!6t?SZdG2V*]RnejJ.(5koWoOoAJA1V`b.T>1)jfAHA^%%tFAoled!TcX6LmcP0jeO$)(KfX(V+=9%?hf;1:[d$\aS^\0$^I;.T6D>rH<_oFE[o2Y0LG^oJ-l`Yd/jl9clF4BsmJ,ETC;tL"V%NUQl:(Y$]$j1d<.EUn%tbo_2KA)(1"mWh3nbl&(Fn%W\o(cQqi^],HDpBPWU?M`f.9b6pmmPeL1h86\Ws6rkDX07s6%J%N>?S/cA%n-<kX54^/*)kVe>IfAd.='h>E$lqG)OK7m$f;q^fH/mYo]_N87ErVn50>1fq)DM3Wh_)G]^AknPDCp;,cR]S`6)[I?$EZP&p>oAX%O.U[Wcb?o2l[epSr:&"8^LlN]TiZ_Tm=Pr)s00-545[;0)n#Z#C2IaJ@V^=CPZiQUoiM.0`Yf_d^hs\Op1T'Ar>")ZL7(ij6!TdM%H\dT-!f31lqld+uH/gbJ*$0KBo9]L4i`MS_Hi6`(PJEpd^gg<8r.^%:MkGhH`oghqe9CBiJ,4RLb[o-lSTr>mBe%+nL^@`?`ug80%WX+<1YZ*hX'?\Hf;Jg_P'**M(Bj"$4R4)SKpi$0(hm@'9=kP=Z,Ba%O2h.OVC)mFEJrPEPo>^*GrU!\#qU0rhK<:Gp(b%.$a@,!Z%5C;M$s5co+m-%P/I.f9MC0qa*^A(T?F5!I+d_ti3A6SL6ZEI%eAo(cWA,JXOLY-L^[^\J?#n6_5o4'4lNo(BYVJP('>Ik3Ng>;Ym%`n$W-KnCfl5)?4'U&0q4&("'N.2-6_?:&9!+3edfmgB=Z*e%[&c5-bl1d70,\tsYY+e,<U@4i+WJ!&U'kU=61j[f=X8(!jlTLubV%89aO;a34>C!$1-'77BO")TcT\V2\(lKA*=TStIn"Z;a`aUVedS(S.c=.0/XjBh0gT=)9,46?U+(GH).pl!LDH2Y,Nn/I,O<?<a\-%Ij:R7/nY1D$b4P9(0R"<Qog:b=NE"`dM*PQB&gj>r^?0]."c5ph;eX'OAPZ+`-^3>-.0>Bd8sQY`k_f"\ZOg%9@T6dBn2!IHH>tc%3e/<hlu5;]);7k^.j'oUB:.p;VemA@[1OmUdNd1#q,VkYK)UEIAf4k+(BCVfF=fU#RSlURDQ=V9%(0[5W3H)X*EF*\CkP\LkE-EX%2sAjLX4uUR\1RO*cD`pb78<AlTVL!8mQ817IfHUiC\Y*sGJRp<"8sjBZhZ(gNt6(*bC<7#rp"9Koi3fcq[TZPmI9a$qb26=$L@.%%B)GaR1,g9aILQ2#lrAQ5n(etfkkFVjJ+V/brSspboK.EtM,/Tk+.NP^n'B:NhV=XF36BbsPER6cR'Bk-<&'e47CA.1d6@$7S6umK%)\hjc(FFipTGsZs-FtlL59Sb)6Its).BfaW<E?="6=H<KSi[\L_oV!ET.#@beQ\ORMo&NO(Cl*b`!)sa"I4Z#8jM"dZFqqA"UmFj%lGqi,;_Uk]A!eL0VG/,,ZGLRJ4N<T1#XDLHA]WmcoH.UG"X`:bm:-6mVl]W[TmU)N7Z\8\+J*.(PK02S7e'2FE*]sbc'pgr!o[f7%qSW*5$Gfc[VSLpui`OSi7&U9:Tg0He//.RX(cG&7+;BP1,/>]MVppc1g;d#$YGK`6$m*SWcGc2[BhmD3(Ee4TF=KLU6'm->4B?W?%)="U[*=HH>itIba/L2RM6V`/r9Gj>;(k<Hi%e'L-Rc&1I($5T=UF'Y3Lq79j0MDea'21;'VF_qI0Ee%:mlAJI1F!I#"N-1^O>+m6%_F*i9$$]"9dT(N/!)O68AVJJ3Smo2q!fB*N!#U%'q7%QfC*&+W@7J+!ILLU"0gVKhI"Wi.N!@[@H,5(4"7kM]!0*)Y%kt9hN].%g%,\7*qcVV:D/AUkO"^m/WJ@LdLMe=gLHo)cJ'.q%?@F@%VAdqkl.5*i[n/4jfOC<bB$%Ve1/0E:P!<#0-(?ib8N:8M@,TIcoEGR$K%"[FV-$\Y2sdM<61cVk5q+jUCMqZYKF_od`;5R:ZV_.q\Y_;MT@cI<BP*!bTsWJ&<b&nsfpcP4A&>)SbU2BVub]Z'K"LZ0<#6'bN[%7?^8r"<1+`1jR/n:7rI[$TuT]cDM<!1J0Qee--+A9+rhk'.]`)(]pZL^R(Po20g?`&bJp_-g8>W:%JDf=QsT)!UP&u&qhSs#qQHP%i\=I^ZP40G!&Dc+oo)9n,`r)s,_OW'mgG!?"UlbD*mn4`o*cIg$-F=t:Or\BHa0PhILHH:,4Gcr$Sb&I$4eF0j9"&DP0s?/CbQ^U%49T6@K#\MQ="m(;X+:k8B^Y@=2LH(3Y,$=O3WeG=&2C9Ji#r.<U'6K1qoKAf+gXQR'Q&tg1I6a\"ft([LO]CMSkuM59_m=[0VkQ`%%GE'UUoI6L/>RYAdYnN@A#=&mNskRec%MUu1dJ$mOY(SROc;o7?0eeacd]7e)T*b1GC&M$J\1!]kJ'k6/NR7SQn16eN?X6`FA$Ql%+sE[X@2YLK9JB+t)-9!=(5)n(al7[Qd8<85(g(lRS%o/3J/+nHP-4j9a?kDi(rDpcBI9/]\0-IQ`hN>to,R'1NiSqo1[IMZ$T_Z4%<d;^T*-Q$5+,if'r#k4;+>9r=F?iSl!l5,`-d7F<#[MJiN)%BfKTg].bW<(q;ROq(kFD4g9Ju8i<H<A=pMT5`d.UnU`+i",?:168%rY0cFP4$lZ!:iIC!4nt@+_sc'Xa-%l?F8"<mQ@r'\H'7,7g.JU%&M-m/R0cXf"=OF03XcL7jqQ[-Y>b_"PJ<Xm*3*H*N'YUl*lp3%eg;f@_\scp:J`jY8LAj3K"osB?m@g7+pQ[?.hcos4'*d4"W`:@Stjkj8eK%?$`.="5\NNeB]n*UQ>'Tq(Ws:9c+2LY2"JQ$,k%o/%5je3d-j_:"dF(=`31Q_6EJJ5I8am%M_+B)HR)`VAEa=AtJ&2op5[sM=j)cqWQf9I1pLSm)da>'\%]=VT1]\m$#_Tl/$F>EQ6Js:"%:cXiG*'!d<R[(PS!)MTpE%R3a83A&CTIOsF_MmF"$%+9/5JRn*=:!cg"%Ql(pjaM/D?r763ePc<78/gr1ch!2$P#p]P_>h7YajWc%8oY.sJcSKZMe@]ACJg%C,:Ebm*eNqt&-7Y'";5r;/5V(1aZonkSg*,oQmNjo`Y`AA3`lquJuAr7LP1U,-`ol?4iIN2"<WfF,saF;%Kb\tP9-T7Pd,M1#-\AE2ST6P?3ggm)#Td1<bd56FP]Oa,h3T*@=9/$c]T[ChhdbIXeudh>?$"T!pQfs2*.k?DpCKiNRi%L*6sl;r%\/HYc.""Q,7,T4(SdDQ0.n^1,^LO,R4bf!M9$I6X+]W&d?-*h$kpT5#>n.V5e/aU-Ye/gkakc?S:W9`1/u4bobD>!CU`6BJM`*`X%<eZ%40]sIBd'?8%FOYe9=R'`J?=af'\4tA$*H0f_!RgT6<F1g9l_i9>J'Z_]2D6Rk%:,H!UO0aN!s6GNl%Hj5#r85BK,t[Y%=kYj%XG]%^/7_D![!(fTWHa<\`.u!mV$`n!GYn3<i-d<%,1L"&H5HpE(kfa=!5'#!6WKGH`3p@Q$'B*:+G^kf!^^.N\Q\V?Bfa$Z*fK'A%!an4-4*>7FG_:YS+3@/CoPI6BHZ>dP#uEs!*<M!a=um?>K2r\jj+?c^(NSW)HsW?C(R?qsLLU6I`8]OtP\n=29X/2+6BrW"(l80q%pm;)i6&BA`,#jtD$4N.%<a_tA/!!=([=ng@^s]N`Q#Mo#n=gWJRK4[uR#59+_EgAYGaoDU!jd.1%B\EZ"H0cBb>9$H!;VK8kpD59%,)F7(!0%MG9,4+G_p[7&c/M_@nM0l8pOtH3-lYR?nIZ)Gp&VQ",J9ZO+YeD)%b;*tbPlmV$/kN/fF"Zb4H7sh5ZqU?-8'R"1rH?u%^F?=fcs`V2cVboH80LW$Re@`,[Zn!kaIs3&Bm!HYY5i>NAclLhYWlA8+IE6PSP^qu)m:m9O&:8KjTjM!41A]S,+UaCBMM`VML!"7%D?Ok^9Jt[f6&3O]E(U"q7D!G^_Hi&>BV?!"$U"o[lZ;P:+;th$4_/q>J5\YM$O1;<K.O-LN4B_7;dl7uJI&S%=V4\XVKaL5L>g:9%`F5S78!cQSi-"L[jQU)H13DE9nR[n,"T]/:-f.;n)IIa*i\?4r^$V,MTCOm(A]&1q3p_f;@>\1J+bHSqf3,H`T*0_Z8:&KE6+:8X%+DpleZt)Z3Brb$_AT7PR".t5J<hH%m?r0;e$^atT"+IKL!oX3.&8dnSBK;PPrc9nH<t^nhR5<cMbmTs>2(q"Q!:51"aT-e;SJ2VH%3c\U^dM2CcjaCl0+e_A1Y<Wp@"FsFpZ/gcZBYf>t8!ei3;1s#X+S9<`6&pK7mn;rd!V@NW(;s(!bS%6K0V_`VfInX(o(*RL@)rQf%%uH\F@(M3J&K[hQl/t&VTE5.YJk9Br<G0I0!b);8oN3)&8q1qnYLG_;.;DRt>9(V;.<KE]QcE2-n,\se)lldgK,nmGX&Yh?9Shnb%.1\e!W7%AG:^.>\[sjcpMumW1qS6j1ZJ-,F<:.*e6KA[69t9#?BP>OmI>#$cnR;5<L<"Y,beF169sOt0)IF9sYl"dWBQ8u7n(OTq%%71r,Jf;m\:YE0+>Q##P4hc2uDu4,irq>73_jU>7Pe;pHB%Jet7_VnuPgNP.\Rm"O(Ud="Eb7aToKor`CSY==k,$?#g*Rcs1tN[(%*43itg\/&``Ot&m5q&`8AHPlt,^b@,])^+V;L!O$bo:5#(mHEWlT4,M[2_^353V#<Mj7Hf;kX1gfCEG02@,1bS]<9j7q+=%Xu;e*%cor5^8V>&--7O?G;gA6HGn(6OJm'6hiE]f$B+%*LJtZ`Yi<:;9j\e`gG%42NYh#KZNpB-d.K(l]&P'eq&<R@1$6-1R4%YX#&4E]-%E_643$/(uh2Q$i^TgN6WQRR>V#hCthJ>c,20[RlA]\DCKIhGJSX%O;gZ*6r(s"T.2^]8#k2s7JG+A<X_MZJO;)h>>HC-^QYWhm'D%2;2Y^?!_F5;Vlg4A-#T$S;\lAia."B6sJfoOAciY$m$oRl7bSU$`6[".ciP7l4$SV?E`A.,ioES8eo#GP;d9r-N(E#G*UB3*.jH3%esc8)kAmGi\]EBmX0l3H2JiB<8RBCl`F8k\_s1eV/$r!&CA0e-B=6]>Y!/2'hclQ[41tV\ffj*'?Ib:Z9ehH71"3@C:I+5&`?:,t%DkKM4-#<u6eG92>k@tmrpJn>*Q^M$c+qG9p_B<$NY3!j[6IG%?VCr<gF/[Ip##R"jo[$W5E@]$nm.:mU!$5#m7#r5/J8i:h15!AL%+Qu>qE"MV&kofh(0VN*'G18)o0a$j0Kn"@B8*lJONLaM_Oa<iQ$NI%!Vs"!_eUn;lK4;iY^YPGQ'8noJEJIlIHn:[gqDRsbdL\DA%s0PAY??3cO!!6JY"O^BRr(\u^->fEd1['%?s'X_>'F80C)FA5&:1Uk:[$p#&.MPO4pg<3jBoX`SLb,SrQ3gH:(gdZ3!`o`j=@+.[%Jss?c\;IlJ&6D?@'qsQ0@QpT9bjE8<V8>*'d:%H>m,?ANTCV'&Gj%TPiEn'9ShK-=J?sg%2@'jq!&o_#r"3m9T$*%1r@q_`4'<su%LkXObYmY+jBgA8Q>e49U18afnAg<MQDYG@p4[h1"6<;c6X`BskrIi#%(KYB=>6&,U%#LT5'BnD^^Q0/n7/ZTQ\T>XPE-`4+:fod;%`4\2Z*)?N;VUj*39=1'>kKHG7ME(TANAk@([u@Qh\H0DkW5gCL>dMd25[4%m0.%]6B,>YVT6EH3&eIG^.EA\ncR5=-QWJ7=\)3^j%\YHC#P.!j=n4O'>quVAKV\mNZadlLnDdts)(023OqUn'm\r,\hbY+Gkd5]<u[qcno]+FDp)H0qZh:"7UFNs4'2>1*kh\(h02@/[*%blkIuCUD254eLf$og`1CA9h2(QRPm"kE-l'SYINF5EBjP10nQ-/X;3HCd\+u=;@p<L/Q3e(EnsudsJT_*n!5%8<0!XHKs0W0u&."%b[_ZX)Lb6]<:AsFf(-4"L_Y37rD<=<fCGmLQ4i*)d$EGaaTfh$7RCAQ.\=DRjn"oqiK[i!KU(OGmNkj]$]TS)#cUdK%cQ!ScND$>%C:-lEWtYiBikG,,ZP9H>$[FTRkjs)io6YXb4TG#Eh7bE+p>'>4`S>P,;V)hV+2WD0%'l_`Nn5a\kN6>&=*_MKEMIa=Q(d>@I;Vi)%UGTZW?#l>O5!kAI+.O(82;nQR?o:kZ/'Z70mDk$?Q1Q^ja`1G?I#@`6:.hOA.!3lP"XFVRK<?VMhNb;I9)ZqNVK9pacP?i@^9EE)%V4,LUp$GneS5]DM>H_W,=?(LDijj4hCA=AiI>;K8o$<foZWcW[jVbBC22GTccHj=@1t70"I&:n?aCA-RU.leiW#Ca&fJN0'mKRbN%<-o2C#i2tVlc7m]<-O1n\gsOuM@,&O(?JZ8@1o^6>Sr1`pS.:tU3)W<2@@mCOE$4#TSu6[j9jbc&D^".Dc2C?2]*+OQL23:jh'.7%+AJ't/D@-4!?obnnX:#BL&q:uaj7\TPlbfc\"h1<Fs]h4^8"93GE>!rW4Tm67/;DjqigJ**@>=)n1bmGW"jD6A2o+"N'Y)D;6B#N%W64OcF;AAWcB>M8;F9[iS'JTXK^K_O4(<m2]FA=g7mc8(2F(Y!E8<,LFW<hNZGj6=]-^,SW-X=L;1:-)XAndd&1$F6VH,S87.ep9%!>1I57keBLYrri4P9;YgW>0m+i8&RRfZ^D7:O"Ko&lF%u;i+*`bAh.tSUE0C%*&bKC,,<(q<QdBK;2TS6R<daN-0BgB<(#ZbEm.I%(8h9'+>k4Mo4f8!&n14!VTF0,8d'p'(2q0?Z1RFkj_rb9\\"$4dJ_/MF:Xg>jE(+[TtA9*GtZjoMk,#WZXCn&Vk*P1[q33o8+tV5%55n<Z[mouIC-+@)kDag=Y'4j(eJ.8WMDFYB:AQ)mQYO;gT\2VdJYV82BHIlpL>L,WkF9+[`Eo.Mf,R&1\pAg3cSnZlpLVNMaZK.;%E2]e_D.eO+NkQu%Wl*!+U/W\.ci\"(\8knofUTF_PFVdY$Z?#d13:&imW[1[n7_F[%)KGdYjRmpHJ@*sMjQNGh\A3Ym`O)?G8`-]%ls7"5qpl0Smk*br1)#%r#Mr$7n4lol*;.n.=/1+7HLE?@h)sV*)2cC[ZroRXetIeep?n[:kIY.9PBBTk=(`<_obK""P9P?n*u"Uu%hT+]P=;.aURTVf@L[+6=p=$L_iHtH73Tb(E(S,e48u:;ClHBRs:m(M)/<m/'.IYZEm56oE`(:Fmd5SJ-W3:c#Bc,mE!C5OQeEJ$J%/h-F>aea@+V7URRs"8;$Jh::;]%"pWO^WVoVtFSbcV.R](-+"g4^f3ha<AkU/35ZH=-=eV6g+LsS:RAZFJB7*j;5MoN@PYL>59q\%[4h-3Z=!q,1t+!6N\'h:/5Gu'8$lV<cXI1;GR2''+eD@fO)?I)\dq2A9XKAra!^X/auT:q?HY]df>->GQOfk'G30p&$e%ksJb"DW%,;`3.Fbf[i@kEV/@@j2Ai?WRg)s6,"kuiqGUfUV1c<uHL`mEm%3&Jt&a7q>%P^Z)D?kqQ&FM8-=hlT>DObj0Rk?R$]N'TIbdb9Va%M)TEZ,iboYGL/)_\C41_AQE/!K>?8t&8j<Sj^IZqkAmD%#Fu0K3\4M;l%s"ejA4#nHtSFO^/@;t>::`*TA88&]R8>;REqOs^"ODO%8GC-A&1AR&A=Fkf%_DE??TKJ1h5PabdI)$iV39$f^79.g?76Q3nCe8T8Zcs_Ckt%Mp`hXQ-Z93F*l(jab$Gj@\QW=L/QZ18(>kiN%)Uam=StU3'jLIsd5,$V?X_dj(\:#=MU??ZOG0$p6blg`*WkZ59WDfsao/6kQXCSN^?!,[B&R1:Ofl<PtauM_O[P9[JNm2r]"V8Ir%I*1#'Rf4og6(:chf(]X:;D:1kD`Ok:,s`W&cF0[HVK\E&dI=HdHD=BLZ^U7Sn_n^UK=jH[o0C7\ZK#eg$c(jV6KRSWV=jHCmp^'[%LW,om/7dZ'\i@Kf4YT35Cc'YbI,X)5Nc7QAn#R"2.!/+RS<tuKfCO]$j3l5WKSF\q<(trbn8^gcTfCa=`B-7%QLP,TnVG.t?F2MW%([q!0Uh#n@0[;-Z^6V[mo>YOI!.go9;71jo(Kc0gp,4GG=uIHkRGBrBrkV.]BbX287OEnorp:1+^.UQmE^KW=%X0??@oFN+*R*O_%nf%<ZqL6,G.2EgT3`@HeUZ$?[0l`eK[eZ@J>:`aEfa;a/?Z=Te(Ee'Io.MT<7^5e846q+p6>0%q1iDA]&5YhF?1GX=A]n8ShT4<]%cfNOmWq.c?7!CGV@oBGjlhT7UH"Z6LI'&8]4Z_6B:6B)46G3HXk+--5f.'aM"*?Q0Nl\`#Y?s=L0J\>(_l5$H7NOb3Gumr6f4Bc`%@DL0H>,<\'4WS&79NX#@R9JXPP,[Pnj@'n4"!e]"H'V@%Z.a"n!L,Sg>VO5'NM4fT;N]3@75MTL?HiHTB3tdP$TVj*=DP>G'!53$%D%9>/hQj*^X<e2dc"PWqXGQ;*#%hp'EeR!FXFT@sRPg5rBW%*c"/in:Ff$qUMe;)qmp)nm`MrGK/E_).Ak>;],DCs=JOrJ8M/d5h%j\1E[Yd'@`;pFBD)SR][c,QbRokL=sGm#lTn9[]rh-@AG'*p4nMc@c$$Fp@h_&6rF.M>hE>POV1<\mak^Kr<GM]%r3BZ'Y-\g*u<%.onoY2tGL2YqCI\i]F27hIaJ]T4n9S;jD0rLe(Ren+Fo"e/#:1f,!AgQHIfn'[WO[eT2h5<N;0b5"!nf><;80.i`5p3JDsQTl>h]%"bkk0T_*Rj8>G'td:_N+J/)G6Ca.d`orH$^Y?4!:cq(d[UgeK'=g#gqcWMZ+rEZB=)L8rbb;b%f9Xn(O=L`2VR>I;=-8q*#6E/:N%;o2f=D5,+H8k#o2EMPJGc[tSV`93.g_::"qQ$t&%M5qTj,GMD"+5%7_`7h(o)N_tY6tgGL.N#loV3P$.MDR+4Q?q>^\b3bg,UQl$%e(B9JUt$mV:B&JP?-)+XroFJ8f/t8B<k4:q5=MBM?ZpDeTHVZG/:agr/#Im'?+j,-j[^2TWUk^FnX+r!T*amr0?MKueQ`De(X'7L%Woe+"-YZ!5$Y_YdmAe^*Y>>:Qj"'9<)n$YC.Y:scBZ@\r9oe@']L?$;XdC5m7;\[#i-IbkAs\ru/JPmuS,l(EKo<7RZnM[nn\h"*%d>H<k8I[35KjroOBA>+<5:\Q_RAtO2d\bU\pU.BR(2LX#V2TRp+;8$>D^fDfZXP73R!9sRgU`^B<GG(U1DU6]_fJXJinb0uoP7Z>%';:)U1QA>7^p09+qCZWnHd3J;l:'sk#6>7c@XIZu59L"Qc_m=P@+#s,(QEs'io$StVBF;X1FoauL8\0>6ji&IMFFk?@c)`*;sZ91%ASQ?DR7@^;AGI4dPGNk-23sJ[NOB0O@AC5.;/h979:=LV?&c7O`j0?cDQCS,7Ve!0CRLCXEl44o<bpl`ZC0oWlTXB=JNg$%:N>1q%q@<b.ASA(ta=SuNW;:74on!Xe?HW^<M?qoBH:X((oe`Q$NWejk&8Sg[>qNas*lW+T0ds5pkj!!+-V!IUdYl^(.SXe_+gmMg":(tp%e:hnOW/Y3)/IeXF.@?JtA\K-)49sRck<++=)6Z>&;7"VMn@e13R$_-DH877cH'JfI&e[(=dCq2,MCbA,2dIAW4=;Z.:qNqi+4*J2%*Jt15D(E9^?%ceBcGUEZ7b(uA72#mED6i97)+gMrUJR2\7u!JH0(.gWBnNgoQ,T\Yg//AlU;0`,U>)R%4;16(l79$3S1?EmD.a"d%+.+r8k:\T2A8S8;_-JR\[jf`riFYKBod:f[gWN8C?d%%qoM_#g-WrB^oGf,QMqX\rY3IPR9O()$:oS&$g]cK+DDH=h+P/FZ@SJ*b%4uX9cU9'jGX=]-V>A))i1%cdscn2B$ZnU]cR7f\I^.f],,pA`&1dH=-H8]tJf+*S,cS619,r,o:?XGI2J2Sf$/;Qmg#q8)pdNoL1%TsHU>A2cBuOri#1p*lb;knX@Q[4k<c/+X+Z0SCbk+;Vf,rhSP($&/o/j2+20:p^"@TaL<`fu0V[Ai3C=[<`m:Cgtdh99_<TLrh4@%ln)8`d&'XYgaP%CR]3?"b+_M7TRjh@LAG26-Vp$Yj\#6P<[m.X/lf3<7[l]k<@Vi;EThhqT^Kp"!(qL%)f(-&;)W!f;CmXT9\1!p%d3j\Q,m"$:Xmpe8G+FedF%)*\rM?W=&2U+l.+!fZ7hb^B8n?[XCZ7nG,qb@_PEST>?/JdFJb%;BTZfpeXR_lAmHq$=E@0KK1lqco%V*`jA(p'<S<4IP_pOsT+5iK?ub)_"e+SLi(KH'MuHQ9@8qj@k&_!1EOgEs<\[=gtB42%YLg.nR*RSa4CXKtSFQ$G)kZf`lD8>j7h%[^:oEMmPE/Beq,66rcKjTq!\m[6eRp#]pl3gI!csLr[c;"\kp-.i:6u[MMZ_qUO'ens#NbRtgT?=!SQ=5^&A=!p-VadV1LcDNc[4%q0Jf$d]DT1G8YfqmRYSJH(Zg0h<Hk-Da4q6OQZj.&SI3^'3hAML!k"=G.jXVO"E5MhJg\8g;mWo5&?Se%5TO0alK3F$4To;Ki;PF%?JK_A4;B!,:ll-*]XJ:EkH,JRJr,`'_AX:BF[YGFZjQSRl-!]'XIL^R7E(b1"JtJ/eFLo)A_nlsDOd@k:aJonq>=g<m&Xik6gU'e%4-a9/e=/6m7up64-M/O"d-s')l51fEW<W'*V<P(52s(6cO[hM?OAXU4g]a^+/Z:]KF$aNfVe$^MZVa"2Z?^'`0?Igr`QX6R1J"BH%"j.EW<,ZA%&UFiH3*lcN_3!Nr5ZC\k<B6DX0@ZQ;nhmH;o@]H-CopOA'J/#V."WK*Zm)>T2J5p(@>!$biCGIWRok/n756:Ra-iTc%@%i1W:$#+S$dM`H^8=*oB(HG!Y"H70J`b7HOtb0r<SGZ,TkFJ&hUWAsAS.*-'iEV"ABMGVXZ]r@'MZ<O@[]6[gt$%2H)9meT3'5>%/JDpZ_r2><7&721Dl9G\V\&%pOnr1W9(iZ.7/mJ.:\]Tr)_oGS$P\nL$u(6XTdj18lIu1P&@ac&aXb=OK2@A*V#Za^jMC_g"YjtU%CrR5+_SLI<9e1N-QrtFj(nKHME_g4h`tm@%<Guuf2HRI0^F8h.-MteFmT:XmWt05To*K;BI!0:CH9!Z8SiUsHcdnQ<:boj<LL#!E%0L/M.pf76$N#J4W3;/?U:6&??Zh5Wamr6NHV#"h8UW#^p@X^Ht3uQ+X`X5YnfsoAk^1ca\Q.prj6Lgje4L@?)LgM/k"8gr[8?%cP%7i"!%Q_W$b5Vj8g%.6NeMXDL?.t15FT'6:q%.WMSmIc+L835nf2XXPtDZ"0kniD%Q4'qZH7cS!]B$rK%4*S1gZ')$CKZ)2tG!aU9%CiO[s4F5\:?&&&e'ff$Ei`S<b1HRVWhB?h<ja-:gij]')%Ger=EXR:mDtn'$ZKWAX'-)0O\Yd9`?[5,IM/7.e'>"[C9M@o\m*KEf%AaFM\2Wijg`q%B:l0ZH@bDC$nF,bW!N$chKQ_\8_nn1:s_Vj['iHR'n/\5QLhV.1%1QpH3\j?*%cV?#tZ47[0Z$eGJ.;.J5dAc46%J#IHK<="<VolE#hb:_/:fAj4@0cOK$DZeZZmX/]'V/kUMQp1]E9.s(d]OUbN0sjt*,M5Z"An)44"$;>o5$3Sc=ZG=DVF.W2n`]%W%mU2PF)`Y]BVop\0cnm[:J>VCXgYp`,LecFHlXA'hYi^*]7F=U-bAi#DE[]U"\mIh<E9P7qL4YmS>gupV63.$L3h;cTI[f+a/<T)"%Z,A'l`p>Df^q./-kk&t+N/>kc9F5Z]VC![2="D=9-7+<GhJ+kqoE(#HM\6(]1'4gqC'-?9#Oo'-?Sm4`8IbB8-G]"i=4p,*IPi$.%pFk>J1)]goPWRW'T:Ct79LmNtfg]Lh0Y8;r1G$b!,]pCP!8ll2'>(.u9o28kCK51sHn>F.(O`]:EPhE!nak!n%au*,AqigR#:=W8%$mE\%=5nlSh2V\_(R)25g>u@CI!K?/cVQT'W,XM:,@dLr$@f-'V0_&l\r1YS'8o+9>SEl29i!NNUncFKE#ekEUC%.L1j;ugSOb^9%,O*0:Z^$cDR8hO=SG:oD+*s4W4a,j97'q&NDXdItB;dj2]AtmD'5,hU83C7[ND]MZW<ikC64ShhWO^*l,)s-MdX.ENP.K_403j2d%7/"`UL,X$C99Icbk]/G%^)3a2V6aD^Q7M?2jf($@F3u0j[3NTO)QB_7k^7\a8qVc6"^'hej)`hT4ERtpM)5W6SWE5=>-ZVdbJJ1-%NO`g():+@="BI>nR96Chc=;QSJOA/>Ha(Ku%kPrJURK8b&!]DC2hhok/WWXYmOsHg?6"P<A)XO?2)<cCad"'>Vi,PE@EOcZ!7'El%>U7!f\X;2J04^6&nG9<*2*"8T%OH-p'4[:B-99#(n%tSRq*arQAk;7g$V3!>'_B\&3sFnharT.`<_&DAehcojrnN(O`oW"0ZF%)D%G.859>^V#VRgon0`_na0>%KHYL>qA.pT_jFCa>2l_gRkr(nbrnGn?t5RHCV*qrn!db0h]P*W[KH=%S@IZVs-.oc4V1h8.M'.?;Ac%,F`2Lj]J4\SjPm26VZ#!V58HUE\\4H`c'7,/k4!ZH$Xbe'eM%94u?=GZ@%DD1PLt,m.Qi3Zo5\36(]097G+<J_#uPVGT<LA@]<N&%gGH,o4[nJY`b4Ki:M`LH2XPI_^EG3!1\B9I;Mm4,+oX"$R:=apgF<'.e3OL+M\8jK8T-?uoYrhWPPo4t244T<N1-LHEN,ueC:#2&%+haQJe0&?LjJSh--?'WObo0%XirEQi3"^`L)C?=U64-R;NLijP?udn;KU,"3A\Ck/?Nl<1Lmr-gibp0j><Ii^R?XL%6B4mIHnhlY%O^JjO;sIpl0c#'*VG3u>p-`Sk_;Wg9"Si66988F]Ja&sW`tTS[r)X;!l?Q.E_;S;<jg6)PR8+&S)?2%CMKC?JQ11.nA(Y/se2Sb6%8nJeic]YOM&o3A`'MFHWN[]7tW:?l/;)OO%E(M=FdL9'Kag`8-N#J1Qr%3Auku=#d=mctDURK_IR;6eP7#?_[W(]`!Y"?cg0I[l4%'%7GF[7b6<%]9/U8Ii(fkU=9=el.*DBTd&;a+eh*#fS-e%PWn^>aQR=`P3#U9-XmcgV.`*i)d!fp\79>Z>k>u"E*=!<F[^,l0Y<f%EgET+*NhESg^2=Qki!5i8TW]FR652Z7qO-I[D(&,p?oS,b.N?6G=(7'BVQha45aW`(_HEF9^nu)1o#=%=I,\O)dL/:"2ee%1pNZF%7bI%C72uQ2#;h;?"G\L4=en@jn(;n.^,0mE;"bMba[\83Rp2$"`^2+/RdtgTDi;_?hGk;CMN)%)p`^_0*2IKsX0Lk,nmM[iWh^gI%7%hU/;iao:CkO.@>8r^OiSm=SYr6X&#9XYL5?`jomAtr4/7>pJ\t5t+k%fS7Qf=`I[L[dam,0[\*R#`5jB[SH!s05FD&q`)iofY#%9n-U=!8Q_T9oSl%/CT)V*Xip@64T>;(m6ln%?3d.]91WSr+bC?<k./e'B^[n"o,PO1sfe01_eZb<=j1Wffp,)fZiE<$jnss!;:Sn%/@Z9@+#"_Mn.*d+%bB=t;fL5eh6G/N]pQPg4Z+k9Q'tIJ=QCCQhNsH/@F/N,3EVckjG-L`!L,];&Y9f+;h9a%:bae$pfnSb[J;"7%(:*tDpAPe_o%3]6(^qfORQNa$k2UN0TlUL['+Dk("dZQ(fDC:52*hT.Z%Ucsl$E8TCNL'YF>D,Mk7U/aEMSJ.!)F<\n`8')O^*U'%a%%?Va[E[bb..4E=IB'/YsJCU30[,h7b?7(@4Zc%'d:A2m^XP-/">;8pi&uU+Z"IVL^IEHcdo&EdTKS1OgR1SB)`e3-$FRd2a08c%GB+mJer^JTd'j_&?60:%IdLC+fl<6j3K@E%;gn3E.1nh)k=S/M)3GY%m<q"L!>1r!hnAHGGY0JYdB38r7q]7d2e!$Vd-S^!?9a+(%Q[NW$X-(Z;g_J&V</m=%lJqCSi#.pQ1mpI8\T@ZMo[qB!]nn,)?O*D7]c:Yb7(SsLWR>Fc'3f@H,"]cWMu==Pc*aTCH7Q<,*K1f6%jP_WtfZ\[gmAs#i3*^hc=ZJG#(g:[B(8Y(=bbk$<b)E(*r)*q>)2b$insbrnX$?eZmfdZNEd4]GOc0P>RF194UQJT52PPR&fT\^K%UT'GM9M_%BBl:0npMK!(Zf<Q;f91t_F8a4$9LoToo6IAqPsX9@4#&86e"-5?k)W:M4mN/iF7C\FKC2D:OdTjVV:B:a@OfE.,nO@!%ZMQoPNI#&UKKE7;/=Gr<.rg1D2rWH[SX[L7q>Apbm.bHr$&WD4'"daJ%MuS+P@Jsp4GKuBh*OcW"*&W3$hLhl&^ON[;qRZ!##^!Q%oSeV[V3h)@mR,aJ<#Q2$b[BF`.NcXUe+%L7.kt(-DFT5aOb6&FXZ3D%Q\<TDL$KWk.c2>JqcC3Nl-q6s6f-RTr1mu6k2i(p[13/`%Gi:W0%PtgT!qW.*DhpEBncQq.7_h;Mge+/3>l(k!1=J0.R,j1>fpeCG?@IIfWYl,8<A/alr:ZNI%&Om>Z1Qt62sI=2_jX[!=_`MM%5tL\aTtKBE(/*.;nB:Jg2a+md2`jmul.2O7mEiL2b><Gs11JlA2]9s'c>HgTm!Ib,^[Fq;o%\@5*RE*[@X'"h0k3.rg%!Vc,+^KB%L2#Tj]KS'8h)tb3M(_@Wd^(m7]J36D'rI;_Zf=VYL7@.Fk@,sHm2=#-j95>mROht[iX=G![:is'Bs^S3nN\05%r+8l=e&(Ro7tGB%hujFOkQ=:Yi[0rq,NnTTJYPJD]]tE+4&d&Z6"-r-!B\V/&CVXn%M--G&9gnscM[Q>[HC7<$`Aaa2j5Tk6^odDdDNom<?mECOKJ/F%CF%3",9DVUI!Lr>LnrKeI4Ais=cgFrKIiD((+Gu2`P3H40Za/W1);kO(NFV,(\CgW/00sqL'1`[3g*$(6N"h,+#o7G@$"7.YR*&f%)&+P0Hcoo5aZY8)/A42f4ZbZ0h#U__/5nns+S*oqG@N?Gf^%F`T/mCjD2hM6o2JOK^-gDnoth&h+,PkQm^UpWZA+8cf*T>(Z3(X^%m.2ugEB;maOrW=_CIFK^ka\BrWMPkb4BLO_P\V%bR0U+slLfk4Iu+f@S6cC7Ot*S?&;<3W;Rq[Wo8CT_fgrruVbV#ka[i\lO40d@%IY$0B96oPJ1&k[0Bkc!k>W$,Ae!j%XkFUaZA><M%clEX1rj8;e8k,\QS?!Qe04]sC(B%0:)[>"9D'3-LM_?[Sa$<k/"__qX\[Iip%V&C^8kN0$\hoHWD+m^!@L1`blfM`@!RBQ`D45q,)_.>#83Yp>MAmO]P2h;5J8^B^P_I"@e$makKbF;()2#td1-\!ko7e["j/.-8+%r$FL-GRZ;=g)Po;i4o*@8[!&7[hmP-BFZ>H&"ujPD3_AWlU\f)h+DqWB1GLTcrsmUos&p-"!G,14i:Sa;c.0%4KT!CFt_uSaLi4d%>cs)8,:>9=`G@1sI&;iU-/T7&.KGnf-D&n\4.LB:*JK&OY+(<gNE#HSAq+t8]-;KZ')BZ)luLmjH9%t_g1bH+OrP>\j1l*2\0.$'%/`OahM*.Ed(7*mg`@^1BPpqM,-93g30*gtu4Jjsie_GGuZS]]Q-Q2O@qV_F#;2f=_<R47DaDh(od8GJh9&V5Dc<"pPWKccXmU_0E%b_.=o=4\Xcbq5gCTEK'#Ki4TSAh.$d%#\B]FP4VPHN:,,P8cclj]lOcJ%A(@,0X-dfu.$)hJ:Lk4g]9paIFmT7n]UE$3MmNR)8`f%=kSLs/h#<<28BoHf.p67:sMjE''Dc&^u\m)&M5b=T3!oEDK;[Ybsql\-q$*-Be*Y5gna!;K*LupMUAK*[Ft=ADS6WhoQZO4)0CG2%)b#XP&pB6INM2%iZ00(QGiPpOCJ)p*(#7Hq5S!>?=Ccj@">")l6n?gX@^A?P*6_,lj?XUj3%3JPpr`,01O4;jPRrn\dUN'eP*Mp8%;2+j:E_biVU95$B3:(tNk<mc#Y-HKD8tH`FIT8%Tj08uZNVZ1Zr-3;sXTsi#kCjp/ZeuAt16I+A?/b%=-%@1&=)XaK"5qNXA9MVO%_n5m;V8]4!G^f4n?_/t<o:H6&7%[OHI2r*on[$ah]3h=OGmLS8kE@9Q,B%VRSPMa6MNo,,)a[LUjN#3Hr3cK"qP77`H?C]d&`if)%&0)Iql'mfg^c'<9@%AQc,cNIpHO9CLN&K7A7NJY2fhd/<mjLHR`^60*b2cfMnCT7(-HW>DR?=mjd7^D#G5$4(nalEC<)3B@-haKa%M0<::YsH;L#?g*I\/Umo"LYJ%6j>1U$%%+!nT2Hh#:TXKUjR>_Q^:09=iDsP1'5hiaCaoY3#O&g&$0Ml]r?Iq"&X"c/^o`pT"Rb4%\4\o`oH^1$kmlp0.TMO+P:KX%!Yl;_.dET.T0GM;n7Nn:>)Ged@g`S%:dJSWN$p>SNZ])D@-hPbZFVlb5qBcuZ6D]WU(a?Rq\.Yr%r4td5#CI27iX,n3<sjfEh9.BZq33*HNDI*eeUoBhGNi)t:]jp>N+1kf6m[uWL4dn8iSd,%]WaTRRd",`:N8DZSoZ1_pClDsn-->i%XB..RP/)&r9:;3I_g(#?8oKmDN^\OU1,X&0IQ\E1.dRTm(ekcNA:d)FQY88!&cd)<Fuc&``YXN;SOb&ImSWA+'!,"g**M#<X!kuk%b'A&Al[h3\D>"d-71LZidYXX0<j1e657ERpHk+3<h?liJ_Gbo,B74km-Xf4LG2m<g;P*,W9:gHi(aKNFn\r4`8qEK4qrE!2@<I$O%)rKI4K<aL$32:_?3epg3E68rq$fj\a6O/BQ`CRQ0JKnCRNIq)MBOZ7O#H8X__hfUKpS[0Tf[`lAOP`YM%.Y2r28F#lJ3p)BZ@)pr%r5>sAn>4tL(WY_2fdPq0gF$)O?Pi#;?aeAs\#jtjp5f4Aci:r`o4u*P^-trpYb%tff5B*gBFEp;-b=.[;2@-XMN*#JL&/pm"G0lI%JBIZ*G7M8O;>EV(a5?*&n2(9!o9l6AO"QKDZdW=0DbOPZI@QR/X@p=e(DH./\e0X`A+"Yl?t1Yg?MrZeoTgAcg>FU\L=uC%5-NiQ%hG)nko^ubPnB*rP2g/>S=/Y5q^<u*<B&D83DS4:g/MiW@C<qOE&,*tsf)p/m^'r*%YJGoSSS"X*2@KXag;ggE0^$SsWVM`?`#Q2=%o[I#SXLb\s]>W=!_t0'R^1:e>Yaq^5mSiZSjBal-'q*4m,EYf*k_1$^+,tP92P@f!B/EjK+<R*4#E_6LD3V'PC(p7sF>C9iq#d*s%(c#^rE3can**9:uW8%rDHX;uRerH^*,esmK8#PPHL@E"K]Yq"%rd&fA&AFRBK"oSGiTn1e]$nRNdIQ8-I]%7\j5B^LYtqjXj1uK"%#W1A[ST9F\3L>2mPC9$+ST`QU4'eTl"9$I=LtnuI-$NR;O"G\f3XoDA1@Di/I]%bU_pM'<6@Yg0a^_R*"'a;b8oLe11:f;Xcm^n-%=KW*/)0EH69I8"d2W[^(%U#dc\\?0/HLW8_gZdKUP;X[>ZTk!E`LR&`SgDm-\c\IMfUP^1DMMG/e[*:;'^9&i1f.mpV%aXZ3aHg=%24Xr(V3@q7WQ`J[gQU@=AN=VSl"l(^,mS/?:60$_2iKd$.ltat-4]^h3n\^V+1TO5k]aTZ)kOb]/>_u"*M"U=:Wo<G]VntIA7g=7%<PR"uhB%sCW>45aqi_hi_2T)6Wn45f74""TOp5FX#$fdAjd8oC)/='UFBcN/3@a%6HU<(h;hn"=i5WRbN6pg\f:sMYbXu88+E-9/%3iVCdJ!*EX]JSnq7+8-Q<UZR+=1F6KQ[s$A<A"6J%e_[_ST4h+lWj#5W7*`64EAC#:3#p-*p^\fq!;!tAOErUbm?=Ef]c:_PGRn4%7@HG[i2&>-LAUY`>45gec`\>T%srC[h0,,<$p3:X>X(BhSN:#X@m-3S[[4"XqOOKcf2cp8E_=*ql=.M7VkB5N\(`9Or=&i1+08@%%1J;`d:7%jl-cbOC8%P64X^3[=:6Bs=*UD6^0UFW[oIrrZeVdc4:04TuV,]_'C-%&TE472&hQe;UCTbq05(cW)[\uTf[&D_nGfAFp%2gaTh4U0`&he7_@GnN.M3^$u.2*s+3T?<,N:)Wf5B3maL'QlGl*^Q?WadkaOW*97KFX&C7WLC9EH=^b^kd3'#WYoO.@HLsbF;iu1%(Y"=]XB+5ImXni=>@4F3>4COV6Dq(XM^k7ck=DL,oTE:N#firr'k1n0_=?.jmM,=<F?<U*A^8Gs;bGMQXVT#[7/gKYdr\b(?B#>Y%AnHGHV]fu.-%DA,#l[1TF2Fo=Rbo#EY)F=6h-6dMgI?*7WVKIo;h!Jqq*F\nLCCnO3>`ZoM0N=f6^kJhQp+(LDsQ$6(9-B;Qi4OB%mtjqI>8TR]HlHZe2GT7h?=o5R'#e&38!p"KXPqp`BR,=eIXAML4s@\k:lH>qmE_BK)giZt+.AhWWfspTmMfL(mFGr:FAC0Hrp^b]%D4N7rQM')J/JfMBXr4t0ELlq&N8G\ra/;=_l+B6'*JXh.hd/1kWq1s`YIBq`])9!j@\rDOoWcfqJC=9^d.$EH':@W6VO/l<52/aK%I6H(=ZuA!6pbi^e50FnZ?"@RDBk*#hqO#+XEJ(a:Gq(O+,*$s(1SK(URU32D#]F4e8Zbt;VbcJF,4bUr4YX=<Nkf+'c@$6;oZsM;%Lu)0dE&;hQ,cW4qWNVE@<-jL;%&+"`f&p?"pE7>c8u"UukZP30/A;]`J*c+g9o@e`NY)'1Cd^_:=6jMS;eo]*T0o-Do#IU4=>tW;%=Mh@p+ruA*pm8m02oMu59i.tj6dX`dUt":P^G'dg%,.[F;/;d"]IJ&.lZ]l"DK2I^cm^o(ig^,L:'5k?L7No.\Y:t\Qu]8fdP:)&%RCoUuV`A=dJPCr_(#=UGU77$8F$i:sEi7ReQTA\8j@.q?1t&q/Wmfoi*5*i6<=sJ51$fU$rs##\4:'gDZ.pde75`X@_bPcuomh%[%aSRp_eDWans/#]s-i8:'SYk1sSRS3XmM*dWWa"O_UfFaikJclZDo+mNa7aR#47/&tV6X"m%9dcS2ogd2<QfR%97cO7D%VIV+%?BM%fcn#*Se@dCL*Ao>SSZj[jYF2'X-%XV@:4IVraWP)aea]!*U+g^mn[#?-`[kJ%gFc5cOX>j/>i6RK/b9^9EOn2b,S%sIQHF#rYSkB%#T[:h=R8<D/HHq1gf0OqdU\t8m7$u?q7')o@mfK8$TYOnWGrpN18c,[l/IY`;Z`2mf&4@UEbLpe,'A_!/uW:!#hFa["I(ZZJ2"AJ%FLgl_L`pul;3DtufDL4).4%S69fK<EnegDYTbMc/9f`iL*44g)1V.*cFS(?=4:1.m`olbG*1t+pNtD>"3.p5gD>%2[hgdPt&V8!p%7YmSd/JDUHT>(`q:D-g_,aJ`jH6dg%1^)pE_sS_R-G428QHWD[MbH*GmdR*%b3RIrS==qXPIm\S'A_gfc0=XM-C.j.%(E7.j+LV/%Y_K0u@E#g7_hFPBJ.g!S!Y,gmUJJL3<(SDLfDqPK`#/;;TH.=hVqmrRcVSHt8L;[&kmhR6^\siTXV`*!40tJa[NbD"dZC]%TSl?g%<&6##'iU&@^ZHIJB"pco-D6^m8m;DGdkJR!&C0YmBIeq5P0ZpZLB+m@\A:"]<U%`#HQM34o)'L@L,-3cQ^,rIO`M5,N0?=!^hC?q%oKZir.oppb>3.B#Zn$@_;?sWce%aWoS]_%[Cl9?%IiOCs(+EG>!]6Z"Z(s=L5V_ARU-E$Pj[=2@Dnu,n/_J2bX6UBj$G>k1)KWKW%:!]B\N<VC9jVqG'(,)b39&teHH*h]dEcY8fQsJ6`*NhJ/L5*g)cR:^VDs!^$BU0X@G33uYd:Bt>mn$=KF)u(ZX[B2OMJRN3:hn3*%)VW?a%07P4/fgTqm*LSfkA]+D6&>)+*=FBi?T!IIQ`4KB`r+)`Q"3^EPIgh'=gikt8>RnGC4jqe?K)<q!,TtDLhUL`9!>C5MOi7C%827MACD3nO3Y-9MWjMu4NTkbEhQ^ho"n7r3$O2S1>$V6T7!C<]/G,=H_:Fsq`_:m.Ub]N.1Y?$,9\*]XAo\qERA=BITLc_DlKn0S%faU+jhbm+<l+1Dk/^k"%No@W?.Hnp4oe]CpbsOT&+p'.$U10f"Ca#PC/N]_aL"Ime+YiPdJVgt*8#bg,2I^^4.&l'6,jju-Np:7@%77%rB><k<CBVPZ^U]u'qI3q.:Y50g`O9K^7_r5>8WIYNoJ6H/$OZR<fbg!G!"gB+"!5%d8nbClt8FE]PFHs%;S^5Z/noCo%C&opO%mIZ"0iXIqg<1f@3K5*'0DW#"9P6:8\Z?H%B=KsV+Q@0?(%!urX"N5%R`)Xa=6l^]m%eA5#[=Bp)Z)C)r2sRis/cjStgWP\GjUr?:%.9S5\AgpkWL8;2Tp>?C3@dB70$r%m9_X+b&-<Wb6&shp^2l%inMooL-D3d7SDZCm70R,j-Vb5-Kfq0dS9f:#h3*^&u]$_d+gth9G%mt8\jSa4b'!eYk0U(1goP8/CBQ"d1s>j9q=es-G'0MWr%3n]6DNMsLcFf!id*V%0(4t^o(m,f,:RB;QT_\%c.X=ZfLV"'+"PF(h4%@Ip0qoD+Pcr$;0f5rQ<cUpYP="*1nF3$!66D=fkd!&Ii^TYk6am1JL!,"_7MQoZI!(9!u_FB3QUl-#6p-qkXbXE#icDkKtD1HWfg%.!5klNWD>Xp2]#lA)?%kZZbV6;;4a*!6ckKWg@QKObHZH'`i);q"3Sm&/p>)lU;.CCZZti@2k4fODGFH@839-kuIil'IfK8Tnkb?%*B<H@4Xo7>!N'$DCsRp;f*C-a],:.<4jFo$VV74KL)Acpl>TmaTac'qJ2+dHfD#cE#dfq>`"jd:mcXA)b)0mj>5`cW7AJD:[0q4;%1n&<:,R/pi^$/RmD93\jN*b9/i3gA%24DGF$5*Ek\OMdYEc/M;"-!MkVPhhqQ@4;4^.)n[>nB!OCGZ0jqmBK6a(.&@/F&?uEVp<5%Si<;t6JE6]#[4c\W:-Ja`\u?D/Ks7jac3'.h(HL#p>t(XA#tE$H=emno@8Se0TuomHYO=HD>1H7A0!9i2;@*X#IQ7(j&fJ"M0IsP%^oV6.2&U*FCH2#mHUB2@%g-d^hZAA&(^/?WQ$7"'l:#odl"-F9":V@J\S>R]@=4ik]22^!Gj=\9^K3+'VLPAtFi:c$@lKmRaB]Wd%_k"76Hh/4.!nP&7Is@`$$er'uB\(m5Bsh,!"K*4=?3*L#Kq2F&$qJ@Qf7P89Y6Jt4>!m@8Lc*E8:"RrmAID;@lbp:LGhSAK84`dE%m_]ZRV/#Ud]FDd*(HAC^9Snps@l@BFG'CR?<GV1'!3BDh<oBf!gZEjb9djVsh%aQ8ojSUI_-HhQagoOYBaj49m5N-lg"9&t6-535%nD53Zn^8>QR*XMrQ=<%mXglf6@:GtC3Q(60`]Mc\idJV$Yt%D*_KAoJh/6EsB"3"/AUEc]W!?_si5ANn(E!jY=K"A!_dF!!R`Q58%XW/kmAg$GeVOMK17l\Hb]e-$rE^Yh)#o8qbY&)F]K?Ii^a?l6r>V0$lkjt+l:\r)>NtZru#^_Nqjq;tTFQDMKmVD$N<ii]\:/`ms%E=JIa"Wc194fG&1lkEOJ)-.-R=[Qh.6)Ue"m&#N_]Rio?olX,!B3mm%WYXrqL<dG`cD4XJXVs7l$9DEDfRk)'o6*H;Fk8Km/V:%'%TT^RX/o0[p/*O3%AmId%g5p,K@CG;nl?V.(Hf0l6JM`j%CnRSnl&Ancg`E_%09t&*a;o2RNGH47S`G=W9^b8PD=-)I3lN"E>e=F>%@ld>CW7Y*U.k94sO.Baar)J4#.Z'm+j"gdL^(8EDpi*C^WcHDYpb\D><dCrGFFX09),re'A?O-QdOU_Q@qhuWcBbV)BXWN6H[FHs%TPCjA'nkoqe(kG\IbNF&BoGgllT/C\k8c5uR_raBRsHGm]88htaY;o6ArK<dS'eO$3_H\-Fu,.Sbnh?6g+m*J)+54.>(n++9f7R'%;V3$EobK*iFiEL%\Zr/^[&:5cagQe-/<r\5mhooRKsIfn;dB4.CpWER3jo9&l)eMir`Et$bURUW*Nj/*,k12em\\YI<ikElh(HSp%0SQF#XTPnO]56*h26HSf[o(1iAl\jdTLrB*Q_kW:_3hj_XaB!^;jRSU8BpFbBH#3hjW8[$]*NFul3sQXr7S44$eMIp@a(3*]fR58%lWJpT9j[WLW_@+3Qo2q=VjKN]g*O]hb=(_.;V#M%;,!PUAYQe`?M-dcH-O?TSOtM]^2-Hf[l)Bm7"%EeDeWN2VZC3+i4<94O``pZ%1<26Jj4%&>kA:?K;T*2[ls7ii%ebh]B_Nou!5e#7'UWOt<"42NEZNEO$"[s\7$gAM/5V1mFcsRLRZ^-?Ba-k.$eq0$a>kfoS8Bg&%iW5GhH/`KDY>"l8nTrAZIS[UbKB.oT&L1&b>%fS&UD#*h:W]=rY!qXn=%"ofXa(0NfRdCcQf[&M+1k]i0>1k#AuFHNe1mLH/M[bF%9djGo!c;O[<%+a2OT?o.Sb.[D8nqeC[ULS*$J7ehI!</E;4JLrg9WkgRf"ff8a8`6AeAZd]%j+dT(&D4N/Y!\B2P6V3:7aN-6o:A%pD:Hfa8c4$amP0Ib0W2kaL"nSG+Xm_AS@NkN)<$D<IJ2HXc/3VSq#-WH&fSt*)rX;!b]d"p9sF`X#_Z:Zb.PFbJsG!m5W;Ubgu!.%%;%;t8ZXQ;Ag[\LQgo3BDj!.8ZuM/GSmFKiBH:tu=5"Hi5\?NlC860XAa=qc[@gN*?/(i\>Bd%*\iQ>Xoh=]:'W%QOQ,;*Dcm@..%WYEm^n1@ADlE.Ic7>d\i1j!3O]@"WohUKH:?@&lScFb4$rU\&jWJAsW"hdt%FZitGFV\iD_jTmgm9Mjpb$'!<JMufPFA;rr/E5s-%*_s*^9)Q]blZtPX\YGrEY1N>cQDXlXU`N:=@V'&MAS:[Tg/uR4=U.s4F^J:4$s_-P6ine0Sk(*`da"H*m>A#/O]Jbp^Lk*#"(HM-%7/,6q(s\N!m+[2'ViJ\,$Lu.jS/tXM[HqEXf`Q/pd84hREC-aL^U)oP)hT0Wm[K?)*RF-mMi#ddTjbBBGIneKP`(S:=bUb4&:g/i%/#0#_%)m1hC0(g<]Q$@.p>SMH7dJ<5^_fgniaYfG$ugMj#T<BkZXT5>N/n*"3).S0Rs"%Z^m:mlWO($Adi+"^>'!fEprrYD-d.$D%W^ru`45D$R(phW+_AuXPB)5;>'Tq+N8Bpe!fh!&`Pkt'K,5(H&2\i:t:+n(p;8$*+'r_I20.Kj3*.,^kCI2LDI=53_N"8X"H]uj]%=."ED)")Q!L72""I6H0I;E2=]hfM@a01t2FkG@@<E1Q/DeJ'g#h:m`9]-rA3SjA$fiGM:;S5*,D2O))CkJqDYB7"6NTi)URcVHGL%I(D/iX(pfcGdTaOo3$`8FuO^j:dJ;'72lPD"O-XO]/G))Q:$D]?!L3*U[Ql@_D+-C(K@r:ach(V/oK7keK#PLLSH^:@Wk_k4NR)O%DN,UalVElMI)Y4>lK)8j4*)#Va>FW&IW5!?R@[_Xbk`8rd/;#X9P=rD)]mm4e7Krs>^A+?ojqX<W.,+Z6EjT-c&o'*7TmelWGAd2%Wm4G*,h+4_(tY=4f>lL-m%l=XS&h`b/!J;::4nlXY0"D8;2&:`DqD)C/a#(ZPY.gJAefKle\Z@HW7+\/:?T:&U/Pn\f(`oaObM7"%]*3@2;prpDRM)iRO'/_,mF-0W^5m3,A5m!X%1M$2bsS78[f`t:Z]]Tf>pZ%"luXY@^W[R<RQ&!BDgg6Ie&9DFS0<._bO!0(;5`aF%$9LAN+L&_]nS\K$O5"J0U"><8'iZaeLFHF="2eoMSR=KWS;ni*,">/Qa_"Cc:sF%$2R_D@4kS.;)2i6hBPj]rS'iAD*NIhpM=E`0%2`=K1XG`JhA[OPKC7b`f?@-s]SDLXu3bPJFa=`n:,hH'4mN?CoMkid!,X)mINI?4UQcPT_la+o5(73)[N_f-#2lk+km#KEgXo[9F%\%63?F-]uGpW(sRQasd!77;mb?0tr`B:eATUmeHm4A<B;FF%qWGSb#]Wp+>k&(>)ISR,&f.kf^[e*5E2F^"TS>YV,_Mq?j#hb>u!%MCaA'lCL5k<Ag<g.#Sa*3iJqAcm#r%9rGHq,MC52<R^3_dOF5ThGhtge^E.+gXAVLSR/I)]Rdb?eT?,DM_i%0XesQgDNoK<HW*Y:%=%d1Fg3a^eFKHrs%N'ObSQ=5(3N!?gYH-p[k"fVK<0u-W>#:N/$?oHDBB3:j[[PK*`O`%Gdt#lLM>*s;Xs8h3>tns8A(@o#3rRdt%?<>V?!J"L&>YV-*>,'[Phh,Z)4nYJ.?@,ODB<a5?UM;i*qpLC;3^$rnhKZ6(l)ZAFH;dP9=%d1N+(+aCTN;U'<VMEZF``i;/RGQG%<,1maYZ^aC@j11giWgr&GM.(e?X4%3%CF:,lhft+]aK1/C5faYU6A7seP8Y7PA08`fOP"_JV$2<ZOp(RPjGCO)n4"i(T'5[#uM+m%C?sSb1R.Mj;Aa-c'0;Od]54,qOVLeb6o4IE>n[gTK7)5/@WV.bS9.u$fgU*j?ZW,)kK9YphT7X!L:>>XfrA&XH-MmW-'u;33a3OK%bkEL.(Ys3m=*&^g41EG$AuTTPF(^n<7"jh$RQJ?@0u)qTlYGoZm@2'`GP2f5W_5K7kDGh`U<P(5I\"GUcaG6%QXlGpj'!K@g=3?4%r\RmA5o8$RmQIr::K0f=JnNO@]WFL]4$/lOeeNqZRlG69(IBc%gCDuj7#%XMR/0a&ZFq3cT]Z?b[[maFRVFfo]sFDkepHQ18f\[j%WHLW0;d&Gl\%N^f5[!LsZb7:bJD&])D8*7mlb8ri5'F[TJo28Z3=];]I@G1lh<h3I7Bs17ZPO71TsRe)lW+?sf<Smo[L-f0mXWY"%eo$dX$Yq]E]fQr?!UIir`gFdH><Bu$BtFdFRFWUZjaF=EH`0G<QZQ(N?L&)9dn&8-%s>U8h35tql/^mu4c*39WFi>O0SC6X`_47Y%AUgb_MlMb;hpB>X?+UaQMV5/X2W45cPQ1c_gY8_7'N#//:,m'.YNhF56ADpLG_\e3`,OI#+bQm*I+L=4M=m-'GMI<`L,teS3k`#6%]c6C`.Nc866]ocL)t&#m;k@P`OhI7T\ud?CDT_9O$r(WL;qE>KW=S7SL-)a=?I9d;mGDkqpJc35rR?7(mGX&kjqpOj[L6jOR'iFD%YiFr/]BM@,XOU?8#.r,%U&)W;h/_`QcFLf23ma?JB1*k%4fRULVX292Q>hdu@5UJI%]a(dn9'$De@4`Y0e$0mOb+Ec&]8UL`C/A"%CPhf"fdpX=;oIag3n?cp$7f_dN(H0'Mqk9?8t$R618]&PXU94"Y[*F7EK;->Zr=p(SgnNHmnVoch6r3.N-5c+]+[miD0q<%Y#*$j%`MrbRa&(s'`8*Rs#=L4[>[otX;oMT2ddE*:D-cml8SROPmIfm\W]e#ketX/84i=%og@o%$l>9i$BQ6tB^V^skKmZMI0Pj]O>M$@d%9"(dlc"^L;$kSk`<(ObgdIfjADt?olpba(MqA4A8"8To1LFYPE\s].iS;qXZgY<^MmRush-?G,m\j&pu%o2LAElZ%8WZo*@R13`*%Wd6X[X$3c$\#)i!WUF77NudR)eAD_7(ZEo5VrP-f-YploW"GfY5Ajj_ZnZr=<.oI/fI;cU5?VP,a%FSclu*bbl<ZIA>o;D82Cs&%%<H?1a?4/NG:=Z1TFa%Li^.4:8<&kG8Ae']ESN:#3^tLm5<+U:lD=*sY]M"H(#+]c:Y/![-<6i<p/)j;t3h75NN'!S7+5#32']8d'%Sl_1XC-16*]16gSgUP^#@OnG3f`g1AUA&0GDaG%JF(EFsSpc67ClC,cVl[(t:.N;K2B\$?<uMCu9Z!1k!a;L#>-&=A4_j!p1W^;'%L<eqi8K_be(p=.CDDAKS3,-8g"7.IR@?Y8W`4.(lF_d6c8r/[jOc%g@D6bd1WqYdj(7`aZ\=(<R-7NiH[E<IR>&Ir'%Q<(pJnA&+%V`B%.MlJUl*L_XR%X\,L=nHHQHrAN6e_RW]bG##0/\ABsnm\*PD=,bl\BL$ic4d[B&njquI9H\9/ULtbl7-d54ec8q::/lGdTIt!%YSV*qI;P+!4\kY7nA[V0T=kmJD,_aJVO-\Qnf0$g3Jge>8SgCBY+oGbr?^d<cF#i2FI633T;%1B!4tCI<q!+L_g4&<W290g30O>5%5<l%%1nq=pRRsr1hgr%e8bO])c6Te9VUJO`;K-7oa*>SGqYE5fB%fA^Fik3Oa(Lc>$/Dn(+Lhp5g@n)GmXB1Pm2@Vf[T?#NEh>c:%f<UfG1::+l`OC!8JH@,lrC_%R/9bppNN5lRCt0>&WteOeAgu[2TT)iEjZ-BhV1;TJ)I(FX]^hY`ZS'b4bm^%fNHK0-B`jaQ/NRcd%Ffbs(NE,5'@[=Dap'7R'\a5JgQM9XN7BohMci@0@\ZhZL-r@"_.R:U'J@<cI0e*a@<<Hp?45E@@T\UO%epML"<If7.!0noO[U02O%[g!CVXZNZe<3_<PKW3c4gKkVfh&8OHZ-KBMAU9g2%<[Y1]2aB)CB11J\YCW>"-cu(!0ul8"J=7BFakj4r>XG$\WflEQJ6X5?V=GY%[TpsfFX(+/0'+<8,N]J.pQtG2>WQ2"cS+Bq]c[&n>fp],5B8D1jg0)ZAN,tH.C0?e.F&JRJOEP8_8`t\Fal=!@P?#]Z?`XGXg=_4%^=Q.8ZlY_HATY+_Hi'$g^":U.<kj[?L=3WacTE_R+,RIVYFe#MR@Xl<_7b<KSD9$LrQKJ?8=?M2n+F#ejQ]T/fCW*.LT@P1Y2R'C%k!RVY/ip_u:PD?_XaV;G!2=hDTD=$0G,TS)YFf\mU=lO.p'G6@;HENCkRR%R1I(\.=qgAq?9_@U(W0:T#P\(_VhNkdJ]d%[5P%]Q%G8G?+p\O->8]mdZh0jZ6W-N=I?9`KZ.*pe/Hi;/)<#i@*FAqt;X[qjO?9]H3;fSk1nob5;MgPCZ@S!J:oi%F7eTQ3F-/Im"=ngX6%Hi;0,oohAGbBs332d@j_;S0Nl:TiU'j$h3Q<up2aB21_Y_=len58.2#?aDo,O)MrVMXC<9/?Y2CI32ftp\IHXFN(06C6"U,rClJt%/9fk2gV)4bglk5U*q\Gu59h,]h7Ad%=oFWqG@"NGZk>a,Hi;1?S(5+V3ks9B9l4aSf]dg3m;:9*^5oH&iZm:EfDU,FG)DZg:2ah%%X3od(I+jJ-mdBaH-+7#qock2=h;@NGPtIJ#/)'[0IcbO.!KXX:YFkWmIU/T",i%_;AZjAA]m_m)?@-XpTD>U<D;WCc;&-6'>INDS%f6K*`i`89404!E"f:#<4hWe`qb#u@NqO)9jdTEc7n+AKokbQ<LFaUBbcFbQCoeSfKcMkM+S`_TT'PkJGaWRbQia+iPETu<EfCA8p%c+SS'*20kCUq;!PbT0%`]lnn/T6W`(@$/(8f2"P#mB(ghrg<):XOR"@)*:.&LTrh\b3$Bd[X=IFn+BW)AEs;W8Th.dI-TVTB5S\_%X#PH,&52B(?cP:qS,$`u>P^EF[-(%eOqSQf[M#/MVfp<DhJ:7L<SSkjR(R`$4]PM5_3<Z=d$7+4+ak)n0U.&EcUmb6;+74Y3i[U<%lBcp,<YkR%%orl`s6b#c1d^k7I=o_l$U2^3mdk'%WWBPO\X8m>*qAQ#,9Cc;fH%Y^;Y(\TOb'!6Pj:ETjB23EFOh08:Ws>$YMO'u%Dm&gE*3N,b(W_>tPInOT?`buKRL>WT2m0W%Egt8-c=K&O'"lokjNe'T,/]!,<I]=)l$C!%\Qd2%GfhrmTc7'M[`klGmB"OA#?f@m%k;kh0=;Yp^%NGU$L\YpUp2Os4oN$9Z]?`E^4PRn]gh`$HZL1jF)-r+tan+jC29-/Ce7tnoVcF>s/CXob\[-VOlsNPfZqQNUq7SjR%2T>EKAT(ZL>5b[W/t:l+88WLM%T1cC:@+lRpdfSAM?7PW$:o92AFl%/NC7AWMgE=Y`.6f)L=!T;K7/Ja`>+B(N'"d4Ye?[#*\>q@%aWW!Md2XRsqJrNtFAXS!m;%_^""S'"g2\(_,kaZil*Q?ebi`rX^K+4DlrB&?^sLYAMP<*khl7M3W&6_!9QR@=e)?2Q-hFtF!mTBF%gr:tU'$KsoqAYWVZi58g,0:@#Y9e@(fjc./H$ZX']mCTakPEI(cM!5'Q<^'HTh#._p:e5PM]:@C'DOYV";8N&euN!f$/thTS3S,h%_Ba\_nIQ<P!eHaql`PRuqlRQ4e?.V\9]C+rli(nMX>>M'YGKgF<3"YP;ZE2*Pk"a*9-<PlGf<up5'd6$^AQZnh`fi,rjV?6iEt$l%]8&I-[!PR(qG2kCYNS!Wh:JQeNUZGFC?"&XkJR!HJ"#/tN(ACMJ*+("od^C4p2BNbKlb`tmscatf_;QP\@U,rhUoM]4a^S3g08I\%g::.#DOeF`qmJ``iQi$=6U*Z]s%m&eRXWoSJ(WN0h`*Ll[,(cS+<O9Am.N[AG4k+lKC=9!H0$>I(OU52a6oLIb_J4U?_$G3HCCG4%HG8%jpC7)'PF!8tKTlDdp5OkM]P+#U^\V.N^VZUMp2rTK\qQ:FnshnLIkmXgiaSVh+^S7Jrq6MVLN[ZTl,`=#]T$@sd]2.'nfFjN%U"5:^a(TDMCb`DqPMs`/K(].<2_<q3`Ch<;><YBhql;6&4&=1/^:XE+]ka7r54S:sP1+EpX,E#(3j8-I3-4E*a%M\TN;_)'rGqAD%<:,t0p"bf:2h1aPH$];P2^b5's8/"lNq;h$T-ZMqpu]DhX3VjSHFJ8$6#;/H:$MrAg;U_^VXE2U%V<0Dj]1Z$hsRoVn?!@6l:65u%m9;eDH%p7J1VCN<UAeqJ%pY'*I^#IFVY0a#"X(Do<5=Xu3</$0(T4HdHfaipYFIV#L"#bUXXi#Zc8Vd2@/9]1+0$l`]j,g6lBs)1%-$medici.TWN]Y'm_S@0pXf._G+ZHlpOd^r*kcaboZlpWpO@To\a5a39]AnJ9P6>Krq[.lnE9U!Oo8WN_2:Fs\PNb,K9Z2$"1gi%%"Z[hiFK,5`#<QmmDsb8m*4b/X.J]X#%9^$8Oi7(DT6&>.lIPr;>nQ8&SpEM-[^*i__F"-9Vq1uG0C3$Bo]$b5m=)A(h!k*FMehqc%Ck8L.FR@6Zm_>ET7+ZpugeYRc.9ClB6KVZ6/1AdoZs&rIW_p03^Z`q!lOO2f`ii^dm.bV[H@`ceJSbcqhWVj!m$H$Z",tlhf;F+j%.aX6acLr*T87ul/Ug'1Hglk[_YJ#7)iPjK!Qf]Zd5MlBeg-fk5e+J0[bpqNm:L,u+X];V*_4k;Y.^&,]<VRNjh=QmgLG@IB_A79_%]@62S:[VMdI-s0[GQ&8uFMn+OZ=3K7m68/R>jUNro&Gd\](,:6pIHD%ij/gQ8$CAZgr`Ghbb#oqB<4n94!Ntep;,q0HXHEb.mI$l%%Z/"6kH?QM5G.oR<I?>Q^NDoYEK#XThNuTrSDJL0A\>AKo>U)1O;u6!;n-)lMfslm;n$-enY:6\Ta-"$_UF3W7e98fXkd3>T<)?^%S"Nbdqu,j&RTmA?@XGPT:rQ5T8@fA$I3`FTj-*jK+Bs<+3Ig^IcK`(3H@<F$;O`L>DkDiDkO6,kgEB5mcggt3M6M6+<cQu?<F#Co%m%[UtcLtHmQsrWj"hVLOMEbj.hM(\oD%I*K%pNK:GTFO<j?4'\GfsLoWG^KQ^UpoUBu=lfLr!CZqo=;eX$i3Fet8lQ$@J>hkr7+i%]0"%,:O[F#*qW8-G1F:.`]l7\If&2CDm-`tlUq0\G)XnnmRc(QcEp(>ij[Lo@U]uFki(1oq9)(l#B_\*=M1p+_53'<LHbVrpOBd;%V>kUTl_FI*#Pg^dkL0g2/Bl;^^%Z:!K6sNBpO>BZkpmGEp>c.uhp1t=Ml$;Bs6'*8MnOl8\&Q*SrU1Q;]%m8[pq`rD+^tbM2sX&*%MK%[k^Wl:rX#i-+qrZ8<'6hIoQeA'X-glqPfV1b):>D7s;bIVF4)nmmqn5Ag:>D7d`9>R\'6iSEGY+t(bf6V.LZY/;1RsfgU%r2B%#(,sgGdJ8@:No%=Cn,C^5(@IUJ*5ak:<nV2^:*]TNj=:I&DJ$Ba"$)fDm)C"Ta#q$'mT%$70"8`,/q%@IV2nE>hf7,M[OE+=5/r_%XuaStmX/XTqrVO(/BptViVH*hE8,ror6doW/Y4>EIl\$3BZE7rIJUU9nL*MA@[r0qn_j>c%DB]fO(cF40BLM!4-S7k;0r*6f.2XF%4hnhhV`>K9r:J&4PntIoRhs@.=6YVpZc6W2ikI_2a<g_S@C)bcs4RA9c/HL>40P5=IJ/'[gr;i']9dG_J+*2s(H5Y@*.2hs?a$ZH%fRIsanGMtAq9@a=?XLKp]+!:$p0TpBfOWWOpaLER-YOGMU=b[5$_^%TcYNQZ2h/O6r`9mW?2KDhs%+#_UiUN&hR[Z8HhYF]2GSf8%rV4=1"97&2F$K]q2?(7^k+:#*CY?IpA7ETcmpA/$Flgm@Xj?aU?!:G((5B`If3aD&%-REVXl2D1T)8?\.mJFo^<W?V\p.!Lgu%7#%@EdI-ce\,tCZo#CMI(dOiloGM,]r'bB_=7IbK4O2pVaTuQS&=;oYf=ImsT1bCObLTr,D2Ep>u)1`4=4/]63-"bP,QeGkA9m/<mAM%55/(WOU9?nLXS/#pB;jh6^^^&TV$["a2[g"Gi'o4H/H73'2.JprTfdP..peWCpeZc&so0Hg9NrhTAI$,,(IIOh+Le&(iQUI.t?<u%dORuLF_t$JcceWG4o"*T<qjM,P?0EE+0LJVmZt_T^YcZUI_*3Srt%tTo^m2$@;0:\F-f<MA,Vm8?9QmPQ4Nh9hn6XTrVETHi?,Ml%QHMnujc03-Q04e0ik6#rkM8dPh%,LZ\9ikoq5d\O#?N<j#Wre>@XCO%r&Z[AGOOlbJXqu@]K@WmhIEs+F`MZoINNbus8#g`=5Rh:%qj%#ap\2+oQi>Lk6Ab`SN7bPo7j!5"ros"bn(md6HMXJuMj7";AMn2,VTPe*8!OiR^H0uVY!,SCr6mO3WuG4%R8;"m[G8E7l,/-l%Y2+PIiIn>1qqq3`!t)_E&^D@[I,Dm.rhD;mrD>4SO7-n+IkUujn\&3Aqo@SSs*4#+)>VnYhDU\?&&K^eG*'7\r!;7%r;4g'/`!H)%PKP"_qd\/dTAmU<lInJso!^^HQi3^]rlY5]hIGrfe,>E@j2S'B]K^F\gc4tepICG.5.4'IF^;)PNt2`DWAD^JXMntba_Y8XqYHE<%*)@R*!X\SR[iGcuopa!9JHQp0^&N,#o6ICpVc1bR]Qno!-+Q()(M2q3*^3k<lRpsWRb52u.s,.0J%)?QL)2e7.u:[Lf*X?2q6a73%#nSj=['=cDh0A^'3-00f6UFS,kP*IlVU$+QkiGsbIXQ,Bo/B>Il'$DJ+_-c9rrF^fZNmO!e:TcU-uT,:KSI4mkb=*43^$DTImfss%]P'^_rP-ZHe9i;$'R4mS.d'#P(ODS5IjECdFTe.1<bj=]D79KbT<QfULAjsS90N4JLD-pL%3)2\qtf9qH'4MaWq`j&@fOa:Dk"iZ%ogZX62X#:iDf<U8'p%4`\b4S/cm:,gfMCn>](%\!o`7SL:N]#uN*ge\<:T"3m.Wl]3+>*'5IkBBf@;kTrXXkOe"GRThSqe/aj[T;%\Qd\"IQY=/q;R[Z>G%N2m:)(Ok/oM,pOA\Igf532]=*>c\(L[OP?_o@gIC(s8`$i9]/@\b@UbS:A!=R3q;7l;Y1K2.GANFP?J]-X%s'IV)HO]T79_(V]ls6%?O>/K4-^4JN4Cu*%bm5)W>RQEpX"3\eH_5=5Dm`)GR>JTC^eD^:rkn4"Fghl($]n_XSCMj?/ok:>2>K;d%C-$k@AQqlq[WtS+f%T$#0`IP]^B\thBa\'ih_-&.S.<R:j2%Q6-JS?Kl&a(gd(-c(R,"gGeXVk@AT'I$r#d)'@;;bcs6\CfT74KO%"<-o/%HHi>[st!jf/"'fF9RX%Ng]c'05\O1pq5:r^]4$U)^!0Mh=gj,p#f+s.VRkl.7([3Gl?b`4>8n1Eq&_So=[Zo5'XKo2t]C1%re(6rFjl,O)2:HV(kD$;hDibm2uT/h^#p?4*q!?`p%mCKrR]A%4Fd"ghj`d0IJ<Qo^"_-scYr*T&*;K*2GZt]gd??jIQ@T1l(PKR%iJ-+"/H>b+^Gas,T>/Kth:Zb:qO_+RS@(hXpp^1kWVkcmJc<'F2F$*sr^XHn"GOVE#dNf^P0d7E;j1"H7iNVJ*M:=PmGCK&n=(Sd%SMZW\8D4s[&EFqnNf,X85MT!Rr4';P&]S8"jWmqHG,,a"Qd\\^j1'pqCNf8InacHWV-K+3e:_joV%S?uSJY#];o=-+o"HN5ouJi#%Do0N"j2R8CI9p5B#a3A+bSaEHSKX4Q,>q:*=1muCMSm`t6L$%hOR@6I(3ZJ]O\aLg@!q67Q/N9bgaNt$89lT%UufUe4P#'Z`?D#M%ZK'apE:?ap%p#RdlGegCHQ.,!oU3tm^6L_XrtG)*lpP-)4>"2r5Dq-RIII"'7n3e[2P7^0o]-lljRJ3-hCAnXqWWa<4#t?4Ir;_[%F=bf,;**W&hRmkSiZJE-LePmb4'<U8D/mc!4P:Q!8U7kVpsF:-;rf?=k5tjbaIK-mB5Fch0^;Z6C9K/BYer?km;;d6na4?fN@uZ!%eOGihB]Ri*1/QS%C$j!'],as3=X\0Z^3f[6Dsi!mI<1Ka\Vd*XYGEl5E@5`AAQkTW,J',9Ke@_;F$E"2A5T/&P$bQA6p_BR]4&nt%Bn9NKKsDo!F=E$MRIh0u,g,-9O[pN]7Stf+pd3(.4#LXG8!Y7;ijh%3='uSJ,ETU:6jo;C(94GPkA&sS5)2`u"HQ2#%k13Q9$(7q%\UR(:+JD:,peh;?.8_^oq-s^^k!VAr6Sam0ba"o\`Bd/<1+JR&&9S">LN:HkX\"kdls`jdO>3T*CU>45bes>eb)JJmF^63q(ig%+%jZm;*SrMcDKn:DRff@umU74R;[8\b-&FmlC7WBTKVSW$=SqafpfqX,p:0$8/)R8E.).VU+N>S1e>#@*aRO"><@,IbQ%b!%$W6f(,%LiV$dK#qN@8mnDRagtL\'qZUdaQ&5P>`^\>Tmt5RP]=dU`ZrE5UbJeQ%*<MO":Lt_TdK':)&NF.H^(?^E):)V7a^ZQ,r-%>!RBZ#%<@15*.$O!(N$A[hPa6!:I*IAKW"I#1+-(@lX\[^[j<)?.DWDmW8D/_qrhW=.APdNb$fha[ne_[!8r?f]+)8$#We&P"=hL99'VT]H%Gr`HeaM8$I',(BN%TZYe!\h)\oRGdPdb'_h'cVSC3m/#&i$<5mPiTt<P7S2,3aiY+oVb4oA_AW/b&h#)o1fSb9.dSidPs_qUjIgn%_kj*NK`\pXL__Kel9dqWNfAO-Y[uJs8Y;RqaWf1b-9G.7^ZEKSFDhm?=*/BQ:_"^=9RhqpW-0a/8#JGI<2Dg:f\u?M9.9J:X&t84%=uc^:!5Wc_cil@CYqa<PI@lefCl0PKU.c)S%5hd-dY?8:'Xa7HD!Js,=cg[tBa.k:U*/8/<%;FLA0Q`mE7,I1;>F+XS"C>dRotrV%cogOO*F`8'f9SSMFrdu\&)+%P3"[0oh;GEjKMc#OZmqqWH<`4*dI`BVJJ_-_cIsE<'m24Q7@H:YZM7+sMWUh4GpT;94Jd=;oL-]0%j^_6"*/U'jCFTH3lmU'fnnqZ51k?5iil??:YaogaAQAOcbh=LU;:VqbN`lnHBc0o$e:@'$7-@Kl[=WsanX5.*2J\LMj(N2E[e#60%RLg^Nb_VJs/FpjW.8cWnlDF#?%'(MNW*ffDVr_G,B9%kJO34S%m,^JmJFPXeAZ:h@<b0_-`0OS0f;KUM4/#7oX@TERg%G[,X[a30%S9;(P8u><;2FATX$Y&B5)(9ASK$Z>>3EXX)WN?UpJofY8P1;scmBXqF7knY'W*lo&Qkpmg8Za6%k!(e4m>B[.o=2SoTM:)*Tp[Qa%D?)H)25hrKfN:ch2Rl&FMU\Uj7L4_k/lA:[-I<>9H^g3^#n)hsZHCWe;[?]gK;sI`V(WLij'`u7;S?-f:FouhY^de27PCOZ5Y>On%!O+k(9u9h;e/<HZCp#sr_l[O)@'4HiQF0`cD(a2Ontl\j2@:Y>6sD7tXni=NA)!AO9)jkA\c^/6"k2C]N'=;>X2F-;&RT(">i"Tt%fj2W"ALkXYC'pNsJbKq4)Mln@s5[*GjueKFcpu%RmSrdK&(B[U2\n)3N,&<KJZ!hp'ldRqp'PFcoRh!]\de?=/L4U,L5BoI`a+dS%m.ING^)Ut]d+2!oB&/:IY><8YWmp'"3J_P,Q(LrT3J\NH5s6^/<n$?(X;.,ec3thQ]p:1fG8:U(f7Ecl#'BM&C=Da,VLk[40kmnR%C4]ISe5./+D-n0Z5lhQ1<G,Ik@E$.e;\a('/]t+`[B`Ij-(+&*g!qSt(mgFdmX/[A^a?6b2l@@3#8/S!KncDlMA]'&%-gI2D1q<m%DqE\kCU@jW1hJ:1<V>9@&'1Q4i90O'*)%cY<aJb3[-:o%:OOo+SVF41a]*N6d.SB']O\.o3[MdN*g-sUa&99S2Z#d.=iD.g6dD53%4o#M\H:(qX/4<>*&:=.=<kNX]o4o!29UX][ZYE!?7VJN=<c'WD"Hc]J<'Y:@M"ln.0"(msIDP\8B6-D^=N;:VHd!J6mO:"j_9EBc%/MslgY].S@1@n;$.4hribbcAD3lN<Yl<K>OessTR7TI'0`-K)C<JY<4EMKtIUB)kPSXtN.:M`nI7QRP#LD?(^6"`VQ"RdHP-hNdP%Y&72eW$)i5'NZJ`Cftid%IjQ:K$,9t[e7gUi<JR+5mglF"9H=YXtU+=g$%s&&RrWkOT;#("_WR@CQ"+b6oJJI1ZZaiBi5H(6e*bn%#?u-\`Q#lR26!'s/6fbeV2e:V[Rj*`38"TlT1V"Q2J=g`7_-U&DOY2oo@/i0\`?Y2rTaGkCR%W&3H!C5VNfT0O_$^'218,?l@eKC%O,_>:k"L%B[@@N$/qc84*<8r\l2o+T[Fl_'l36=6DOkJMC67$jNUss1rKjAF(WR-"5uhJ;@T9s5c$<F%oJ[_`AuF(=o2DBJ8l7+_%Q`/35fSX8h'skoNE?0:2%][`.VZI.WP8,NDfmu6je`/)=o!1#M,t?F-K-,5$`O.@VN*c10oZ*1t(a`RT5Jk@8$ULDR`h[9GrEC74%e#[e`OW)1b.ok)ce_P,sIXi\j=e=cp;kUr6O>jtfGU!]Q@F4fYT_PI,6$m?,fqbu[n3Q/$QCtt;f+`)BY1d]pG3rP76+N*"Im>0S%A;j+L>##K;AOj%A[$%pN7[R.2).MMn:s>jQ7-Z4)bZcklO,i]KJ>o<8UY!7PgicIm-'Pa$l%c5gUT%2'(ksTe\B4ibR\K?s99,Mf%(.]980142dS$^809r>oAHd7AGN58JH4u0WVqK%<=3\4qGdA8:QVC.Wr;!5&7i7Y.9@f1Q4"fMcm1m:4[>#\^R<&VRZ@$Z#k>G\JZ%L0e5DHEU%KWdISoJ7gaJ>srfa<bG)e#9mM@IAER='Q,VoUTb%UW";hi_jJY[M;/<2<g?ssI-&&e.&rrs0/8pj,>:]ZEI3R84OLj,%[XmgG,uPu\e+C3XOf+`>G`0m!PnO6VEb30c'QMpY=2[L\Vnt$a*:3etiJ<j<,)YL'%0I1^g(qZO6gU"(<2t`!omU8N_SS0W4cpp$%U_`htaD//AbEK&ucURfm@B^Oa1[[d3WC'Q=6Ee:Y;Rj$(>dE4NX;oVss0UD;jpg0JqnTuMH5;.8J#@m'l)nIjB2X83\?+"%1[cdJ%`j8-9Q.8cV*!iqUhT"@Y4DT,"72%%8.FR-kcpBK>A`cRl*>h<Uai8(OTjaJU$I[47)Pch3PYneQh+EWB0SWUB8$o8;(@k$s7o;2f%BXb6I.jppoT62$-h-c*rg[pQ+;f:<u6;J]gc.RK5Biu@4\hjMVQEuD(>h]fK\N21;d4-h-npaq]-;Ulag>N.f%`8[uit9rFV0V<N%Bjf=cjBtGUiC1]EK%aZ[.,,H`BoETo$'HomKE@a.U]eUdAokU_<X(j;iCEuG14]Rk35\=R@idKUWll[t`kTBJ/7d_YWi0#t$,$0Q%bSHkXK1M=kDDj8:<%LXkk[K)S-E"Zd2-R>pe/LsfB0EPsYgd1is-p85%9+V"m'\m\Xp?A>DDet48>3\X_,jg4&XH[Tc"(-</Jcjr%N$WKM(FUWE<jlFic]NgiQEZ\hK:Llk68VG,>,%DJ1AqIF"W=6^->f5-n1_uCC[H2iQ.6Gi@j3-kHDbao,p4G2&<rOG01!;,#g:@(%P0oEN%Fn-VbR_cH)5_q\;YX'`BX[tj$n=eWXcUU0NE`!T.W%@8grT!_Rnp"r`834^m*0!SLt!/D5\GNQIc@"0V8knG.k4%DfGHkJ%"RTRsFZmp(%!aGWiZTP<jh1"Kq\2dq6NB>#knPbP.RWS?IRo:#gDXa(23:DhE(k*J(qH0,Z"M]],8N/n@2r3`$6O[>QX--X2_oTA%VrB:1,ld0eg^f<r^21[=O;SnbKheidK>uIXQi9V665BAH'lSc%R'*/'C5(BAB!I62Z*tkt]sL;#:1$F,%L%I[7+0Mab(spl.0_QK%hf*4nN0>&XH$f/ab![f_&)ok>p7fd$;=b6<E"J`uH_Do9"."?7=K#=S+Y7(H>F^AWW2rBiW,AkVOeF(\fp=Qc?FdnjLjG>O=H(ZS%'jP0D=$mf:>8]kgZaa\CEM??;Ld<+3jN3u^%Aa%BBu#97)OGuJOMC"`;/$DX[7&#;2jArnV'qKf1.hYd?_\\TMFO@:LcpV874]O'%fJ&[J-P<DJ,\BD?/n;E2r[FgG6P*c;,6oHoPq?!$Z=XN2QL&9/,ETMu=H!leKW;^-c)DC9L(/qnc2c]C9L6o6\`WZ1k<^F3@j6)U%p5KXtN)S<idQ[`0''!YN"#<VhF@2+2j4e"d2ZP%*,'0JJpshdtW#Ut%B-$I45p+Mi+Fl2`TTqorX9\hP,=-Mg1Lk+q*Hg!cN[Y0*%NECsEStYE["bSkDIQOd15f<m]dfI,:l8pGi*]n[Ga^oY?;2=g['J*(\lS3?Wf_o?t]aSt`8f3Ul(,_1/(qH4?,^&4>Ce;FfQ'B.F%&/Ao9lj^OG?oYt=*"p`F(H`^c1a'am6<IOSAu(nMAHajn6_IW:#dt+<h%l[as->gF.Ti4)M'Q4M6b;5GAHamFC"1'C.6iV?iH55?%D,?S0Jp@pne(AolYISUg!dp-1=Fju&4qG5\@9:K'W5/ak<I"R0B!u17`h+1:_CWR#l]A-X7gi$n7Z1BnQo-Z#`$/OTZGl1LYN><e%Cg]4+2O:GD9lu"Z%lA7F_Qd,Wd/]E2)UFhC_$H#a)n@1s(Sb)j;8LB%-_E,<IA=I8OL%p9*CaSYL=Z%?!q.dV6!6aZ8*@ql+nKDN%%2PN0"YKG*3Mo(jl;OIV`]W91fNb0ar!_W0#]0(mMj6(LCZ5O0jU@9J_GQ3U4]5W'3[JHk])&)`W>_S#4rD$D3bEL@E+)!KL/Go_%C]dL9^hRi2jjuf,grQ:u+a'L\R]*0;6'bR*!*.,X2Y8uM^5)n$m#ao43KY"8`>TLN"Qc9c9Bi(#KI2t^`'JoXR?HhX1$U_UoVb7P%KP7ncKWoP#bTI?/&Kb/8Q!,"@N4Hp!TsZ&+d\=b%aUf[m+\i&V6lmg6Z1-7&g>[X(LPfhVm%B%$[M#.-WYF"C;eAHp)@50$cC'oJ%TZ*Q@P@=fTM/!lTrtM9@pqEVkrmSW"5hn=6gH%(X#joPG@0&4r6lfT%QkJX$P]O52#>5F.@aWam2rRb>iHF6[9<5>^46j(rC[o+B%<RtSbSKum+`/#@H0`r*,FYe<]XbqrI)S,]>b-KYt3LV."]#dg)F^%Lml'BJ<CbU$"'LiOHl];dV$E`.XW#PKR4#nW2C9@f0ABh_[%Tm;B?X1Sf<Y8/]rMi"#F);@S_(Q?b=n;(5i%A-SfV:O0uZ6@L2lN#o`BrsnD=@=s]UoQb\CJd2Bi8i+1kS-!1R>s6WE7*JcCc4"E%9`Si[c3c[jD6N<aoF05F<XtbWKUCp`M0p3-IhWj_T;-Dr?s1G+Z=FLh0MR)I?sR@em-7&q9o:$8A_guunY6DVaCIm`X`V9IXM;$L%'/<6mW2TNs(KB`\@l2G+U*mfnW+H0rec_/#M0E\h"4;obp4>i`)Kfa(+Z<19")sO*9ch3EX4+&3h"o7])!<p$a@&VB_UF#=1=02/%!d>.\m<0\6cD!L6lofX/Kpl\</A*XH&?X_s)tl2hYp"u4/icq/#G6.g5ued[=aP6TNDRMn.8-ien]Mbsq*T<g6'Rc<Io^,;74:k.%(@@K*qr6muX=ZJ`\MQcr%>Kk:dLu_KZY]aY$nc96U/T?rk0-GIFSHF]:2./`0`1rNDs],5aHL3MdR(9?k%dMOM5Eqp1/c@d".!Ea%bVUH9)/6O,6Sm*ocW/ockW!_a+m!KQmL,Ke.4ca]JKUlp`+ep;<@1Z+f`Fj]4jmrCEZTP&R5$MKbSZ/K>..R>;0pi*_2>5B%)QVq%THb5Y*n7R6Qmp?<Rk\0]8oDWq6'rAr[NTK5;32$Y5H4CmKWu"Qc35)c),$jRWLcYf$fYUeYjR`5=c'DBID1ak73ERmF[aag8;+jC%U/3P1\fj,He^lil(^0[7A>H-TO]%4T9nM4EEHmn$V=U`2ehjBGc+7[icDlo-C(%7s2aH-"T$$uX0N3<,r*aRMk)1F$%qU]?=]Z7U%%P%n-T[E_<M(:B6Q4FC*F]_IpPq%P$8,1+RDQYT?h;+tL\u>4Ee6t>kJTq1%8[;SpMB7PM+C_.)*TSqsM'f(JU<1b7^;X-8Gg#l"%SEQE[6k*0\D>3?Ma?S1dRLV2NiD$JETFR47m@104;;ZdW0G*Is1`RiYm\H']V<kLei'bIS/-)-Y<7KPr@5aorBep$ocF*m65#WS9%D!hoC(/=d4K?]ih</W30m^\/]=GN"eTtVh0d'>O.COe745o+Wd1t:Fl7SP)DNVnh^@VN&S2)-61=,WB*iY8>r3AtD!m!Q^^`_OP8%3fIV`NA<4]24JT7"4WBKPuB1KgIb?2[ia;KZ")![-X#5Befca/CZ2ERm87"rVn.q7'lJai<aWm:ORt#G/d`1;0Sm-]M/0Ie[3,VI%:8eC?/fD&/;pIiURR[rHKEeS/Q?K^6O_(!$MF9o.A4hjCPa/=A:kM$5ZFnHu%O2E_gD#BMYB,EAF&=P.NM7H4(_D"DmO@`5:=)\@%,dX&"'&O9_'c>+b;P\"k&;HnN8lHU#)St6.ePZsPCp>>':SpDsJ=;b.,_C+_d!j,>l@ME%/N+SJXl3_T4EbdDVY#$MJd0;&1A9%=%42HFVM!k8bCiYPMkZ[&&9Bq>oGD]/I-e=OQiL7U66&k5)-;NL[+bt]Y<Tt[I_:#cTUg&8B$G:-\(o([`*"a]I*bWiiDBKi*C3mW^%da!XWWr7ne$Ze<;r%\t:d3)_f6KA=h[POhsHtG)biJ9;DTYif=3tZ3V1P0X,[2",i<(e-!9d!`+%&%EXlDMIl/kS6i`g?GJHWG%t%"<cD],=WGU<B^WM`L):6XnIjjH-%rM*+YZ,bZ5:f9Ot;>;0']N0FT/#4BQNt1/Wu=Uh`6=a%"LbB=sWh"#VN*o&+,2MAStPKV&Q>%%*-Uc"Gr#0?T']O1KB)GVnLcs%]9cUegMhaU95nZ%]nn)8M-@8_sH`&A8[<(WlMqO"eoFQjJ6B7Hf9D<I1E#mra9`I"gFIMSL`-g%A2X_XTF$=X")oj:fW:hG'ZOI7+mqK_,I>A1#o9G(qNThpKSQ7%hl3:kVlhU_$ek<1=>2&C,QIg,$V48-6YuiYCNmefK#6.N!gZ3@%X^0;LR_Cmg]-P4`Abjg1"a?slk[_bhbj<R!g*JCg7^>1@m'me]&nrt#0iaE3aW4\6-Yi:b;b)/;_e9'`C0+@M/?Yt',eQoIpEl/=%'WJfAG0q2i<DQD!=RnFU^u1D6#BmP+alr>H+"cD:3W;kjUfkJh10_O%R*l"#]EK$A?ih4oT[=9*1)_ak\.oM`A=]b^=@e[36rug0%aYpQg?U0BT.ZYEk*).Fd!['g<q[Qg4,IZiWVLMo`0l=k9<M9%>Q:5Jka;diR*X4u>1\s/a#"1t,C;P!QdJElj7X-:srn!<9#SZT]%^-H\@1Y],H/!VPj!V/Tbg*-?Pk`2+kd@Mi@15JiOqE]ed4)I0PmAh0HQIRoYA6gflHHO#sfud^h0I-T3D897cQnc$4QiS/b[V-1U%)Z@_sKEMl(9Bi#\><=X(NVGUQ\,.*P(seotW_HgE,_u#d.QbXYK=*b9b7X_4HCXjcj9n9?ZEm4.c]B9hUCNU`7r5BL]S6D%0P?16%JWRAEo?StYRV\$&X8]K0P,GR5A$CIl]Nno%Sc_O3'<i3q-3PisV[f(h"Ymm<ks=9oOBSCl85,qe7.?**iE>apX^#Or@G.rsWn4VG%#,omGqofR:FS%0cd98A#8tXLCh()T'.9`M)ad(YAo<sA]P-lf]pIa#mF<6*u/H^*25t?aESoqHQ&%%k8!J=,sVI[*doPAj<!I,'M%'f0ZtjT6Y]$u`uER@c4/UOe@dPCk\_P-T\(_7F-S!fECsUG6*!e;0Q>VjgqjmHAiKZ!?DU=q3hkVl7kK7_T<BX'kY6SYRR;cg6\/%X`T"a9LfOY[Nfn@W2&I9"\VmNhXreFM((*C)=a/EW5hsh&hB,/;f+Y%P1U#^ITBUY[H/rPD+8=mpXcK30XYQ^@3*7W[tNXQFi*Fq%Gj##&N$2=5)nA!AZ<u3)6a@4]>GhFedR3t3#fO2^d*#Op'.P44$OpeZApUMU)6hPG^4So?oc<[!Km*,a=PpqU+(?R?\>I".?/Aic%ra!@Kjb7p;YaeeV0Hc9A0uf"cY\5s]oOX._*1*^abl=GC-ipd)PcgF1<7aq^Ru&\V]$RPh)jHNCUW$e7<RtS$)hYW*6a-[KX-fO:%0pQ$sBu7"feW"MgPgu)Rl[%-d__o-p7KOBZV_HHcd0t0X&95j.>TB6#g@9:&@N8PYr7H%4L3<c)r8#A^N4LQc,1cum"NnPUT4VU:%/Kh3aJeKKenUn(seS0n*,:>`5mY`eYh`8,EFLXWps3N5WaU9a6Y%2@r@2p'7"7j8""KY[J'L9reU7@[&<ATIL8ZnMda<lQomgEqj%4^K*Z`>'jrEhX/j<,8n^@r?!kKoRedc&0??=,gNa&n!8s4^R@Kp.L]1rRA359so&3<_RcV<9JAMD+tcRLBD7;C<HlJAll7n@n`Xu%272sV<QPB_,*sb.2hG.h3Tf@S]c\g76BjD>@?]/;:3O^4>Y.qV9c\W+-)T.R/=A'd`k<g^5$]28:SD?W1H,@^!?aIJCg2!im[BLp%9K?dBqC9JY:[N:,V[&QT%TX;sq*Cil<'nIlihO4c_tltKXk;TTV<L:*78.!YL7u)bdXlf@3c'G7@sXXT>KM3K!UVb)57`Hh_)Olr%Sn!=!A.*8$LbI<s]M)V_`Qm.r9GO(ZUh>aj=Ms?;'B.1D36+s>R;&B"c3AS6D&`til\cagLY1s:Toi6&0pu[1o5Z]lha0E-``'sK%DS1-2iRN5+TCa0[rZ`)Bm32k.U,sQr8,KSthloTX<DP7jB8673\[JsMc+F-fa-pI!>H;kI.P-SB-6j]+%)#YOLo"$cYmDXf5Nce@%>STd`1s$3GmRPWn<Iic18#+Jk8?m%^RRtupnk`saGugM"mN-+E=J-i@\A?KPL]Yoq\3UG\#tl3.a%51'+ZhICRB2dM*MpRl@'J;e%.[>a%H7Dqk_Ge16j)GcTchsAC+tAeKYIMC<)308HM;t"q*\_*.LStS`$QWOnq20p*mu_*AR*GA,4.FDDGgJpW1ir10.uS,MK.^+Z%=ZO.=fHL\>g+[6^)u$@/I3E0g+bsmsNFudlcBKtib0-Zu,!OAnY`)GgGrVY^'B6C7)"]3g[nnD'CSm]6?#4dE)qCIb0%kMrb$,F/%Vl93c!mDP&8LEf,-GYL=NTTLEEdHTEl9AC_T%c0\5tB7E.J#7?;C-PLVe#Rj'Z"j"aJm)h[rSlNEmh)G:7Gc(%(SOt*5`DNCFc4m%2Q1:ho=Q)e,Gpd/.#hB/6ng!@>I:b9o5Hb>Bu7G5H7I\:0Iug=L)UtIB(+sR#KG6.@o"Fi<.f/0#5,4o8?R%2?&NiB669]"K=6C)%AZ)sRG.=Dt?/+-4:u*hq7+[Ts_[DR=T$r_h-$u_/&oTdgEBVm>p$FZWmN'-"hB#>G8k71aiG+RghA"QM]MU8T,L,>T2\AA9?;EJp%2YJi6$6fh#1:!<!A[%+]3fhY,Jdab#9<'*)59jSDoZW]OZnJQ'R6OE`$L_K7O9ZV&hU*f_?[2-pm7nZjK?i_$RnbWtWc[q+:r_H]%hq*L%WnD'9p9Hf\[6$=(Qhs0V?+Q85,j:X0PaenUF/h+N'fJ*HG[G/teSR"Hft-d:kM"4D:=HL2GPfX@__6Yq*6j;_Lf',%&VkQE%,ms"I!$I`VK=9IYS?jOPj5pD@en?\X$<dgdk`N%.'4uis($RRH(pL_+W"'d>@R=IKc>[UQ9"ALB6]!S:NS\CKYp'!<8]s`K9MYgT%Fj,`cjt&,#R8F:=0h+:R'oJE*BjM\M)$jcqpGZ\0RensB!YZ'cd-X8l?erY(><(!2f=-aI9ub>?/_PKIhu]:+e^7XTTMmnTru%:h%r)2^h=0\D;j[.XCR+DBIA_1=\*h1m=D$qlm0P,?EnNt\'#1?E\hoPhi`IHhV;YfcG9jaN=\;n?/\k6BaTG*U$JGpi5>>$#maOZNp%TsD)@`uq^bi%aJ4PWU"\NKV>W['esL88Trg9P\D[QAOu4[$QR.OkVq6J!o05N#n&<7`j[fgaYb5+h;I'*J<K\[o+s7s1m'tf@Ks_%_Ah\gjkZ]<9%"WDBlCY2L%t)O`@"a/miGca-S#=Ehh@I"?e;Q*SR3\\"^OKNpZQ)L="3Z^or`T7)KK*02=rl">p[Q,?)G\oY*.j2%=(lWV@$rEMf<@,l?UL4`>p[`3ctTfh\k8JGTG(&&2(XsS$`NOO[S!4ekerg'"\U-;!]\TkI=GlRIGH<Q)6$V.]`T(jBaq0SoQ\;8%8fj$sf94/tf<s[Zk]N+P(;[/W49icbK#](g;/h5$f4HQIm><Mpm5?bMSSZo0bB1?+h(mrlkVD8&k]'.;'u[j^];o$ULNl>2<U.7f%(GtP0rN7X_hO?E4R=npl_*l0oTG-Rm2(V\rMB7P3fASgr*H1QGf*Q^Qpt$s?PF90\b%i)[6d%.K:oABEL7hUiRA'q44H^a3O%%N5%_;c+"g=Tn3odG&IZ5t;nl$B#C,OBOgN^MK8kPm;ODe&LmBmVFV%-$+JH\o>c+Zg0ZY>]BKqHdNS*!0LEIN/^PKR8QofD:Lpj6L(o%LWJ*(s)fgK7d[CCq((U_)H%[@.]qU'$RW\.C4BO&CJ;i-,X9XURXY@/Lj>Yo<.Br]ZuZ]4hkQ)eXA]&`g:O4XX5lL\<Vdg$C&jns%(Rhl]#gf?)266u`J?FV.["d[M^m\$"l0"M>!753Z##Of6T`H`jSDXB>*[a&mjc1-"5f)K7#Z1):5m!95?C5-:fN](@cs\n/\,[h9%'en!d`s<RH-laUJJA**MCnS*,<s&[UFc=[uY.A*G&)Lc\XpH<Y\gENCJG,MRRUEu63e\%ZC06NliIch&etNP@ED9hL?/HD3gHBrO%mIKibc_ho'TDRp5b3..D4(s+)J\G[,6P@Z\:-]h6-F`.iKh6"I6Xl><l[uso:RRn@*bk^NLE9m>'!-4F1hYOS>l1F<k<A?c1e.t1%hLZio9s>iU]RUug.IseE;XGtIK'6fE(sL?I1se)8g,X*MiB7E2&mgOg^j7W/6e&eQJ7o:bm]:VCWd;PJH)i'*c#dI]gmI"T^ssZT%=E)S(HkLfdOIfE#Fu^[i-,&+9=;[^)Gu%X\!=;P0i-e<GgQef^@"stT5Oe(phAcc4)mKY)Iu-Op1cfr9f=#A'$.J3>:fDCX,HA4$%L+&EW,h]<'C]_l`a*%\+K`LrTpXtZE/Z_40WN$U[(]t3,fIk[k)"<!*BSXBRLilg46q9'&P>CdKLeFuV<G<)kJe#tO4)MAErc*9*%0>4E**in.iWF+kf#_deI^fMBG4upV7<&1d4@Qds@,AbtBo"kqZh&3SP][`"$icb[fr$a2<FL#M@TVpS+K@ZjU"@8B\?,T?'LFNNN%(7uMXonF-rTGG;6am3a0IDrq-LAoQY@uq)=I*&\EY_Z+!\$I*0=X^B8L](]5o@TR1(\DV#W,%:Mb&:X!h'14AdB54SX*3-3YMraY%/1.XU5*23!ARu#7)9p.__"kDM8mD+F(PoO(K:*'-8qR<'.SfT?gb=0?%W`WJhI2!+R]q\8D6TBn)UTAfOf2@2FI;E9\<i!@.i#[0%G@7'I._npMcF%hU*4jM6O1=MT.)O:5Em=oU$e'k50eC9SMbf1_>>;cRI+AO2qG%`jBGaqm7U=$nGZd+R4iE49fCO;F=bA=Oa31`'%YS1^TmIeiAKCO^[Pk7Ee+pI6CH;^)1J>1.RlkD',Shl)C"n_nl1o7D"&H[;CCK!lq$JoX$$=-s1)OiQQe]S">W)[XKe[8:bG.L[e%lr9(h93Qm#?s.cpf[#AFa,2=$`M\HTXJQb*cdB0a]?#ifp!AFVnWMG=cK)rfl*2?TMqU62G5FD@(o'e8cO<hoc*uY3VZB=+D!0'O%2%=`d/d>F%1bJmdXRu)#):?",]$Wh8%$1*ZO*/f3knB<JW\#?Bcme)t,8KQHee)SB@DukbD53`C?nC0SQfJ-95ZLrdSl*Zk?83E=%[o#H]6N'[fUaGu%::H0AlTI^?iJ2rY0hr:k@MSDh&Ls5:F=%oFHC01YSPG)WQdA2%X2sW7Hk%Zq'u@)]cDrG>d;))R]38ZTkolTc%FAi9SS#^/5oY%TA.PGJCQI4ip\A$*XW\oK'QZD;kY^IR/ElDi;HYV8<S'?ZQI>4cJ1n1Q:Edq@?C3*C&lmCq:;k$GK>Lp'ICbF@4%8]rPek]h*`k%&N*J7Y-mLbA$$nm@)E/Zq,PI'^eG-E8IPM[Nf0gZG0l@1e#0a3EK#_KA_LCeb0NL/p0"1UnneF=<$6_,V?Z<l7K<%/j]+k^luUb,L,030f?Hj:Z:S&Y6J(QH="1h\(CbgY12=&!8'`uC2Y8WcS+=%p(m(K$\PR'g0:tlQ.IRdMN'$.(7:+ni:ZL/;n1OC%WWf9n('HlmA[8d)F8QGk1Uqs'f1[-B0+bHi-\I?=MGq]m)-iP=e\TMgU(ComGA(q]</Y%Mh[D-u5'Uk0)I,gF:p&,=.J0%c1%#H&%N"!%VqPRlOQ['pfaI;qW%'E3g`VRKs(KY5=gIIIDeK`>sl7k0+.Z^h".&b,(\d*Z'/1u`/&%=KU$Z1c#&'a*C]4jRW(0<ric_-Y/%>YksBk;8))Zd-n'G:$DQV1*\r0pjJpj('JQkI<-H>b'lP'5;Fe)67WP[($k_Za`'?/2#Kf%+2[n*H/=pS%Zd@-Prje>S%@P"/ekd%fHgXu<`/5,!W>rJ?W!@FY#upl(0@@0mPed:X5`]C_:hJ=CIOTU76-10414'>i?%YogBqo39s,qILWYh`cE#i;IL?pUj9$1aS%3=>%1?FS#[#R_<qAFG2e2&PWZ"S0\CS0^Ho*HpKlm&_D4'Y]"'g&JHN0n4/ng=<C)u.odngS8bCL7-t&K7'SNgkZkm0jH@VrY`nD7l3V%Bfn.'M&<+E*3Q`p;Egkrofo:Rnq`Ya[`&Hr(s9m6R$BPqE(tbndh3Nf]T0aVbCiT1JP0e/oq%jnT;8>e[Z&Il(&]K9)Pl[dYn)!O%=N'#ujr<#/_\ofD%bL?G(T5XJWU%JOGeK?U(FS"e_Ah]"EEXeQM%b?s<uP^k_?JK#/1q4`i54r4p/oi68LHU9=e'>`4H__FYW*]3%l,9a5d(Z>3M:6M"k2Qk2+LqI$XHTa;HZiN@XF`TAb-'@82XHNmIdX:G8?gO<"8X3J&cMEI[#XS?BkHDI<%Huj-=5T-(D_aK]2DR;%G)qUu9<.uAW'(GucF^B.A/Ort;NDRLH&iIUO:)ru2KHO(\,5YA^U]J#_1`$MDJec5<<Q[8!>'ia+_bT06G"-M(dm)gcCPWD2Sq`O%X!nM2?S`3tNAEUGmMQs$%mjpLLYuf=B4p/i5Rdfnp_d$R8:=r_F&JT_=)DX^e8</GmHihWI[>et-mLMb$=7J(h-Or,V?6>#C:";)%:9-iQ?oGfD>!St.h)e<Je>S3q26^X/TjS7kNe8E?H_8Pud25+0Ogg=Yd/p$a:2\/PRPCA"nS!Yi[uB'1J),_!qOmpWfFEAGP;]Cg%<'djr@qhP>;K3W)*mBR+60RrN9LW#P-^^*o#E1q^>,8eI*Cr'r5NfNV9Og+N]JN]j.4R/tnNN8fBF]dQ3R;8L['+VSUnlJ`Qn#^K%<*gE7f:GhBJ8+j&WZGu+Y0js5U%pL+m\s]<['5p*On0bL=uH4;<RTF!edrkSfP\%TrIn@c.HtdcVMDXnV$1D6ZhcgSM<F3)OTl_S%6mJI@1G]K>(sK(d)n$;9aht3&.1]+EBZS_1P3.1,=h<>$*pp:%S^cUN/4PN[9lbuIC!q>Go]sA0Z$BE<h_;NOq5mUTn7%`R@c(qd%Rkd:9rJ,ZX7cCO[G)N/]jX%`Y0tSoTU$OgVhNm<0l`b74L,D=PX;QU(m(9QorI\o!\pj5fUtAZ2%(-4aZ;@QfEUOjqo")ju<8&SI%13^>'igW4`k8cI?He(h+oqf=ODrJ7SEh7S.fscf8(27X>#GkG30j3aiD`m!rijr@<`Y6&mj)"$t`Y392$lsN$VX1+$#?u\Kd,F]8%Zt(TD*_fqV*L;YIT.M?od7Wu:KCD=3EN(j/Vc%glmOT47b7/4p()Qbo=78Of`hmHeG:e"M^[%AKG=p'2r)g16c?7Lh?@4]!$t\=O%dZhsl,gY+*cRXG-k8>@r<T0P4H#+:PGOpchO6FW<H!Vp]bqhRq>8MHaUhlsA.(uB](qkIQI<45?NpS@'*@*C(Unue>&S!uT^.'tU%olAg@<$S`&+.e=8g\)6*W:K(W;CL["+d!nV%liQ,p6aSLJ^LXQM`L$H.$:;p+$VMrT>Au0_=3B7eVo*U[sTr6U]Ge`VjZB.R:%s@%U)JEP0/AZ!:_h5N6gKM9R*_Q9&aU4-_R87"+jO>U0UUglB2"kn>EHd3q?Cu^FZ,=cL:l^f)5\>]H7\=HlsjOV+-Z6>nk=?jb<B2F%N5F/h3RMGN'/?t`[ljsXr'_6EQu6'WM3%?^(F5!Yg;R-DfXDBhL^T!qjo1r1J)!mqAu(P'$O^OX[6q1'IB\m$K0gh_JL<Tsa;cK@%Lk3+-=*^Y.o^,@<H]&Feh`XT%p"6K9`C<d?=G(\c'U/)r"ec5rg*RK/em)80T=0YLTUo,!]FtO(T9Go#.1Bg/+ne]Wqn.&fWArS=%2)#3WoU=dh!cLi1_Pn:moJ#D/_L5;)))dqUKqfZ'R:SOj!lS8m9EB(NoNVOdihF]YXea+0%XRkd2KHB3\9ZdLn?k3FIR19!.^jLF%/3b#CB0bqGea1]ZTk*CDW(:k#9m3*2<e#!COIVHK>l:*>AgtSlib'a,<K,c_SaCK2Z`YicO(caa_M$,[=)LSmCU)RR.c-15Y/P":%CG*4/Rn^&rloJr`]lUsNX_>8KqIu4f\R"#,>G?Ok]c2N9B7DsUYVVuD'o%6^(`,iR&*J*I^:gpb9&Z_K?eR[T%'O6Y$7gb"g[-(=%^LdM)2Ij'*<e>aWYoAhec>uC8@uuEK1C89;o(0nC-Y@$-JEe_PYnif4!+G.*hM08V0UH(#blTSc?&-\"1A>T+K&tkS&.G")gBkh%%bp+oE8?7BCIH\C$]4S-o9J_ma6!\Q4*HUJM_3,3gZYRRlDCtM]h;W'ee4,isSdoOQ_08951V@LrBkHlI'XQ`L@FKRS0mLDBR^i1D%[\:YjG7NtFff4-Mp@.SJo-\mGrdF9NHQ.ITLK=tW5'qbOeVi=6hg"bi_5es0p0Vb+ieQ\MJ:@L]eZZ`+rqcQ3^Rf@-J+7jVIn@>?%O[o1"?G5Y_^Cklms)\&6YGA>Y?b^pZqUpei59a>$]<Bh!-&Q9KR[:ODqj!4#[RCE_klZf\_jlqjToJpA_Ss:\PB]Rj4T;0';UH\@%?S-j_*buX0g9&Sd=t0C8D<4s#\]f4IZJ)nc?iPKEffsSKA__Em:S#)okiooBY9#hg4F":(o_1lU4P5&R>fQKbl\"*UQd)G3%Xrp+%imkm-mm"S^(D&%D*^=f4qOJQErs'Q4Eo?~>%AI9_PrivateDataEnd